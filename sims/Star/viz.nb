(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     35948,        812]*)
(*NotebookOutlinePosition[     36632,        836]*)
(*  CellTagsIndexPosition[     36588,        832]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(\(AppendTo[$Echo, "\<stdout\>"];\)\)], "Input"],

Cell[BoxData[
    \(Exit[]\)], "Input"],

Cell[BoxData[{
    \(Get[Environment["\<ALT_DISP\>"]]\), "\[IndentingNewLine]", 
    \(Get["\</home/abergman/Research/DCell/PetscImport.m\>"]\)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(SetDirectory["\</nas-0-0/abergman/scratch\>"]\)], "Input"],

Cell[BoxData[
    \("/nas-0-0/abergman/scratch"\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(FileNames[]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ImportInfo[]\), "\[IndentingNewLine]", 
    \(\(vscale = 2\ 10^\(-1\);\)\), "\[IndentingNewLine]", 
    \(\(fscale = 1\ 10^\(-1\);\)\), "\[IndentingNewLine]", 
    \(\(idx = 0;\)\), "\[IndentingNewLine]", 
    \(LastIdx[]\)}], "Input"],

Cell[BoxData[
    \(299\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<phi.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]g = 
              Graphics[{Blue, PointSize[0.008], 
                  Function[{p, n, k}, {Point[p], Line[{p, p + n*k}]}]~
                    MapThread~{ir`X + 0.5, ir`nv, fscale*ir`f1}, Orange, 
                  Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
                      FontSize \[Rule] 44, 
                      FontWeight \[Rule] "\<Bold\>"], {18, 
                      6}]}]; \[IndentingNewLine]Show[g, 
              AspectRatio \[Rule] \((MY/MX)\), ImageSize \[Rule] 1000, 
              PlotRange \[Rule] {{0, len[\([1]\)] - 2}, {\(-1\), 
                    len[\([2]\)] - 
                      2}}]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(clear\), "\n", 
    \(RealtimeGraph[idx]\)}], "Input"],

Cell[BoxData[{
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<phi.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]If[
              ir`raw === $Failed, 
              Return[]]; \[IndentingNewLine]{prhs, urhs, vrhs} = 
              ImportFluid0[size[\([1]\)], size[\([2]\)], dx, "\<rhs\>", 
                time]; \[IndentingNewLine]{pres, uvel, vvel} = 
              ImportFluid1[size[\([\)\(1\)\(]\)], size[\([\)\(2\)\(]\)], 
                dx, "\<uvp\>", time]; \[IndentingNewLine]g = 
              DensityPlot[
                pres[y, x], {x, 0.5, len[\([1]\)] - 2}, {y, 0.5, 
                  len[\([2]\)] - 2}, 
                PlotRange \[Rule] {{0, len[\([1]\)] - 2}, {\(-1\), 
                      len[\([2]\)] - 2}, All}, 
                PlotPoints \[Rule] {4  MX, 4  MX}, Frame \[Rule] False, 
                ImageSize \[Rule] 1000, 
                Epilog \[Rule] {Green, PointSize[0.008], 
                    Function[{p, n, k, x}, {Point[p], Line[{p, p + n*k}], 
                          Red, Point[x]}]~
                      MapThread~{dx*ir`X, ir`nv, fscale*ir`f1, dx*ir`x}, 
                    Orange, 
                    Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
                        FontSize \[Rule] 44, 
                        FontWeight \[Rule] "\<Bold\>"], {3, 
                        3}]}]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(clear\), "\n", 
    \(RealtimeGraph[0]\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[0, LastIdx[]];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<phi.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]If[
              ir`raw === $Failed, 
              Return[]]; \[IndentingNewLine]{pvel, uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]g = 
              PlotVectorField[{uvel[y, x], vvel[y, x]}, {x, 0.5, LX - 1}, {y, 
                  0.5, LY - 1}, ScaleFactor \[Rule] None, 
                ScaleFunction \[Rule] \((#*vscale &)\), 
                PlotPoints \[Rule] {64, 64}, Frame \[Rule] False, 
                ImageSize \[Rule] 1150, HeadLength \[Rule] 0.2*10^\(-2. \), 
                Epilog \[Rule] {Blue, PointSize[0.008], 
                    Function[{p, n, k}, {Point[p], Line[{p, p + n*k}]}]~
                      MapThread~{ir`X*dx, ir`nv, fscale*ir`f1}, Orange, 
                    Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
                        FontSize \[Rule] 44, 
                        FontWeight \[Rule] "\<Bold\>"], {18, 
                        6}]}]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\n", 
    \(clear\), "\[IndentingNewLine]", 
    \(RealtimeGraph[10]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.03138349951127378`\\)\\), 0.`, \
0.`}\\)\\), \\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\({0.042565640225183776`, \
0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\), \
\\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.03138349951127378`\\)\\), \
0.`, 0.`}\\)\\), \\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\({0.042565640225183776`, \
0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 4 \[RightSkeleton]\\)\\), \
\\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\) does not \
contain a list of data and coordinates. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(ListInterpolation::"ingrdm"\), \(\(:\)\(\ \)\), "\<\"The \
dimension of the data to be interpolated in the first argument is \
inconsistent with the dimension of the grid in the second argument. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, \
ButtonData:>\\\"ListInterpolation::ingrdm\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(3\\) of \
\\!\\(Transpose[\\(\\(\\(\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.\
03138349951127378`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, \
0.`}\\)\\), \\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\)\\), \
\\(\\({2, 3, 1}\\)\\)\\)\\)]\\) does not exist. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(\\(\\(Transpose[\\(\\(\\(\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.\
03138349951127378`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, \
0.`}\\)\\), \\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\)\\), \
\\(\\({2, 3, 1}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\) does not contain a list of data and coordinates. \\!\
\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(3\\) of \
\\!\\(Transpose[\\(\\(\\(\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.\
03138349951127378`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, \
0.`}\\)\\), \\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\)\\), \
\\(\\({2, 3, 1}\\)\\)\\)\\)]\\) does not exist. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(\\(\\(Transpose[\\(\\(\\(\\(Partition[\\(\\(\\(\\({\\(\\({\\(\\(-0.\
03138349951127378`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({\\(\\(-0.015809003814665157`\\)\\), 0.`, 0.`}\\)\\), \
\\(\\({0.014066370949669393`, 0.`, 0.`}\\)\\), \\(\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)\\), \\(\\({\\(\\(-0.02329277121611023`\\)\\), 0.`, \
0.`}\\)\\), \\(\\({\\(\\(-0.12308356098663353`\\)\\), 0.`, 0.`}\\)\\), \\(\\(\
\[LeftSkeleton] 2294 \[RightSkeleton]\\)\\)}\\)\\), MX\\)\\)]\\)\\), \
\\(\\({2, 3, 1}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\) does not contain a list of data and coordinates. \\!\
\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Interpolation :: \\\"innd\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(RealtimeGraph\)], "Input"],

Cell[BoxData[
    \(FileNames["\<uvp*\>"]\)], "Input"],

Cell[BoxData[
    \(\(Histogram[ir`f1];\)\)], "Input"],

Cell[BoxData[{
    \(\(MX = \(MY = 384\);\)\), "\[IndentingNewLine]", 
    \(\(dx = 0.0625;\)\), "\[IndentingNewLine]", 
    \(\(time = 10001;\)\), "\[IndentingNewLine]", 
    \(\({pvel, uvel, vvel} = 
        ImportFluid1[MX, MY, dx, "\<uvp\>", 
          time];\)\), "\[IndentingNewLine]", 
    \(\(ImportIrreg["\<irregNode.\>" <> 
          ToString[time] <> "\<.array\>"];\)\), "\[IndentingNewLine]", 
    \(\(Plot[\(uvel[LY*#, x] &\) /@ {1\/3, 1\/2, 2\/3} // Evaluate, {x, 0.5, 
          LX - 1}, 
        PlotRange \[Rule] {\(-3\), 4.5}];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[ir`f1];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Mean[ir`f1]\), "\[IndentingNewLine]", 
    \(StandardDeviation[ir`f1]\)}], "Input"],

Cell[BoxData[
    \(\(-0.02945237376208262`\)\)], "Output"],

Cell[BoxData[
    \(0.17889549705415936`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(StartRealtimeGraph[5, RealtimeGraph]\)], "Input"],

Cell[BoxData[
    RowBox[{\(Import::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found during \
\\!\\(Import[\\(\\(\\\"uvp.10000.Real64\\\", \\\"Real64\\\", \
\\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Import::nffil\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Rest::"normal"\), \(\(:\)\(\ \)\), "\<\"Nonatomic expression \
expected at position \\!\\(1\\) in \\!\\(Rest[$Failed]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::normal\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Rest::"argx"\), \(\(:\)\(\ \)\), "\<\"\\!\\(Rest\\) called with \
\\!\\(0\\) arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::argx\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Rest::"argx"\), \(\(:\)\(\ \)\), "\<\"\\!\\(Rest\\) called with \
\\!\\(0\\) arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::argx\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(Rest[]\\) does not contain a list of data and coordinates. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(ListInterpolation::"ingrdm"\), \(\(:\)\(\ \)\), "\<\"The \
dimension of the data to be interpolated in the first argument is \
inconsistent with the dimension of the grid in the second argument. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, \
ButtonData:>\\\"ListInterpolation::ingrdm\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(3\\) of \
\\!\\(Transpose[\\(\\(\\(\\(Rest[]\\)\\), \\(\\({2, 3, 1}\\)\\)\\)\\)]\\) \
does not exist. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(\\(\\(Transpose[\\(\\(\\(\\(Rest[]\\)\\), \\(\\({2, 3, \
1}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \[RightDoubleBracket]\\) does \
not contain a list of data and coordinates. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(ListInterpolation::"ingrdm"\), \(\(:\)\(\ \)\), "\<\"The \
dimension of the data to be interpolated in the first argument is \
inconsistent with the dimension of the grid in the second argument. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, \
ButtonData:>\\\"ListInterpolation::ingrdm\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(3\\) of \
\\!\\(Transpose[\\(\\(\\(\\(Rest[]\\)\\), \\(\\({2.`, 3.`, \
1.`}\\)\\)\\)\\)]\\) does not exist. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\
\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Interpolation::"innd"\), \(\(:\)\(\ \)\), "\<\"First argument \
in \\!\\(\\(\\(Transpose[\\(\\(\\(\\(Rest[]\\)\\), \\(\\({2.`, 3.`, \
1.`}\\)\\)\\)\\)]\\)\\) \[LeftDoubleBracket] 3 \[RightDoubleBracket]\\) does \
not contain a list of data and coordinates. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Interpolation::innd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Interpolation :: \\\"innd\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(ListInterpolation::"ingrdm"\), \(\(:\)\(\ \)\), "\<\"The \
dimension of the data to be interpolated in the first argument is \
inconsistent with the dimension of the grid in the second argument. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, \
ButtonData:>\\\"ListInterpolation::ingrdm\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(ListInterpolation :: \\\"ingrdm\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(3\\) of \
\\!\\(Transpose[\\(\\(\\(\\(Rest[]\\)\\), \\(\\({2.`, 3.`, \
1.`}\\)\\)\\)\\)]\\) does not exist. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\
\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Part :: \\\"partw\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Transpose::"nmtx"\), \(\(:\)\(\ \)\), "\<\"The first two levels \
of the one-dimensional list \\!\\({}\\) cannot be transposed. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Transpose::nmtx\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Set::"shape"\), \(\(:\)\(\ \)\), "\<\"Lists \
\\!\\({Graphics`PlotField`Private`points$345795, \
Graphics`PlotField`Private`vectors$345795}\\) and \\!\\(Transpose[\\(\\({}\\)\
\\)]\\) are not the same shape. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Set::shape\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(MapThread::"mptd"\), \(\(:\)\(\ \)\), "\<\"Object \
\\!\\(Graphics`PlotField`Private`vectors$345795\\) at position {2, \
\\!\\(1\\)} in \\!\\(MapThread[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(#3 \
\[Equal] 0\\)\\) || \\(\\(! \
\\(\\(Graphics`PlotField`Private`numberQ[#2]\\)\\)\\)\\)\\)\\), \
\\(\\({\\(\\({0, 0}\\)\\), 0}\\)\\), \\(\\({\\(#1\\\\ #2\\)\\/#3, \
#2}\\)\\)\\)\\)]\\)\\) &\\)\\), \
\\(\\({Graphics`PlotField`Private`vectors$345795, \
Graphics`PlotField`Private`vectors$345795, \
Graphics`PlotField`Private`vectors$345795}\\)\\)\\)\\)]\\) has only \
\\!\\(0\\) of required \\!\\(1\\) dimensions. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Set::"shape"\), \(\(:\)\(\ \)\), "\<\"Lists \
\\!\\({Graphics`PlotField`Private`vectors$345795, \
Graphics`PlotField`Private`mags$345795}\\) and \
\\!\\(Transpose[\\(\\(MapThread[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(#3 \
\[Equal] 0\\)\\) || \\(\\(! \
\\(\\(Graphics`PlotField`Private`numberQ[\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\({\\(\\({0, 0}\\)\\), \
0}\\)\\), \\(\\({\\(#1\\\\ #2\\)\\/\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\), #2}\\)\\)\\)\\)]\\)\\) &\\)\\), \
\\(\\({Graphics`PlotField`Private`vectors$345795, \\(\\(\[LeftSkeleton] 41 \
\[RightSkeleton]\\)\\), \
Graphics`PlotField`Private`vectors$345795}\\)\\)\\)\\)]\\)\\)]\\) are not the \
same shape. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Set::shape\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Transpose::"nmtx"\), \(\(:\)\(\ \)\), "\<\"The first two levels \
of the one-dimensional list \\!\\({Graphics`PlotField`Private`colors$345795, \
Graphics`PlotField`Private`points$345795, \
Graphics`PlotField`Private`vectors$345795, \
Graphics`PlotField`Private`vectors$345795}\\) cannot be transposed. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Transpose::nmtx\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Transpose::"nmtx"\), \(\(:\)\(\ \)\), "\<\"The first two levels \
of the one-dimensional list \\!\\({Graphics`PlotField`Private`colors$345795, \
\\(\\(Arrow[\\(\\(Graphics`PlotField`Private`points$345795, \
\\(\\(Graphics`PlotField`Private`points$345795 + \
Graphics`PlotField`Private`vectors$345795\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\(HeadScaling \[Rule] Automatic\\)\\), \\(\\(\
\[LeftSkeleton] 5 \[RightSkeleton]\\)\\)\\)\\)]\\)\\)}\\) cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Transpose :: \\\"nmtx\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \(Arrow::"bad" \(\(:\)\(\ \)\) 
      "Arguments \!\({Graphics`PlotField`Private`points$345795, \
\(\(Graphics`PlotField`Private`points$345795 + \
Graphics`PlotField`Private`vectors$345795\)\), \(\(HeadLength \[Rule] \
0.002`\)\), \(\(HeadScaling \[Rule] Automatic\)\), \(\(\[LeftSkeleton] 4 \
\[RightSkeleton]\)\), \(\(ZeroShape \[Rule] Automatic\)\), \(\(HeadScaling \
\[Rule] Automatic\)\), \(\(\[LeftSkeleton] 5 \[RightSkeleton]\)\)}\) to Arrow \
are not valid."\)], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gprim"\), \(\(:\)\(\ \)\), \
"\<\"\\!\\(Transpose[\\(\\({Graphics`PlotField`Private`colors$345795, \
\\(\\({}\\)\\)}\\)\\)]\\) was encountered where a \\!\\(Graphics\\) primitive \
or directive was expected. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::gprim\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(RealtimeGraph /@ Range[50, 75]\)], "Input"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"irregNode.10069.array\\\", \\\"Real64\\\
\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"irregNode.10070.array\\\", \\\"Real64\\\
\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"irregNode.10071.array\\\", \\\"Real64\\\
\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(BinaryReadList :: \\\"nffil\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Return[], Return[], 
      Return[], Return[], Return[], Return[], Return[]}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Exit[]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ImportIrreg["\<irregNode.array\>"]\)], "Input"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"irregNode.array\\\", \\\"Real64\\\", \
\\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]{pvel, uvel, vvel} = 
              ImportFluid1[MX, MY, "\<uvp\>", time]; \[IndentingNewLine]g = 
              Plot3D[pvel[y, x], {x, 2, MX - 4}, {y, 2, MY - 4}, 
                Mesh \[Rule] False, 
                PlotRange \[Rule] {All, All, {\(-5\), 10}}, 
                PlotPoints \[Rule] 
                  2 {MX, MY}]; \[IndentingNewLine]Export["\<g.\>" <> 
                ToString[time] <> "\<.png\>", 
              g];\[IndentingNewLine]]];\)\)], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[52]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(temporal = Import["\<temporal.dat\>"];\)\), "\[IndentingNewLine]", 
    \(Print[temporal[\([1]\)]]\), "\[IndentingNewLine]", 
    \(\({ti, TIME, dt, dtcfl, tiframe} = 
        Transpose@Rest[temporal];\)\), "\[IndentingNewLine]", 
    \(\(SetOptions[ListPlot, 
        PlotJoined \[Rule] True];\)\), "\[IndentingNewLine]", 
    \(\(DisplayTogether[
        ListPlot[dt, PlotStyle \[Rule] Thickness[0.004], 
          PlotRange \[Rule] All], 
        ListPlot[dtcfl, PlotStyle \[Rule] Red]];\)\)}], "Input"],

Cell[BoxData[
    \({"iter", "t", "dt", "dtcfl", "tiframe"}\)], "Print"]
}, Open  ]],

Cell[BoxData[
    \(temporal // TableForm\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[TIME]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Particles", "Section"],

Cell[BoxData[{
    \(clear\), "\n", 
    \(\(ImportParticles = 
        Function[t, 
          file = "\<particles.\>" <> 
              ToString[t + 10000] <> "\<.array\>"; \[IndentingNewLine]dat = 
            BinaryReadList[
              file, {"\<Real64\>", "\<Real64\>", "\<Real64\>", "\<Real64\>", \
"\<Integer32\>", "\<Integer32\>"}]; \[IndentingNewLine]dat = 
            Transpose[Most@dat]; \[IndentingNewLine]X = 
            dat[\([{1, 2}]\)] // Transpose; \[IndentingNewLine]radius = 
            dat[\([4]\)]; \[IndentingNewLine]sign = 
            dat[\([5]\)];\[IndentingNewLine]];\)\)}], "Input"],

Cell[BoxData[
    \(Function[i, ImportParticles[i]; Length[X]] /@ Range[0, 1]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\n", 
    \(\(g = 
        Function[t, 
            ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<irregNode.\>" <> 
                ToString[
                  10000 + 
                    t] <> "\<.array\>"]; \[IndentingNewLine]circles = {X, 
                  radius, sign}\[Transpose] ;  (*\[IndentingNewLine]circles = 
                Select[circles, 
                  0.1 < #[\([2]\)] < 0.5 &]; \[IndentingNewLine]circles = 
                Take[circles, {1, \(-1\), 1}];*) \[IndentingNewLine]ListPlot[
              ir`X, PlotJoined \[Rule] False, 
              PlotStyle \[Rule] PointSize[0.01], ImageSize \[Rule] 800, 
              Frame \[Rule] False, 
              Prolog \[Rule] {Blue, Disk[circles[\([1, 1]\)], 1], 
                  MapThread[{If[#3 \[Equal] 1, Green, Red], 
                        Circle[#1, #2]} &, circles\[Transpose] ]}, 
              AspectRatio \[Rule] 1]] /@ Range[0, 1, 1];\)\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Circle::"radius"\), \(\(:\)\(\ \)\), "\<\"Radius \
\\!\\(-1.3936787746323539`*^-77\\) is not a positive number or a pair of \
positive numbers. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\
\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Circle::radius\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Circle::"radius"\), \(\(:\)\(\ \)\), "\<\"Radius \
\\!\\(-0.018292311585673456`\\) is not a positive number or a pair of \
positive numbers. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\
\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Circle::radius\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 19.72278389526806`}\\) is not \
a floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Circle::"radius"\), \(\(:\)\(\ \)\), "\<\"Radius \
\\!\\(-9.471449708552134`*^178\\) is not a positive number or a pair of \
positive numbers. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\
\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Circle::radius\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Circle :: \\\"radius\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 18.80433907735111`}\\) is not \
a floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \
\\!\\({6.656329353974332045959`8.129450145742634*^-316, Indeterminate}\\) is \
not a floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Graphics :: \\\"gptn\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]fscale = 
              10^\(-2\); \[IndentingNewLine]MX = 48; \[IndentingNewLine]MY = 
              48; \[IndentingNewLine]uvp = 
              ImportVec2[MX, 
                3, "\<rhs.\>" <> 
                  ToString[
                    time] <> "\<.Real64\>"]; \[IndentingNewLine]ImportIrreg["\
\<irregNode.\>" <> ToString[time] <> "\<.array\>"]; \[IndentingNewLine]uvel = 
              ListInterpolation[uvp[\([1]\)], {{1, MY} - 1, {1, MX} - 1.5}, 
                InterpolationOrder \[Rule] 0]; \[IndentingNewLine]vvel = 
              ListInterpolation[uvp[\([2]\)], {{1, MY} - 1.5, {1, MX} - 1}, 
                InterpolationOrder \[Rule] 0]; \[IndentingNewLine]g = 
              DensityPlot[uvel[y, x], {x, 0, MX - 2}, {y, 0, MY - 2}, 
                PlotRange \[Rule] {{0, MX - 2}, {\(-1\), MY - 2}, All}, 
                PlotPoints \[Rule] 8 {MY, MX}, Frame \[Rule] False, 
                ImageSize \[Rule] 1000, 
                Epilog \[Rule] {Blue, PointSize[0.008], 
                    Function[{p, n, k}, {Point[p], Line[{p, p + n*k}]}]~
                      MapThread~{ir`X + 0.5, ir`nv, fscale*ir`f1}, Orange, 
                    Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
                        FontSize \[Rule] 44, 
                        FontWeight \[Rule] "\<Bold\>"], {18, 
                        6}]}]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\n", 
    \(clear\), "\[IndentingNewLine]", 
    \(\(idx = 1;\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[idx - 1]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"irregNode.10000.array\\\", \\\"Real64\\\
\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[uvp[\([1]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Min[uvp[\([1]\)]]\)], "Input"],

Cell[BoxData[
    \(\(-46285.444235969226`\)\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Mean[Flatten@uvp[\([2]\)]]\)], "Input"],

Cell[BoxData[
    \(\(-0.00032905306885362554`\)\)], "Output"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 2400}, {0, 1600}},
AutoGeneratedPackage->Automatic,
WindowSize->{1200, 1523},
WindowMargins->{{0, Automatic}, {0, Automatic}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 67, 1, 27, "Input"],
Cell[1824, 54, 39, 1, 27, "Input"],
Cell[1866, 57, 183, 3, 43, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[2074, 64, 78, 1, 27, "Input"],
Cell[2155, 67, 61, 1, 26, "Output"]
}, Open  ]],
Cell[2231, 71, 44, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[2300, 76, 256, 5, 91, "Input"],
Cell[2559, 83, 37, 1, 26, "Output"]
}, Open  ]],
Cell[2611, 87, 1107, 21, 155, "Input"],
Cell[3721, 110, 1701, 32, 219, "Input"],
Cell[5425, 144, 115, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[5565, 150, 1458, 27, 203, "Input",
  InitializationCell->True],
Cell[7026, 179, 818, 12, 33, "Message"],
Cell[7847, 193, 808, 12, 46, "Message"],
Cell[8658, 207, 400, 6, 20, "Message"],
Cell[9061, 215, 772, 11, 33, "Message"],
Cell[9836, 228, 878, 13, 46, "Message"],
Cell[10717, 243, 772, 11, 33, "Message"],
Cell[11492, 256, 878, 13, 46, "Message"],
Cell[12373, 271, 337, 5, 20, "Message"]
}, Open  ]],
Cell[12725, 279, 46, 1, 27, "Input"],
Cell[12774, 282, 54, 1, 27, "Input"],
Cell[12831, 285, 54, 1, 27, "Input"],
Cell[12888, 288, 616, 12, 142, "Input"],

Cell[CellGroupData[{
Cell[13529, 304, 104, 2, 43, "Input"],
Cell[13636, 308, 59, 1, 26, "Output"],
Cell[13698, 311, 54, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[13789, 317, 69, 1, 27, "Input"],
Cell[13861, 320, 365, 5, 70, "Message"],
Cell[14229, 327, 317, 5, 70, "Message"],
Cell[14549, 334, 303, 4, 70, "Message"],
Cell[14855, 340, 303, 4, 70, "Message"],
Cell[15161, 346, 331, 5, 70, "Message"],
Cell[15495, 353, 400, 6, 70, "Message"],
Cell[15898, 361, 344, 5, 70, "Message"],
Cell[16245, 368, 448, 6, 70, "Message"],
Cell[16696, 376, 400, 6, 70, "Message"],
Cell[17099, 384, 350, 5, 70, "Message"],
Cell[17452, 391, 454, 6, 70, "Message"],
Cell[17909, 399, 337, 5, 70, "Message"],
Cell[18249, 406, 400, 6, 70, "Message"],
Cell[18652, 414, 343, 5, 70, "Message"],
Cell[18998, 421, 350, 5, 70, "Message"],
Cell[19351, 428, 329, 5, 70, "Message"],
Cell[19683, 435, 323, 5, 70, "Message"],
Cell[20009, 442, 396, 6, 70, "Message"],
Cell[20408, 450, 800, 13, 70, "Message"],
Cell[21211, 465, 924, 15, 70, "Message"],
Cell[22138, 482, 497, 8, 70, "Message"],
Cell[22638, 492, 683, 10, 70, "Message"],
Cell[23324, 504, 333, 5, 70, "Message"],
Cell[23660, 511, 499, 8, 70, "Message"],
Cell[24162, 521, 411, 6, 70, "Message"],
Cell[24576, 529, 42, 1, 70, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[24655, 535, 63, 1, 24, "Input"],
Cell[24721, 538, 387, 5, 20, "Message"],
Cell[25111, 545, 387, 5, 20, "Message"],
Cell[25501, 552, 387, 5, 20, "Message"],
Cell[25891, 559, 339, 5, 20, "Message"],
Cell[26233, 566, 232, 3, 41, "Output"]
}, Open  ]],
Cell[26480, 572, 39, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[26544, 577, 67, 1, 27, "Input"],
Cell[26614, 580, 381, 5, 20, "Message"]
}, Open  ]],
Cell[27010, 588, 586, 11, 91, "Input"],
Cell[27599, 601, 96, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[27720, 607, 529, 10, 91, "Input"],
Cell[28252, 619, 72, 1, 22, "Print"]
}, Open  ]],
Cell[28339, 623, 54, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[28418, 628, 47, 1, 27, "Input"],
Cell[28468, 631, 130, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[28635, 639, 28, 0, 74, "Section"],
Cell[28666, 641, 614, 12, 139, "Input"],
Cell[29283, 655, 90, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[29398, 660, 987, 19, 139, "Input"],
Cell[30388, 681, 336, 5, 22, "Message"],
Cell[30727, 688, 333, 5, 20, "Message"],
Cell[31063, 695, 352, 5, 20, "Message"],
Cell[31418, 702, 335, 5, 22, "Message"],
Cell[31756, 709, 332, 5, 20, "Message"],
Cell[32091, 716, 352, 5, 20, "Message"],
Cell[32446, 723, 383, 6, 22, "Message"],
Cell[32832, 731, 332, 5, 20, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[33201, 741, 1781, 31, 267, "Input",
  InitializationCell->True],
Cell[34985, 774, 387, 5, 20, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[35409, 784, 62, 1, 27, "Input"],
Cell[35474, 787, 137, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[35648, 795, 50, 1, 27, "Input"],
Cell[35701, 798, 58, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[35796, 804, 59, 1, 27, "Input"],
Cell[35858, 807, 62, 1, 26, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

