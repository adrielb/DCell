(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     53203,       1429]*)
(*NotebookOutlinePosition[     53887,       1453]*)
(*  CellTagsIndexPosition[     53843,       1449]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[{
    \(Get[Environment["\<ALT_DISP\>"]]\), "\[IndentingNewLine]", 
    \(Get["\</home/abergman/Research/DCell/PetscImport.m\>"]\)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(fscale = 1000;\)\), "\[IndentingNewLine]", 
    \(\(vscale = 100;\)\), "\[IndentingNewLine]", 
    \(ImportInfo[]\), "\[IndentingNewLine]", 
    \(size\), "\[IndentingNewLine]", 
    \(\(MX = size[\([1]\)];\)\), "\n", 
    \(\(MY = size[\([2]\)];\)\), "\[IndentingNewLine]", 
    \(\(LX = len[\([1]\)];\)\), "\n", 
    \(\(LY = len[\([2]\)];\)\), "\[IndentingNewLine]", 
    \(\(contactThres = 
        GetParam["\<contactThres\>"];\)\), "\[IndentingNewLine]", 
    \(\(kclip = GetParam["\<kclip\>"];\)\), "\[IndentingNewLine]", 
    \(Fa = GetParam["\<Fa\>"]\), "\[IndentingNewLine]", 
    \(Fk = GetParam["\<Fk\>"]\), "\[IndentingNewLine]", 
    \(Fk0 = GetParam["\<Fk0\>"]\), "\[IndentingNewLine]", 
    \(\(adhesionRadius = GetParam["\<adhesionRadius\>"];\)\)}], "Input"],

Cell[BoxData[
    \({100, 45, 0}\)], "Output"],

Cell[BoxData[
    \(0.1`\)], "Output"],

Cell[BoxData[
    \(0\)], "Output"],

Cell[BoxData[
    \(10\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(SetDirectory["\</nas-0-0/sims/4468.3.Fk0\>"];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Last@FileNames["\<uvp*\>"]\)], "Input"],

Cell[BoxData[
    \("uvp.27403.Real64"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(StartRealtimeGraph[1, RealtimeGraph]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\({{groovesbin, groovesls}, pos} = 
        ImportGrid["\<grooves\>"];\)\), "\[IndentingNewLine]", 
    \(\(Block[{MX, MY}, \[IndentingNewLine]{MY, MX} = 
          Dimensions[groovesls]; \[IndentingNewLine]grooves = 
          ListInterpolation[
            groovesls, {{1, MY} - 0.5 + pos[\([2, 2]\)], {1, MX} - 0.5 + 
                  pos[\([2, 1]\)]}*dx, 
            InterpolationOrder \[Rule] 
              1];\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(ImportIrreg["\<grooves.irregNode.10000.array\>"];\)\), "\n", 
    \(\(groovesir = ir`X*dx;\)\), "\[IndentingNewLine]", 
    \(\(ImportIrreg["\<grooves.irregNode.10001.array\>"];\)\), "\n", 
    \(\(contactir = ir`X*dx;\)\), "\[IndentingNewLine]", 
    \(\(DensityPlot[grooves[y, x], {x, 0, LX}, {y, 0, LY}, 
        ImageSize \[Rule] 2000, 
        Epilog \[Rule] {Green, PointSize[0.0001], Point /@ groovesir}, 
        AspectRatio \[Rule] Automatic, 
        PlotPoints \[Rule] Round[10 {LX, LY}]];\)\)}], "Input"],

Cell[BoxData[
    \(\(ListDensityPlot[groovesls];\)\)], "Input"],

Cell[BoxData[{
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, fscale*ir`f1}\[Transpose] , {1, \(-1\), 
                3}]; \[IndentingNewLine]vecs = 
            Select[vecs, Abs[#[\([3]\)]] > 1 &]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.005], 
              Blue, Point /@ \((ir`X*dx)\), AbsoluteThickness[0.0025], 
              Function[{p, n, k}, {Magenta, 
                    Arrow[p, p + n*k, HeadScaling \[Rule] Absolute, 
                      HeadLength \[Rule] 15, ZeroShape \[Rule] None]}]~
                MapThread~
                vecs}]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, fscale*ir`f1}\[Transpose] , {1, \(-1\), 
                1}]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.005], 
              Blue, Point /@ \((ir`X*dx)\), AbsoluteThickness[0.0025], 
              Function[{p, n, f1}, {If[f1 > 0, Green, Red], 
                    Line[{p, p + n*f1}]}]~MapThread~
                vecs}]\[IndentingNewLine]];\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, ir`fa, 
                  0*Fk0*Clip[
                      ir`k, {\(-kclip\), kclip}]}\[Transpose] , {1, \(-1\), 
                1}]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.004], 
              Blue, \({Point[#] (*\(,\)\(Circle[#, 
                        adhesionRadius]\)*) } &\) /@ \((ir`X*dx)\), 
              AbsoluteThickness[0.0025], 
              Function[{p, n, f1, k}, \[IndentingNewLine]{Red, 
                    Line[{p, p - n*k}], Green, Line[{p, p + n*f1}]}]~
                MapThread~vecs}]\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(pr = {10 {\(-1\), 1} + LX/2, {\(-1\), 
            10}};\)\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]g = 
              CellForces[]; \[IndentingNewLine]g = 
              Show[g, Epilog \[Rule] {PointSize[0.005], Black, 
                    Point /@ groovesir (*\(,\)\(Gray\)\(,\)\(Point /@ 
                        contactir\)*) }, ImageSize \[Rule] 1100, 
                PlotRange \[Rule] pr, AspectRatio \[Rule] Automatic, 
                PlotLabel \[Rule] 
                  ToString[t]]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[2000]\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Histogram[ir`fa, PlotLabel -> "\<Fa\>"];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[Fk0*Clip[ir`k, {\(-kclip\), kclip}], 
        PlotLabel -> "\<k\>"];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[1/ir`k, PlotLabel -> "\<r\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[0, 2000, 10];\)\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[3950, 3960, 1];\)\)}], "Input"],

Cell[BoxData[
    \(\(Histogram@
        Flatten[Function[t, 
              ImportIrreg["\<mycell.irregNode.\>" <> 
                  ToString[t + 10000] <> "\<.array\>"]; ir`fa] /@ 
            Range[0, 999]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \({{53.3, 0.815786}, {53.3, \(-2.21024\)}} /. {a_, b_} \[Rule] 
        Norm[a - b]\)], "Input"],

Cell[BoxData[
    \(3.0260260000000003`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \({{64.8227, 0.809063}, {64.9208, 1.02488}} /. {a_, b_} \[Rule] 
        Norm[a - b]\/2\)], "Input"],

Cell[BoxData[
    \(0.11853331545287221`\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Epilog \[Rule] {Orange, 
        Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
            FontSize \[Rule] 44, FontWeight \[Rule] "\<Bold\>"], {48.1489, 
            22.43}]}\)], "Input"],

Cell[BoxData[
    \(DensityPlot[\(-grooves[y, x]\), {x, 0, LX}, {y, 0, LY}, 
      PlotPoints \[Rule] 10 {LX, LY}, ImageSize \[Rule] 1100, 
      PlotRange \[Rule] {{0, LX}, {\(-10\), LY}, All}, 
      AspectRatio \[Rule] Automatic]\)], "Input"],

Cell[BoxData[
    \(Epilog \[Rule] {Green, PointSize[0.001], Point /@ groovesir}\)], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{pvel, 
                uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]\[IndentingNewLine]g = 
              DisplayTogether[\[IndentingNewLine]Graphics[{PointSize[0.005], 
                    Black, Point /@ groovesir, Gray, 
                    Point /@ 
                      contactir}], \[IndentingNewLine]CellForces[], \
\[IndentingNewLine]PlotVectorField[{uvel[y, x], vvel[y, x]}, {x, dx, 
                    LX - 1}, {y, dx, LY - 1}, ScaleFactor \[Rule] None, 
                  ScaleFunction \[Rule] \((#*vscale &)\), 
                  PlotPoints \[Rule] Round[{MX, MY}/2], Frame \[Rule] False, 
                  HeadLength \[Rule] 0.2*10^\(-2. \)], PlotLabel \[Rule] t, 
                ImageSize \[Rule] 1111, 
                AspectRatio \[Rule] 
                  Automatic\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine] (*\(Export["\<g.\>" <> ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]\[IndentingNewLine]]];\)\), "\
\[IndentingNewLine]", 
    \(RealtimeGraph[4]\)}], "Input"],

Cell[BoxData[
    \(RealtimeGraph /@ Range[0, 999]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(pos = 
      Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]{pvel, uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]maxVel = 
              Table[{Norm[{uvel[y, x], vvel[y, x]}], {x, y}}, {y, 0, LY - 1, 
                  dx}, {x, 0, LX - 1, dx}]; \[IndentingNewLine]maxVel = 
              Flatten[maxVel, 
                1]; \[IndentingNewLine]maxVel[\([First@
                  Ordering[maxVel, \(-1\)]]\)]\[IndentingNewLine]]] /@ 
        Range[0, 3000, 100]\)], "Input"],

Cell[BoxData[
    \({{0.27154988673186914`, {52.2`, 
          0.9`}}, {0.26281310044428385`, {47.400000000000006`, 
          1.`}}, {0.2833253745056624`, {47.`, 
          1.`}}, {0.28344846097654364`, {53.400000000000006`, 
          1.`}}, {0.27950475285571474`, {46.300000000000004`, 
          1.`}}, {0.37283914356551273`, {45.900000000000006`, 
          1.`}}, {0.3096210558425106`, {45.400000000000006`, 
          1.`}}, {0.29830819849681134`, {45.1`, 
          1.`}}, {0.25674347551104737`, {55.2`, 
          1.`}}, {0.2578215232710432`, {55.5`, 
          1.`}}, {0.29654339347534553`, {55.900000000000006`, 
          1.`}}, {0.2912086677889139`, {43.900000000000006`, 
          1.`}}, {0.25350367625398207`, {56.5`, 
          1.`}}, {0.28883652157503936`, {43.`, 
          1.`}}, {0.319702672853488`, {57.1`, 
          1.`}}, {0.29089067148727416`, {42.6`, 
          1.`}}, {0.8323006830898471`, {57.900000000000006`, 
          1.1`}}, {0.2727044595423819`, {41.6`, 
          1.`}}, {0.2653556416116277`, {41.7`, 
          1.`}}, {0.26575528582441293`, {58.800000000000004`, 
          1.`}}, {0.25108625343445146`, {58.800000000000004`, 
          1.`}}, {0.21120359265606248`, {59.`, 
          1.`}}, {0.29056559781644997`, {40.1`, 
          1.`}}, {1.1971548495897053`, {59.5`, 
          1.5`}}, {0.2779074706881079`, {40.2`, 
          0.9`}}, {0.30526840372443964`, {39.900000000000006`, 
          1.`}}, {0.2485423884404463`, {60.2`, 
          0.9`}}, {0.2592128345762437`, {39.400000000000006`, 
          0.9`}}, {0.2748126448823257`, {60.7`, 
          1.`}}, {0.22388610875532522`, {61.2`, 
          1.`}}, {0.227053289024286`, {61.800000000000004`, 
          1.`}}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[pos[\([All, 2]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(maxVel = 
        Table[Norm[{uvel[y, x], vvel[y, x]}], {y, 0, LY - 1, dx}, {x, 0, 
            LX - 1, dx}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[maxVel]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot3D[maxVel, Mesh \[Rule] False, 
        BoxRatios \[Rule] {MX, MY, 100}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({pvel, uvel, vvel} = 
        ImportFluid[MX, MY, "\<uvp\>", 10000];\)\), "\n", 
    \(Dimensions /@ {pvel, uvel, vvel}\)}], "Input"],

Cell[BoxData[
    \({{249, 999}, {249, 999}, {249, 999}}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[vvel];\)\)}], "Input"],

Cell[BoxData[
    \(\(ListPlot3D[vvel, Mesh \[Rule] False, 
        BoxRatios \[Rule] {MX, MY, 100}];\)\)], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListPlot[pvel[\([100]\)]];\)\)}], "Input"],

Cell[BoxData[
    \(FileNames["\<mycell.irreg*\>"]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(StartRealtimeGraph[1, RealtimeGraph]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(RealtimeGraph /@ Range[8000, 8100, 1];\)\)], "Input"],

Cell[BoxData[
    \(\(Histogram[ir`f1];\)\)], "Input"],

Cell[BoxData[{
    \(\(contactarea = 
        Import["\<contactarea.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(ListPlot[contactarea];\)\)}], "Input"],

Cell[BoxData[{
    \(\(div = 
        Table[uvel[\([y, x]\)] - uvel[\([y + 1, x]\)] + 
            vvel[\([y, x + 1]\)] - vvel[\([y, x]\)], {y, 1, MY - 1}, {x, 1, 
            MX - 1}];\)\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[div];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[Abs@Flatten[div], ImageSize \[Rule] 1000, 
        AspectRatio \[Rule] 0.3];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[uvp[\([1]\)] // Flatten, ImageSize \[Rule] 1000, 
        AspectRatio \[Rule] 0.3];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Max curvature", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(allcurve = 
        Function[t, 
              Module[{time = 
                    t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                    ToString[
                      time] <> "\<.array\>"]; \[IndentingNewLine]ir`k\
\[IndentingNewLine]]] /@ Range[0, 100, 1] // 
          Flatten;\)\), "\[IndentingNewLine]", 
    \(Dimensions[allcurve]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10000.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10015.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10016.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(BinaryReadList :: \\\"nffil\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({118322}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(Histogram[allcurve];\)\)], "Input"],

Cell[BoxData[
    \(\(Histogram[Select[allcurve, Abs[#] > 2 &]];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Stepping", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Last[temporal]\)], "Input"],

Cell[BoxData[
    \({30347, 9820.`, 0.34816120000000006`, 0.34816120000000006`, 983, 
      0.1`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(temporal = Import["\<temporal.dat\>"];\)\), "\[IndentingNewLine]", 
    \(Print[temporal[\([1]\)]]\), "\[IndentingNewLine]", 
    \(\({ti, TIME, dt, dtcfl, tiframe, CFL} = 
        Transpose@Rest[temporal];\)\), "\[IndentingNewLine]", 
    \(\(SetOptions[ListPlot, 
        PlotJoined \[Rule] True];\)\), "\[IndentingNewLine]", 
    \(\(DisplayTogether[
        ListPlot[dt, PlotStyle \[Rule] Thickness[0.004], 
          PlotRange \[Rule] All], 
        ListPlot[dtcfl, PlotStyle \[Rule] Red]];\)\), "\[IndentingNewLine]", 
    \(\(ListPlot[CFL, PlotRange \[Rule] {0, 1}];\)\)}], "Input"],

Cell[BoxData[
    \({"iter", "t", "dt", "dtcfl", "tiframe", "CFL"}\)], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(ListPlot[TIME];\)\), "\[IndentingNewLine]", 
    \(Length[TIME]\)}], "Input"],

Cell[BoxData[
    \(983\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[Rest[ti] - Most[ti]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(TableForm@temporal\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(ImportTemporal[]\), "\[IndentingNewLine]", 
    \(\(DisplayTogether[ListPlot[dt, PlotStyle \[Rule] PointSize[0.01]], 
        ListPlot[dtcfl, PlotStyle \[Rule] Green]];\)\)}], "Input"],

Cell[BoxData[
    \({"iter", "t", "dt", "dtcfl", "tiframe", "CFL"}\)], "Print"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot[dt];\)\)], "Input"],

Cell[BoxData[{
    \(clear\), "\n", 
    \(\(Function[{dat, title}, ListPlot[dat, PlotLabel \[Rule] title]]~
        MapThread~{{TIME, dt, dtcfl, 
            CFL}, {"\<TIME\>", "\<dt\>", "\<dtcfl\>", "\<CFL\>"}};\)\)}], \
"Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[dtcfl, # < 2 &] // Histogram\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contact Area", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = FileNames["\</nas-0-0/sims/4466.*.Fk0\>"]\)], "Input"],

Cell[BoxData[
    \({"/nas-0-0/sims/4466.1.Fk0", "/nas-0-0/sims/4466.2.Fk0", 
      "/nas-0-0/sims/4466.3.Fk0", "/nas-0-0/sims/4466.4.Fk0", 
      "/nas-0-0/sims/4466.5.Fk0", "/nas-0-0/sims/4466.6.Fk0", 
      "/nas-0-0/sims/4466.7.Fk0", "/nas-0-0/sims/4466.8.Fk0", 
      "/nas-0-0/sims/4466.9.Fk0"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(contactarea = \(\((\[IndentingNewLine]SetDirectory[#]; \
\[IndentingNewLine]Import["\<contactarea.dat\>"]\[IndentingNewLine])\) &\) /@ 
          sims;\)\), "\[IndentingNewLine]", 
    \(Dimensions /@ contactarea\)}], "Input"],

Cell[BoxData[
    \({{30361, 2}, {28038, 2}, {26506, 2}, {25719, 2}, {22102, 2}, {21838, 
        2}, {22662, 2}, {22151, 2}, {23779, 2}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(DisplayTogether[\(ListPlot[contactarea[\([#]\)], 
              PlotStyle \[Rule] Hue[#\/Length[contactarea]]] &\)~Array~
          Length@contactarea];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(N@\(#\/Length[contactarea]\) &\)~Array~Length@contactarea\)], "Input"],

Cell[BoxData[
    \({0.125`, 0.25`, 0.375`, 0.5`, 0.625`, 0.75`, 0.875`, 1.`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(Map[
        Function[{sims}, \[IndentingNewLine]DisplayTogether[\
\[IndentingNewLine]\(\((\[IndentingNewLine]SetDirectory["\</nas-0-0/abergman/\
sims/\>" <> 
                      ToString@
                        sims[\([#]\)] <> "\<.fa2\>"]; \
\[IndentingNewLine]ListPlot[Import["\<contactarea.dat\>"], 
                    PlotStyle \[Rule] Hue[#\/2], PlotJoined \[Rule] True, 
                    PlotRange \[Rule] {{0, 3000}, {0, 
                          60}}]\[IndentingNewLine])\) &\)~Array~
              2]\[IndentingNewLine]], {Range[4139, 4144], 
            Range[4145, 4150]}\[Transpose] ] // DisplayTogether\)}], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Aggregate Viz", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = FileNames["\</data/sims/CFL/*\>"]\)], "Input"],

Cell[BoxData[
    \({"/data/sims/CFL/0", "/data/sims/CFL/1", "/data/sims/CFL/2", 
      "/data/sims/CFL/3", "/data/sims/CFL/4", "/data/sims/CFL/5", 
      "/data/sims/CFL/6", "/data/sims/CFL/7"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Map[
      Function[s, \[IndentingNewLine]SetDirectory[s]; \[IndentingNewLine]Last@
          FileNames["\<uvp*\>"]\[IndentingNewLine]], sims]\)], "Input"],

Cell[BoxData[
    \({"uvp.11623.Real64", "uvp.11049.Real64", "uvp.10748.Real64", 
      "uvp.10543.Real64", "uvp.10443.Real64", "uvp.10451.Real64", 
      "uvp.10439.Real64", "uvp.10428.Real64"}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[
          t, \[IndentingNewLine]DisplayTogether[\[IndentingNewLine]\(Module[{\
time = t + 10000}, \[IndentingNewLine]SetDirectory[
                    sims[\([#]\)]]; \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                      ToString[time] <> "\<.array\>"]; \[IndentingNewLine]g = 
                    Graphics[{PointSize[0.005], Hue[#\/Length[sims]], 
                        Point /@ \((ir`X*dx)\), 
                        AbsoluteThickness[0.0025]}]; \[IndentingNewLine]g = 
                    Show[g, ImageSize \[Rule] 1100, 
                      PlotRange \[Rule] {25 {\(-1\), 1} + LX/2, {\(-2\), 
                            LY}}, AspectRatio \[Rule] 
                        Automatic]; \[IndentingNewLine]g\[IndentingNewLine]] \
&\)~Array~Length@sims\[IndentingNewLine]]] /@ Range[0, 428, 1];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Curvature", "Section"],

Cell[BoxData[
    \(\({phi, pos} = ImportGrid["\<grid\>"];\)\)], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(\(Function[
          t, \[IndentingNewLine]time = 
            t + 10000 - 1; \[IndentingNewLine]ImportIrreg["\<irregNode.\>" <> 
              ToString[
                time] <> "\<.array\>"]; \[IndentingNewLine]ListDensityPlot[
            phi[\([t]\)], ImageSize \[Rule] 3000, 
            Epilog \[Rule] {PointSize[0.0035], 
                Function[{p, n, k}, {Blue, Point[p - pos[\([t]\)]], Magenta, 
                      Line[{p - pos[\([t]\)], p - pos[\([t]\)] + n*k}]}]~
                  MapThread~{ir`X + 0.5, ir`nv, 
                    fscale*ir`f1}}]\[IndentingNewLine]]\)[11];\)\)}], "Input"],

Cell[BoxData[
    \(Curvature[i_, j_] := 
      If[i == 1 || j == 1 || i \[Equal] Length[p] || 
          j \[Equal] Length[p[\([1]\)]], 
        0, \[IndentingNewLine]py = \((p[\([i + 1, j]\)] - 
                p[\([i - 1, j]\)])\)/
            2; \[IndentingNewLine]px = \((p[\([i, j + 1]\)] - 
                p[\([i, j - 1]\)])\)/
            2; \[IndentingNewLine]pxy = \((p[\([i + 1, j + 1]\)] + 
                p[\([i - 1, j - 1]\)] - p[\([i + 1, j - 1]\)] - 
                p[\([i - 1, j + 1]\)])\)/4. ; \[IndentingNewLine]pyy = 
          p[\([i - 1, j]\)] - 2  p[\([i, j]\)] + 
            p[\([i + 1, j]\)]; \[IndentingNewLine]pxx = 
          p[\([i, j - 1]\)] - 2  p[\([i, j]\)] + 
            p[\([i, j + 1]\)]; \[IndentingNewLine]If[
          px\^2 + py\^2 \[Equal] 0. , 
          0, \[IndentingNewLine]k = \(\(px\^2\) pyy - px\ py\ pxy + \(py\^2\) \
pxx\)\/\((px\^2 + py\^2)\)\^\(3/2\); \[IndentingNewLine]pyy]\
\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[{
    \(\(idx = 11;\)\), "\[IndentingNewLine]", 
    \(\(p = phi[\([idx]\)];\)\), "\[IndentingNewLine]", 
    \(\(k = 
        Table[Curvature[i, j], {i, Length[p]}, {j, 
            Length[p[\([1]\)]]}];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(W = 1;\)\), "\[IndentingNewLine]", 
    \(rng = \(Round[{# - 3, # + 3}] &\) /@ {214, 112.417}\)}], "Input"],

Cell[BoxData[
    \({{211, 217}, {109, 115}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(rng = \ {{9, 15}, {109, 115}}\)], "Input"],

Cell[BoxData[
    \({{9, 15}, {109, 115}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(\(PlotRange \[Rule] {rng[\([1]\)], 
        rng[\([2]\)], {0.001, 0.02}}\)\(,\)\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[
        t, \[IndentingNewLine]time = 
          t + 10000 - 1; \[IndentingNewLine]ImportIrreg["\<irregNode.\>" <> 
            ToString[
              time] <> "\<.array\>"]; \[IndentingNewLine]ListDensityPlot[k, 
          ImageSize \[Rule] 800, Mesh \[Rule] False, 
          PlotRange \[Rule] {rng[\([1]\)], rng[\([2]\)], {0.00, 0.02}}, 
          Epilog \[Rule] {PointSize[0.0025], 
              Function[{p, n, k}, {Blue, Point[p - pos[\([t]\)]], Magenta, 
                    Line[{p - pos[\([t]\)], p - pos[\([t]\)] + n*k}]}]~
                MapThread~{ir`X + 0.5, ir`nv, 
                  fscale*ir`f1}}]\[IndentingNewLine]]\)[idx]\)}], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(kr = Take[p, Sequence @@ Reverse@rng];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[kr]\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[Sign@kr, ImageSize \[Rule] 300];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"4.013140985253192`", "3.013185458675719`", "2.013764313331268`",
               "1.0147761883319601`", 
              "0.015537638479167365`", \(-0.9841168006624706`\), \
\(-1.9836941574462121`\)},
            {"3.986780586868789`", "2.9859785118311453`", 
              "1.9858692111455518`", 
              "0.9867630274811598`", \(-0.012488196540822446`\), \
\(-1.0123816158363572`\), \(-2.0119804975489597`\)},
            {"3.970332278165636`", "2.9682811438380585`", 
              "1.966543900404142`", 
              "0.9664600700285155`", \(-0.03268433452109388`\), \
\(-1.0318935969227534`\), \(-2.030587189261631`\)},
            {"3.964796125364132`", "2.961584319896583`", 
              "1.9567501243739507`", 
              "0.949862307946911`", \(-0.04934684212747479`\), \
\(-1.0422697839147304`\), \(-2.038482557143894`\)},
            {"3.9715680034669996`", "2.96981661843168`", 
              "1.9684624951612273`", 
              "0.9685137137171534`", \(-0.03263763122911582`\), \
\(-1.0338625352755604`\), \(-2.0323307870579885`\)},
            {"3.988873408122857`", "2.988329045057961`", "1.988337440113577`",
               "0.9887770884330044`", \(-0.012273759237117352`\), \
\(-1.0139995676673066`\), \(-2.014040395343542`\)},
            {"4.015712977145785`", "3.015844731808027`", 
              "2.0162556462123318`", "1.0165711207424668`", 
              "0.015920492121637847`", \(-0.9851785407786691`\), \
\(-1.9854843277817331`\)}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(pyyRight = kr[\([All, 4]\)];\)\)], "Input"],

Cell[BoxData[
    \(\(pyyLeft = kr[\([All, 4]\)];\)\)], "Input"],

Cell[BoxData[
    \(\(ListPlot[kr[\([All, 4]\)]];\)\)], "Input"],

Cell[BoxData[
    \(DisplayTogether[ListPlot[pyyRight, PlotJoined \[Rule] True], 
      ListPlot[pyyLeft]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(kr = Take[k, Sequence @@ Reverse@rng];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[kr]\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[kr, PlotRange \[Rule] All, 
        ImageSize \[Rule] 300];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0.009509578851487177`", "0.008569791444306585`", 
              "0.007710203398155979`", "0.007829697039718378`", 
              "0.00875283408749028`"},
            {"0.011000544051611438`", "0.00953153471121837`", 
              "0.003705195371039749`", "0.0035336303738905187`", 
              "0.009135794094419225`"},
            {"0.014929122476571965`", "0.021506146817467986`", 
              "0.03524916785184706`", "0.033371718504739876`", 
              "0.018783435631146927`"},
            {"0.010280128091184615`", "0.008162574165073044`", 
              "0.001611968945608444`", "0.003654661093639492`", 
              "0.011455718969083817`"},
            {"0.009003260123784607`", "0.00804326114640519`", 
              "0.007530657593611378`", "0.007830379366756735`", 
              "0.008958059280383734`"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Curvature[112, 214]\), "\n", 
    \(px\), "\n", 
    \(py\), "\n", 
    \(pxx\), "\n", 
    \(pyy\), "\n", 
    \(pxy\)}], "Input"],

Cell[BoxData[
    \(0.008026112464019075`\)], "Output"],

Cell[BoxData[
    \(1.000521715262327`\)], "Output"],

Cell[BoxData[
    \(0.001129692486903977`\)], "Output"],

Cell[BoxData[
    \(\(-0.0012904642237721031`\)\)], "Output"],

Cell[BoxData[
    \(0.008026112464019075`\)], "Output"],

Cell[BoxData[
    \(0.0004572974205551694`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(px = 1;\)\), "\[IndentingNewLine]", 
    \(\(py = 0;\)\), "\[IndentingNewLine]", 
    \(\(pxx = 0.0013;\)\), "\[IndentingNewLine]", 
    \(\(pyy = \(-0.00803\);\)\), "\[IndentingNewLine]", 
    \(\(pxy = 0.000457;\)\), "\[IndentingNewLine]", 
    \(\(px\^2\) pyy - 2  px\ py\ pxy + \(py\^2\) pxx\)}], "Input"],

Cell[BoxData[
    \(\(-0.00803`\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \({0.001, 0.02}\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Histogram[Flatten[k], HistogramRange \[Rule] {0.001, 0.02}]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FMM err", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({fmm, pos} = ImportGrid["\<FMM-err\>"];\)\), "\[IndentingNewLine]", 
    \(Dimensions[fmm]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Import::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found during \
\\!\\(Import[\\(\\(\\\"FMM-err.size\\\", \\\"Table\\\"\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Import::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Import::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found during \
\\!\\(Import[\\(\\(\\\"FMM-err.pos\\\", \\\"Table\\\"\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Import::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(MapThread::"mptd"\), \(\(:\)\(\ \)\), "\<\"Object \\!\\($Failed\
\\) at position {2, \\!\\(2\\)} in \
\\!\\(MapThread[\\(\\(\\(\\(Function[\\(\\(\\(\\({file$, size$}\\)\\), \\(\\(\
\\(\\(tmp$227781634 = \\(\\(Rest[\\(\\(Import[\\(\\(file$, \\\"Real64\\\", \
\\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\)\\)]\\)\\)\\)\\) ; \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\)]\\)\\), \\(\\({\\(\\({\\\
\"FMM-\\\"\[Ellipsis]\\\"al64\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\)}\\)\\)\\)\\)]\\) has only \\!\\(0\\) of required \
\\!\\(1\\) dimensions. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({2}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[fmm[\([1]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(ImportIrreg["\<irregNode.10000.array\>"]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[ir`X]\)], "Input"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({2.5`, Indeterminate}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 2.5`}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 2.5`}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Graphics :: \\\"gptn\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Paricle Advection", "Section"],

Cell[BoxData[
    \(particles  .10056 . array\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    RowBox[{
      RowBox[{"RealtimeGraph", "=", 
        RowBox[{"Function", "[", 
          RowBox[{"t", ",", 
            RowBox[{"Module", "[", 
              RowBox[{\({time = t + 10000}\), ",", "\[IndentingNewLine]", 
                
                RowBox[{\(vscale = 10^2\), ";", 
                  "\[IndentingNewLine]", \(fscale = 0\ 10^4\), ";", 
                  "\[IndentingNewLine]", \(uvp = 
                    ImportVec2[MX, 
                      3, "\<uvp.\>" <> ToString[time] <> "\<.Real64\>"]\), 
                  ";", "\[IndentingNewLine]", \
\(ImportIrreg["\<mycell.irregNode.\>" <> ToString[time] <> "\<.array\>"]\), 
                  ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"uvel", "=", 
                    RowBox[{"ListInterpolation", "[", 
                      RowBox[{
                        FormBox[
                          FormBox[\(uvp[\([1]\)]\),
                            "TraditionalForm"],
                          "TraditionalForm"], 
                        ",", \({{1, MY} - 1, {1, MX} - 1.5}\), 
                        ",", \(InterpolationOrder \[Rule] 1\)}], "]"}]}], ";",
                   "\[IndentingNewLine]", \(vvel = 
                    ListInterpolation[
                      uvp[\([2]\)], {{1, MY} - 1.5, {1, MX} - 1}, 
                      InterpolationOrder \[Rule] 1]\), ";", 
                  "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \(g = 
                    DisplayTogether[\[IndentingNewLine]\[IndentingNewLine]\
ListDensityPlot[\(-grooves\), ImageSize \[Rule] 1800, 
                        Epilog \[Rule] {PointSize[0.0015], 
                            Function[{p, n, k}, {Blue, Point[p], Cyan, 
                                  Line[{p, p + n*k}]}]~
                              MapThread~{ir`X + 0.5, ir`nv, 
                                fscale*ir`df1[\([All, 1]\)]}, Orange, 
                            Text[StyleForm[t, 
                                FontFamily \[Rule] "\<Courier\>", 
                                FontSize \[Rule] 44, 
                                FontWeight \[Rule] "\<Bold\>"], {8, 
                                2}]}], \
\[IndentingNewLine]\[IndentingNewLine]PlotVectorField[{uvel[y, x], 
                          vvel[y, x]}, {x, 0, MX - 2}, {y, 0, MY - 2}, 
                        PlotRange \[Rule] {{0, MX - 2}, {\(-1\), MY - 2}}, 
                        ScaleFactor \[Rule] None, 
                        ScaleFunction \[Rule] \((#*vscale &)\), 
                        PlotPoints \[Rule] {64, 32}, Frame \[Rule] False, 
                        HeadLength \[Rule] 0.2*10^\(-2. \)]]\), ";"}]}], 
              "\[IndentingNewLine]", 
              "\[IndentingNewLine]", \( (*\(Export["\<g.\>" <> 
                      ToString[time] <> "\<.png\>", g];\)*) \), 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(RealtimeGraph[0]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Symbol::"argx"\), \(\(:\)\(\ \)\), "\<\"\\!\\(Symbol\\) called \
with \\!\\(0\\) arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::argx\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(MapThread::"mptd"\), \(\(:\)\(\ \)\), "\<\"Object \\!\\(0\\) at \
position {2, \\!\\(3\\)} in \
\\!\\(MapThread[\\(\\(\\(\\(Function[\\(\\(\\(\\({p, n, k}\\)\\), \
\\(\\({Blue, \\(\\(Point[p]\\)\\), Cyan, \\(\\(Line[\\(\\({p, \\(\\(p + \
\\(\\(n\\\\ k\\)\\)\\)\\)}\\)\\)]\\)\\)}\\)\\)\\)\\)]\\)\\), \
\\(\\({\\(\\({\\(\\({47.649497937558166`, 4.27336802180264`}\\)\\), \
\\(\\({48.58029847873293`, 4.123364786989757`}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({46.51104895848619`, 4.540126702314382`}\\)\\), \
\\(\\(\[LeftSkeleton] 158 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({\\(\\({\\(\\(-\\(\\(\[LeftSkeleton] 20 \[RightSkeleton]\\)\\)\\)\\), \
\\(\\(-\\(\\(\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 9 \[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 158 \
\[RightSkeleton]\\)\\)}\\)\\), 0}\\)\\)\\)\\)]\\) has only \\!\\(0\\) of \
required \\!\\(1\\) dimensions. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(DensityGraphics::"gmat"\), \(\(:\)\(\ \)\), \
"\<\"\\!\\(-\\*TagBox[\\(InterpolatingFunction[\\(\\(\\(\\({\\(\\({\\(\\(-1.\
9000000000000001`\\)\\), 10.9`}\\)\\), \
\\(\\({\\(\\(-1.9000000000000001`\\)\\), 21.900000000000002`}\\)\\)}\\)\\), \
\\(\\({2, 0, True, Real, \\(\\({1, 1}\\)\\), \\(\\({0, 0}\\)\\)}\\)\\), \
\\(\\({\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\\({0, 1, 2, 3, 4, \
5, 6, 7, 8, 9, \\(\\(\[LeftSkeleton] 7791 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)\\), \
7.5`, 7.5`, \\(\\(\[LeftSkeleton] 7790 \[RightSkeleton]\\)\\)}\\)\\)}\\)\\), \
\\(\\({Automatic, Automatic}\\)\\)\\)\\)]\\), False, Rule[Editable, \
False]]\\) is not a rectangular array larger than 2 x 2. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, \
ButtonData:>\\\"DensityGraphics::gmat\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gprim"\), \(\(:\)\(\ \)\), "\<\"\\!\\(\\*TagBox[\\(\
\[SkeletonIndicator] DensityGraphics \[SkeletonIndicator]\\), False, \
Rule[Editable, False]]\\) was encountered where a \\!\\(Graphics\\) primitive \
or directive was expected. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::gprim\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\({phi, pos} = ImportGrid["\<grid\>"];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions[phi[\([1]\)]]\)], "Input"],

Cell[BoxData[
    \({223, 223}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(pos[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({137, \(-7\)}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(Module[{i = 113}, 
        DisplayTogether[\(ListPlot[Take[phi[\([1, i + #1]\)], 30], 
                PlotStyle \[Rule] {#2}] &\)~
            MapThread~{{\(-1\), 0, 1}, {Thickness[ .003], Blue, 
                Red}}]];\)\)], "Input"],

Cell[BoxData[
    \(Pick[{ir`X, ir`op}\[Transpose] , Total /@ ir`shift, 0]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[phi[\([1]\)], 
      PlotRange \[Rule] {{1, 25}, {100, 126}, All}, 
      Epilog \[Rule] {Green, PointSize[0.0001], 
          Function[{x, idx}, {Point[x - pos[\([1]\)]], 
                Line[{x - pos[\([\)\(1\)\(]\)], 
                    idx - pos[\([\)\(1\)\(]\)]}]}]~MapThread~
            Transpose@
              Pick[{ir`X, ir`idx}\[Transpose] , Total /@ ir`shift, 
                0]}]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Pick[ir`shift, Total /@ ir`shift, 0]\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Position[phi[\([1]\)], Abs[#] < 3 &, {3}]\)], "Input"],

Cell[BoxData[
    \({}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(vel[{x_, y_}] := {uvel[y, x], vvel[y, x]}\)], "Input"],

Cell[BoxData[
    \(vel /@ pts\)], "Input"],

Cell[BoxData[
    \(\(dt = 5;\)\)], "Input"],

Cell[BoxData[
    \(\(RK2 = 
        Function[
          p, \[IndentingNewLine]v1 = vel[p]; \[IndentingNewLine]p1 = 
            p + 0.5*dt*v1; \[IndentingNewLine]v2 = 
            vel[p1]; \[IndentingNewLine]p + 
            dt*v2\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[
    \(\(iters = NestList[RK2 /@ # &, pts, 200];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListPlot[#, PlotRange \[Rule] {{0, MX}, {0, MY}}] &\) /@ 
      iters\)}], "Input"],

Cell[BoxData[
    \("uvp.12073.Real64"\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(pr = {{\(-3\), 3} + LX/2, {\(-0.2\), 
            3}};\)\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[
                  time] <> "\<.array\>"]; \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]g = CellForces[]; \[IndentingNewLine]g = 
              Show[g, \[IndentingNewLine]Graphics[{PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.002], 
                    Point /@ 
                      groovesir}], \[IndentingNewLine]ImageSize \[Rule] 3100, 
                PlotRange \[Rule] pr, AspectRatio \[Rule] Automatic, 
                Background \[Rule] Black, 
                PlotLabel \[Rule] 
                  ToString[t]]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[5000]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph[#] &\) /@ Range[3000, 5000, 10]\)}], "Input"],

Cell[BoxData[
    \({Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null, Null, Null, Null, Null, Null, Null, Null, Null, Null}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Take[\[IndentingNewLine]FileNames["\<mycell.irregNode.*.array\>"], \
\[IndentingNewLine]{1, \(-1\), 1000}]\)], "Input"],

Cell[BoxData[
    \({"mycell.irregNode.100000.array", "mycell.irregNode.10090.array", 
      "mycell.irregNode.101819.array", "mycell.irregNode.102728.array", 
      "mycell.irregNode.103637.array", "mycell.irregNode.104546.array", 
      "mycell.irregNode.105455.array", "mycell.irregNode.106364.array", 
      "mycell.irregNode.107273.array", "mycell.irregNode.11713.array", 
      "mycell.irregNode.12713.array", "mycell.irregNode.13713.array", 
      "mycell.irregNode.14713.array", "mycell.irregNode.15713.array", 
      "mycell.irregNode.16713.array", "mycell.irregNode.17713.array", 
      "mycell.irregNode.18713.array", "mycell.irregNode.19713.array", 
      "mycell.irregNode.20713.array", "mycell.irregNode.21713.array", 
      "mycell.irregNode.22713.array", "mycell.irregNode.23713.array", 
      "mycell.irregNode.24713.array", "mycell.irregNode.25713.array", 
      "mycell.irregNode.26713.array", "mycell.irregNode.27713.array", 
      "mycell.irregNode.28713.array", "mycell.irregNode.29713.array", 
      "mycell.irregNode.30713.array", "mycell.irregNode.31713.array", 
      "mycell.irregNode.32713.array", "mycell.irregNode.33713.array", 
      "mycell.irregNode.34713.array", "mycell.irregNode.35713.array", 
      "mycell.irregNode.36713.array", "mycell.irregNode.37713.array", 
      "mycell.irregNode.38713.array", "mycell.irregNode.39713.array", 
      "mycell.irregNode.40713.array", "mycell.irregNode.41713.array", 
      "mycell.irregNode.42713.array", "mycell.irregNode.43713.array", 
      "mycell.irregNode.44713.array", "mycell.irregNode.45713.array", 
      "mycell.irregNode.46713.array", "mycell.irregNode.47713.array", 
      "mycell.irregNode.48713.array", "mycell.irregNode.49713.array", 
      "mycell.irregNode.50713.array", "mycell.irregNode.51713.array", 
      "mycell.irregNode.52713.array", "mycell.irregNode.53713.array", 
      "mycell.irregNode.54713.array", "mycell.irregNode.55713.array", 
      "mycell.irregNode.56713.array", "mycell.irregNode.57713.array", 
      "mycell.irregNode.58713.array", "mycell.irregNode.59713.array", 
      "mycell.irregNode.60713.array", "mycell.irregNode.61713.array", 
      "mycell.irregNode.62713.array", "mycell.irregNode.63713.array", 
      "mycell.irregNode.64713.array", "mycell.irregNode.65713.array", 
      "mycell.irregNode.66713.array", "mycell.irregNode.67713.array", 
      "mycell.irregNode.68713.array", "mycell.irregNode.69713.array", 
      "mycell.irregNode.70713.array", "mycell.irregNode.71713.array", 
      "mycell.irregNode.72713.array", "mycell.irregNode.73713.array", 
      "mycell.irregNode.74713.array", "mycell.irregNode.75713.array", 
      "mycell.irregNode.76713.array", "mycell.irregNode.77713.array", 
      "mycell.irregNode.78713.array", "mycell.irregNode.79713.array", 
      "mycell.irregNode.80713.array", "mycell.irregNode.81713.array", 
      "mycell.irregNode.82713.array", "mycell.irregNode.83713.array", 
      "mycell.irregNode.84713.array", "mycell.irregNode.85713.array", 
      "mycell.irregNode.86713.array", "mycell.irregNode.87713.array", 
      "mycell.irregNode.88713.array", "mycell.irregNode.89713.array", 
      "mycell.irregNode.90713.array", "mycell.irregNode.91713.array", 
      "mycell.irregNode.92713.array", "mycell.irregNode.93713.array", 
      "mycell.irregNode.94713.array", "mycell.irregNode.95713.array", 
      "mycell.irregNode.96713.array", "mycell.irregNode.97713.array", 
      "mycell.irregNode.98713.array", 
      "mycell.irregNode.99713.array"}\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FkAc", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = \("\</data/sims/FkAc/\>" <> ToString[#] &\) /@ 
        Range[2, 15]\)], "Input"],

Cell[BoxData[
    \({"/data/sims/FkAc/2", "/data/sims/FkAc/3", "/data/sims/FkAc/4", 
      "/data/sims/FkAc/5", "/data/sims/FkAc/6", "/data/sims/FkAc/7", 
      "/data/sims/FkAc/8", "/data/sims/FkAc/9", "/data/sims/FkAc/10", 
      "/data/sims/FkAc/11", "/data/sims/FkAc/12", "/data/sims/FkAc/13", 
      "/data/sims/FkAc/14", "/data/sims/FkAc/15"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(contactArea = \(\((\[IndentingNewLine]SetDirectory[#]; \
\[IndentingNewLine]Import["\<contactarea.dat\>"]\[IndentingNewLine])\) &\) /@ 
          sims;\)\), "\[IndentingNewLine]", 
    \(Dimensions /@ contactArea\)}], "Input"],

Cell[BoxData[
    \({{40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 
        2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 
        2}, {40000, 2}, {40000, 2}, {40000, 2}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(DisplayTogether[\[IndentingNewLine]\(ListPlot[contactArea[\([#]\)], 
              PlotStyle \[Rule] {Thickness[0.001], 
                  Hue[#/Length[contactArea]]}, PlotJoined \[Rule] True] &\)~
          Array~Length@contactArea\[IndentingNewLine]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Fk = Range[0.2, 1.5, 0.1]\), "\[IndentingNewLine]", 
    \(Length[Fk]\)}], "Input"],

Cell[BoxData[
    \({0.2`, 0.30000000000000004`, 0.4`, 0.5`, 0.6000000000000001`, 0.7`, 
      0.8`, 0.9000000000000001`, 1.`, 1.1`, 1.2`, 1.3`, 1.4000000000000001`, 
      1.5`}\)], "Output"],

Cell[BoxData[
    \(14\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(dat = Thread[{Fk, contactArea[\([All, \(-1\), 2]\)]}]\)], "Input"],

Cell[BoxData[
    \({{0.2`, 60.34316`}, {0.30000000000000004`, 47.73759`}, {0.4`, 
        46.93293`}, {0.5`, 39.03497`}, {0.6000000000000001`, 
        36.05277`}, {0.7`, 33.52712`}, {0.8`, 
        31.29547`}, {0.9000000000000001`, 30.369169999999997`}, {1.`, 
        29.08756`}, {1.1`, 28.406850000000002`}, {1.2`, 27.635`}, {1.3`, 
        27.1686`}, {1.4000000000000001`, 26.33454`}, {1.5`, 
        25.561950000000003`}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot[dat];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(0.2*60*0.1\), "\[IndentingNewLine]", 
    \(1.5*25*0.1\)}], "Input"],

Cell[BoxData[
    \(1.2000000000000002`\)], "Output"],

Cell[BoxData[
    \(3.7500000000000004`\)], "Output"]
}, Open  ]]
}, Closed]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 2400}, {0, 1600}},
AutoGeneratedPackage->Automatic,
WindowSize->{1200, 1523},
WindowMargins->{{0, Automatic}, {0, Automatic}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 183, 3, 43, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[1962, 58, 798, 15, 235, "Input"],
Cell[2763, 75, 46, 1, 26, "Output"],
Cell[2812, 78, 38, 1, 26, "Output"],
Cell[2853, 81, 35, 1, 26, "Output"],
Cell[2891, 84, 36, 1, 26, "Output"]
}, Open  ]],
Cell[2942, 88, 82, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[3049, 93, 59, 1, 27, "Input"],
Cell[3111, 96, 52, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3200, 102, 69, 1, 27, "Input"],
Cell[3272, 105, 42, 1, 26, "Output"]
}, Open  ]],
Cell[3329, 109, 1014, 18, 187, "Input"],
Cell[4346, 129, 64, 1, 27, "Input"],
Cell[4413, 132, 1272, 22, 219, "Input",
  InitializationCell->True],
Cell[5688, 156, 728, 13, 123, "Input"],
Cell[6419, 171, 972, 19, 171, "Input"],
Cell[7394, 192, 312, 5, 75, "Input"],
Cell[7709, 199, 114, 2, 43, "Input"],
Cell[7826, 203, 116, 2, 43, "Input"],
Cell[7945, 207, 225, 5, 27, "Input"],

Cell[CellGroupData[{
Cell[8195, 216, 114, 2, 27, "Input"],
Cell[8312, 220, 53, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8402, 226, 118, 2, 42, "Input"],
Cell[8523, 230, 54, 1, 26, "Output"]
}, Open  ]],
Cell[8592, 234, 215, 4, 27, "Input"],
Cell[8810, 240, 245, 4, 43, "Input"],
Cell[9058, 246, 93, 1, 27, "Input"],
Cell[9154, 249, 1373, 26, 267, "Input"],
Cell[10530, 277, 63, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[10618, 282, 577, 11, 107, "Input"],
Cell[11198, 295, 1722, 32, 101, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12957, 332, 60, 1, 27, "Input"],
Cell[13020, 335, 130, 3, 26, "Output"]
}, Open  ]],
Cell[13165, 341, 146, 3, 27, "Input"],

Cell[CellGroupData[{
Cell[13336, 348, 56, 1, 27, "Input"],
Cell[13395, 351, 137, 3, 26, "Output"]
}, Open  ]],
Cell[13547, 357, 118, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[13690, 363, 156, 3, 43, "Input"],
Cell[13849, 368, 70, 1, 26, "Output"]
}, Open  ]],
Cell[13934, 372, 100, 2, 43, "Input"],
Cell[14037, 376, 116, 2, 27, "Input"],
Cell[14156, 380, 104, 2, 43, "Input"],
Cell[14263, 384, 63, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[14351, 389, 69, 1, 27, "Input"],
Cell[14423, 392, 42, 1, 26, "Output"]
}, Open  ]],
Cell[14480, 396, 75, 1, 27, "Input"],
Cell[14558, 399, 54, 1, 27, "Input"],
Cell[14615, 402, 152, 3, 43, "Input"],
Cell[14770, 407, 515, 9, 75, "Input"],

Cell[CellGroupData[{
Cell[15310, 420, 32, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[15367, 424, 414, 10, 91, "Input"],
Cell[15784, 436, 396, 6, 20, "Message"],
Cell[16183, 444, 396, 6, 20, "Message"],
Cell[16582, 452, 396, 6, 20, "Message"],
Cell[16981, 460, 339, 5, 20, "Message"],
Cell[17323, 467, 42, 1, 26, "Output"]
}, Open  ]],
Cell[17380, 471, 57, 1, 27, "Input"],
Cell[17440, 474, 79, 1, 27, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[17556, 480, 32, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[17613, 484, 47, 1, 27, "Input"],
Cell[17663, 487, 111, 2, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17811, 494, 612, 11, 107, "Input"],
Cell[18426, 507, 79, 1, 22, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[18542, 513, 100, 2, 43, "Input"],
Cell[18645, 517, 37, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[18719, 523, 62, 1, 27, "Input"],
Cell[18784, 526, 130, 3, 26, "Output"]
}, Open  ]],
Cell[18929, 532, 51, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[19005, 537, 244, 4, 59, "Input"],
Cell[19252, 543, 79, 1, 22, "Print"]
}, Open  ]],
Cell[19346, 547, 50, 1, 27, "Input"],
Cell[19399, 550, 231, 5, 43, "Input"],

Cell[CellGroupData[{
Cell[19655, 559, 68, 1, 27, "Input"],
Cell[19726, 562, 130, 3, 26, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[19905, 571, 31, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[19961, 575, 81, 1, 27, "Input"],
Cell[20045, 578, 314, 5, 41, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[20396, 588, 249, 4, 91, "Input"],
Cell[20648, 594, 151, 2, 26, "Output"]
}, Open  ]],
Cell[20814, 599, 189, 3, 44, "Input"],

Cell[CellGroupData[{
Cell[21028, 606, 92, 1, 44, "Input"],
Cell[21123, 609, 91, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[21251, 615, 698, 13, 191, "Input"],
Cell[21952, 630, 42, 1, 26, "Output"]
}, Open  ]],
Cell[22009, 634, 26, 0, 27, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[22072, 639, 32, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[22129, 643, 73, 1, 27, "Input"],
Cell[22205, 646, 208, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[22450, 654, 175, 3, 75, "Input"],
Cell[22628, 659, 208, 3, 26, "Output"]
}, Open  ]],
Cell[22851, 665, 916, 15, 229, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[23804, 685, 28, 0, 44, "Section"],
Cell[23835, 687, 73, 1, 27, "Input"],
Cell[23911, 690, 671, 12, 139, "Input"],
Cell[24585, 704, 966, 18, 213, "Input"],
Cell[25554, 724, 233, 5, 59, "Input"],

Cell[CellGroupData[{
Cell[25812, 733, 130, 2, 43, "Input"],
Cell[25945, 737, 58, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26040, 743, 62, 1, 27, "Input"],
Cell[26105, 746, 55, 1, 26, "Output"]
}, Open  ]],
Cell[26175, 750, 116, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[26316, 756, 728, 13, 139, "Input"],
Cell[27047, 771, 137, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27221, 779, 211, 3, 59, "Input"],
Cell[27435, 784, 1753, 35, 115, "Output"]
}, Open  ]],
Cell[29203, 822, 65, 1, 27, "Input"],
Cell[29271, 825, 64, 1, 27, "Input"],
Cell[29338, 828, 64, 1, 27, "Input"],
Cell[29405, 831, 119, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[29549, 837, 238, 4, 59, "Input"],
Cell[29790, 843, 1112, 23, 85, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30939, 871, 152, 6, 107, "Input"],
Cell[31094, 879, 55, 1, 26, "Output"],
Cell[31152, 882, 52, 1, 26, "Output"],
Cell[31207, 885, 55, 1, 26, "Output"],
Cell[31265, 888, 61, 1, 26, "Output"],
Cell[31329, 891, 55, 1, 26, "Output"],
Cell[31387, 894, 56, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[31480, 900, 332, 6, 108, "Input"],
Cell[31815, 908, 47, 1, 26, "Output"]
}, Open  ]],
Cell[31877, 912, 46, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[31948, 917, 92, 1, 27, "Input"],
Cell[32043, 920, 130, 3, 26, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[32222, 929, 26, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[32273, 933, 127, 2, 43, "Input"],
Cell[32403, 937, 324, 5, 20, "Message"],
Cell[32730, 944, 323, 5, 20, "Message"],
Cell[33056, 951, 766, 11, 33, "Message"],
Cell[33825, 964, 37, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[33899, 970, 62, 1, 27, "Input"],
Cell[33964, 973, 137, 3, 26, "Output"]
}, Open  ]],
Cell[34116, 979, 73, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[34214, 984, 47, 1, 27, "Input"],
Cell[34264, 987, 338, 5, 20, "Message"],
Cell[34605, 994, 338, 5, 20, "Message"],
Cell[34946, 1001, 338, 5, 20, "Message"],
Cell[35287, 1008, 332, 5, 20, "Message"],
Cell[35622, 1015, 130, 3, 26, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[35801, 1024, 36, 0, 44, "Section"],
Cell[35840, 1026, 58, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[35923, 1031, 3013, 54, 363, "Input"],
Cell[38939, 1087, 309, 5, 20, "Message"],
Cell[39251, 1094, 1115, 16, 33, "Message"],
Cell[40369, 1112, 1025, 15, 33, "Message"],
Cell[41397, 1129, 434, 6, 20, "Message"]
}, Open  ]],
Cell[41846, 1138, 73, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[41944, 1143, 57, 1, 27, "Input"],
Cell[42004, 1146, 44, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[42085, 1152, 45, 1, 27, "Input"],
Cell[42133, 1155, 47, 1, 26, "Output"]
}, Open  ]],
Cell[42195, 1159, 258, 5, 27, "Input"],
Cell[42456, 1166, 87, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[42568, 1171, 444, 9, 59, "Input"],
Cell[43015, 1182, 137, 3, 26, "Output"]
}, Open  ]],
Cell[43167, 1188, 69, 1, 27, "Input"],
Cell[43239, 1191, 26, 0, 27, "Input"],

Cell[CellGroupData[{
Cell[43290, 1195, 74, 1, 27, "Input"],
Cell[43367, 1198, 36, 1, 26, "Output"]
}, Open  ]],
Cell[43418, 1202, 74, 1, 27, "Input"],
Cell[43495, 1205, 43, 1, 27, "Input"],
Cell[43541, 1208, 44, 1, 27, "Input"],
Cell[43588, 1211, 267, 6, 107, "Input"],
Cell[43858, 1219, 76, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[43959, 1224, 145, 3, 43, "Input"],
Cell[44107, 1229, 52, 1, 26, "Output"]
}, Open  ]],
Cell[44174, 1233, 1189, 23, 203, "Input"],

Cell[CellGroupData[{
Cell[45388, 1260, 126, 2, 43, "Input"],
Cell[45517, 1264, 1352, 17, 131, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[46906, 1286, 139, 2, 59, "Input"],
Cell[47048, 1290, 3521, 50, 311, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[50618, 1346, 23, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[50666, 1350, 108, 2, 27, "Input"],
Cell[50777, 1354, 362, 5, 41, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[51176, 1364, 249, 4, 91, "Input"],
Cell[51428, 1370, 220, 3, 41, "Output"]
}, Open  ]],
Cell[51663, 1376, 290, 4, 59, "Input"],

Cell[CellGroupData[{
Cell[51978, 1384, 104, 2, 43, "Input"],
Cell[52085, 1388, 192, 3, 26, "Output"],
Cell[52280, 1393, 36, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[52353, 1399, 86, 1, 27, "Input"],
Cell[52442, 1402, 441, 7, 41, "Output"]
}, Open  ]],
Cell[52898, 1412, 51, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[52974, 1417, 89, 2, 43, "Input"],
Cell[53066, 1421, 53, 1, 26, "Output"],
Cell[53122, 1424, 53, 1, 26, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

