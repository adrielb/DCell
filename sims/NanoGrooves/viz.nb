(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     84299,       2198]*)
(*NotebookOutlinePosition[     84983,       2222]*)
(*  CellTagsIndexPosition[     84939,       2218]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Init", "Section"],

Cell[BoxData[{
    \(Get[Environment["\<ALT_DISP\>"]]\), "\[IndentingNewLine]", 
    \(Get["\</home/abergman/Research/DCell/PetscImport.m\>"]\)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(fscale = 1000;\)\), "\[IndentingNewLine]", 
    \(\(vscale = 100;\)\), "\[IndentingNewLine]", 
    \(ImportInfo[]\), "\[IndentingNewLine]", 
    \(size\), "\[IndentingNewLine]", 
    \(\(MX = size[\([1]\)];\)\), "\n", 
    \(\(MY = size[\([2]\)];\)\), "\[IndentingNewLine]", 
    \(\(LX = len[\([1]\)];\)\), "\[IndentingNewLine]", 
    \(\(LY = len[\([2]\)];\)\), "\[IndentingNewLine]", 
    \(\(contactThres = 
        GetParam["\<contactThres\>"];\)\), "\[IndentingNewLine]", 
    \(\(kclip = GetParam["\<kclip\>"];\)\), "\[IndentingNewLine]", 
    \(Fa = GetParam["\<Fa\>"]\), "\[IndentingNewLine]", 
    \(Fk = GetParam["\<Fk\>"]\), "\[IndentingNewLine]", 
    \(Fk0 = GetParam["\<Fk0\>"]\), "\[IndentingNewLine]", 
    \(\(adhesionRadius = 
        GetParam["\<adhesionRadius\>"];\)\), "\[IndentingNewLine]", 
    \(lastIdx = \(\(\(Last@FileNames["\<uvp*\>"] // 
              StringSplit[#, "\<.\>"] &\) // Part[#, 2] &\) // 
          ToExpression\) // # - 10000 &\)}], "Input"],

Cell[BoxData[
    \({175, 45, 0}\)], "Output"],

Cell[BoxData[
    \(0.05`\)], "Output"],

Cell[BoxData[
    \(0\)], "Output"],

Cell[BoxData[
    \(20\)], "Output"],

Cell[BoxData[
    \(49999\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(SetDirectory["\</data/sims/Fk/07\>"];\)\)], "Input"],

Cell[BoxData[
    \(\(SetDirectory["\</data/scratch\>"];\)\)], "Input"],

Cell[BoxData[{
    \(\(ImportIrreg["\<grooves.irregNode.10001.array\>"];\)\), "\n", 
    \(\(contactir = ir`X*dx;\)\)}], "Input"],

Cell[BoxData[{
    \(\({{groovesbin, groovesls}, pos} = 
        ImportGrid["\<grooves\>"];\)\), "\[IndentingNewLine]", 
    \(\(Block[{MX, 
          MY}, \[IndentingNewLine] (*{MY, MX} = 
            Dimensions[groovesbin]; \[IndentingNewLine]grooves = 
            ListInterpolation[
              groovesbin, {{1, MY} - 0.5 + pos[\([1, 2]\)], {1, MX} - 0.5 + 
                    pos[\([1, 1]\)]}*dx, 
              InterpolationOrder \[Rule] 0];*) \[IndentingNewLine]{MY, MX} = 
          Dimensions[groovesls]; \[IndentingNewLine]grooves = 
          ListInterpolation[
            groovesls, {{1, MY} - 1 + pos[\([2, 2]\)], {1, MX} - 1 + 
                  pos[\([2, 1]\)]}*dx, 
            InterpolationOrder \[Rule] 
              1];\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(ImportIrreg["\<grooves.irregNode.10000.array\>"];\)\), "\n", 
    \(\(\(groovesir = ir`X*dx;\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(DensityPlot[grooves[y, x], {x, 0, LX}, {y, 0, LY}, 
        ImageSize \[Rule] 2000, 
        Epilog \[Rule] {Green, PointSize[0.003], Point /@ groovesir}, 
        AspectRatio \[Rule] Automatic, 
        PlotPoints \[Rule] Round[10 {LX, LY}]];\)\)}], "Input"],

Cell[BoxData[
    \(\(g2 = 
        ContourPlot[grooves[y, x], {x, 0, LX}, {y, 0, LY}, 
          Contours \[Rule] Range[\(-5\), 5], ContourShading \[Rule] None, 
          ContourStyle \[Rule] Green, AspectRatio \[Rule] Automatic, 
          PlotPoints \[Rule] 600, ImageSize \[Rule] 2000, 
          Epilog \[Rule] {PointSize[0.005], 
              Point /@ groovesir}];\)\)], "Input"],

Cell[BoxData[
    \(\(Show[g, g2];\)\)], "Input"],

Cell[BoxData[
    \(\(ListDensityPlot[groovesbin, 
        Epilog \[Rule] {Green, \(Point[# + 0.5] &\) /@ ir`x}, 
        Mesh \[Rule] True];\)\)], "Input"],

Cell[BoxData[{
    \(\(ListPlot[groovesls[\([30]\)]];\)\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[groovesbin, Frame \[Rule] True, 
        PlotRange \[Rule] {0, 1}, Mesh \[Rule] True];\)\)}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cell Forces viz", "Section"],

Cell[BoxData[{
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, fscale*ir`f1}\[Transpose] , {1, \(-1\), 
                3}]; \[IndentingNewLine]vecs = 
            Select[vecs, Abs[#[\([3]\)]] > 1 &]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.005], 
              Blue, Point /@ \((ir`X*dx)\), AbsoluteThickness[0.0025], 
              Function[{p, n, k}, {Magenta, 
                    Arrow[p, p + n*k, HeadScaling \[Rule] Absolute, 
                      HeadLength \[Rule] 15, ZeroShape \[Rule] None]}]~
                MapThread~
                vecs}]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, fscale*ir`f1}\[Transpose] , {1, \(-1\), 
                1}]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.005], 
              Blue, Point /@ \((ir`X*dx)\), AbsoluteThickness[0.0025], 
              Function[{p, n, f1}, {If[f1 > 0, Green, Red], 
                    Line[{p, p + n*f1}]}]~MapThread~
                vecs}]\[IndentingNewLine]];\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(CellForces[] := 
        Module[{vecs}, \[IndentingNewLine]vecs = 
            Take[{ir`X*dx, ir`nv, ir`fa, 
                  Fk0*Clip[
                      ir`k, {\(-kclip\), kclip}]}\[Transpose] , {1, \(-1\), 
                1}]; \[IndentingNewLine]vecs = 
            Transpose[vecs]; \[IndentingNewLine]Graphics[{PointSize[0.004], 
              Blue, \({Point[#] (*\(,\)\(Circle[#, 
                        adhesionRadius]\)*) } &\) /@ \((ir`X*dx)\), 
              AbsoluteThickness[0.0025], 
              Function[{p, n, f1, k}, \[IndentingNewLine]{Red, 
                    Line[0.01 + {p, p - n*k}], Green, Line[{p, p + n*f1}]}]~
                MapThread~vecs}]\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(pr = {17 {\(-1\), 1} + LX/2, {\(-1\), 
            10}};\)\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]g = 
              CellForces[]; \[IndentingNewLine]g = 
              Show[g, Epilog \[Rule] {PointSize[0.005], Black, 
                    Point /@ groovesir (*\(,\)\(Gray\)\(,\)\(Point /@ 
                        contactir\)*) }, ImageSize \[Rule] 1100, 
                PlotRange \[Rule] pr, AspectRatio \[Rule] Automatic, 
                PlotLabel \[Rule] 
                  ToString[t]]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[lastIdx]\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Histogram[ir`fa, PlotLabel -> "\<Fa\>"];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[Fk0*Clip[ir`k, {\(-kclip\), kclip}], 
        PlotLabel -> "\<k\>"];\)\), "\[IndentingNewLine]", 
    \(\(Histogram[1/ir`k, PlotLabel -> "\<r\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[0, lastIdx, 1000];\)\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[lastIdx - 1000, lastIdx, 10];\)\)}], "Input"],

Cell[BoxData[
    \(\(Histogram@
        Flatten[Function[t, 
              ImportIrreg["\<mycell.irregNode.\>" <> 
                  ToString[t + 10000] <> "\<.array\>"]; ir`fa] /@ 
            Range[0, 999]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \({{53.3, 0.815786}, {53.3, \(-2.21024\)}} /. {a_, b_} \[Rule] 
        Norm[a - b]\)], "Input"],

Cell[BoxData[
    \(3.0260260000000003`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \({{64.8227, 0.809063}, {64.9208, 1.02488}} /. {a_, b_} \[Rule] 
        Norm[a - b]\/2\)], "Input"],

Cell[BoxData[
    \(0.11853331545287221`\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Epilog \[Rule] {Orange, 
        Text[StyleForm[t, FontFamily \[Rule] "\<Courier\>", 
            FontSize \[Rule] 44, FontWeight \[Rule] "\<Bold\>"], {48.1489, 
            22.43}]}\)], "Input"],

Cell[BoxData[
    \(DensityPlot[\(-grooves[y, x]\), {x, 0, LX}, {y, 0, LY}, 
      PlotPoints \[Rule] 10 {LX, LY}, ImageSize \[Rule] 1100, 
      PlotRange \[Rule] {{0, LX}, {\(-10\), LY}, All}, 
      AspectRatio \[Rule] Automatic]\)], "Input"],

Cell[BoxData[
    \(Epilog \[Rule] {Green, PointSize[0.001], Point /@ groovesir}\)], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{pvel, 
                uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]\[IndentingNewLine]g = 
              DisplayTogether[\[IndentingNewLine]Graphics[{PointSize[0.005], 
                    Black, Point /@ 
                      groovesir}], \[IndentingNewLine]CellForces[], \
\[IndentingNewLine]PlotVectorField[{uvel[y, x], vvel[y, x]}, {x, dx, 
                    LX - 1}, {y, dx, LY - 1}, ScaleFactor \[Rule] None, 
                  ScaleFunction \[Rule] \((#*vscale &)\), 
                  PlotPoints \[Rule] Round[{MX, MY}/2], Frame \[Rule] False, 
                  HeadLength \[Rule] 0.2*10^\(-2. \)], PlotLabel \[Rule] t, 
                ImageSize \[Rule] 1111, 
                AspectRatio \[Rule] 
                  Automatic\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine] (*\(Export["\<g.\>" <> ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]\[IndentingNewLine]]];\)\), "\
\[IndentingNewLine]", 
    \(RealtimeGraph[4]\)}], "Input"],

Cell[BoxData[
    \(RealtimeGraph /@ Range[0, 999]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(pos = 
      Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]{pvel, uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]maxVel = 
              Table[{Norm[{uvel[y, x], vvel[y, x]}], {x, y}}, {y, 0, LY - 1, 
                  dx}, {x, 0, LX - 1, dx}]; \[IndentingNewLine]maxVel = 
              Flatten[maxVel, 
                1]; \[IndentingNewLine]maxVel[\([First@
                  Ordering[maxVel, \(-1\)]]\)]\[IndentingNewLine]]] /@ 
        Range[0, 3000, 100]\)], "Input"],

Cell[BoxData[
    \({{0.27154988673186914`, {52.2`, 
          0.9`}}, {0.26281310044428385`, {47.400000000000006`, 
          1.`}}, {0.2833253745056624`, {47.`, 
          1.`}}, {0.28344846097654364`, {53.400000000000006`, 
          1.`}}, {0.27950475285571474`, {46.300000000000004`, 
          1.`}}, {0.37283914356551273`, {45.900000000000006`, 
          1.`}}, {0.3096210558425106`, {45.400000000000006`, 
          1.`}}, {0.29830819849681134`, {45.1`, 
          1.`}}, {0.25674347551104737`, {55.2`, 
          1.`}}, {0.2578215232710432`, {55.5`, 
          1.`}}, {0.29654339347534553`, {55.900000000000006`, 
          1.`}}, {0.2912086677889139`, {43.900000000000006`, 
          1.`}}, {0.25350367625398207`, {56.5`, 
          1.`}}, {0.28883652157503936`, {43.`, 
          1.`}}, {0.319702672853488`, {57.1`, 
          1.`}}, {0.29089067148727416`, {42.6`, 
          1.`}}, {0.8323006830898471`, {57.900000000000006`, 
          1.1`}}, {0.2727044595423819`, {41.6`, 
          1.`}}, {0.2653556416116277`, {41.7`, 
          1.`}}, {0.26575528582441293`, {58.800000000000004`, 
          1.`}}, {0.25108625343445146`, {58.800000000000004`, 
          1.`}}, {0.21120359265606248`, {59.`, 
          1.`}}, {0.29056559781644997`, {40.1`, 
          1.`}}, {1.1971548495897053`, {59.5`, 
          1.5`}}, {0.2779074706881079`, {40.2`, 
          0.9`}}, {0.30526840372443964`, {39.900000000000006`, 
          1.`}}, {0.2485423884404463`, {60.2`, 
          0.9`}}, {0.2592128345762437`, {39.400000000000006`, 
          0.9`}}, {0.2748126448823257`, {60.7`, 
          1.`}}, {0.22388610875532522`, {61.2`, 
          1.`}}, {0.227053289024286`, {61.800000000000004`, 
          1.`}}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[pos[\([All, 2]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(maxVel = 
        Table[Norm[{uvel[y, x], vvel[y, x]}], {y, 0, LY - 1, dx}, {x, 0, 
            LX - 1, dx}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[maxVel]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot3D[maxVel, Mesh \[Rule] False, 
        BoxRatios \[Rule] {MX, MY, 100}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({pvel, uvel, vvel} = 
        ImportFluid[MX, MY, "\<uvp\>", 10000];\)\), "\n", 
    \(Dimensions /@ {pvel, uvel, vvel}\)}], "Input"],

Cell[BoxData[
    \({{249, 999}, {249, 999}, {249, 999}}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[vvel];\)\)}], "Input"],

Cell[BoxData[
    \(\(ListPlot3D[vvel, Mesh \[Rule] False, 
        BoxRatios \[Rule] {MX, MY, 100}];\)\)], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListPlot[pvel[\([100]\)]];\)\)}], "Input"],

Cell[BoxData[
    \(FileNames["\<mycell.irreg*\>"]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(StartRealtimeGraph[1, RealtimeGraph]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(RealtimeGraph /@ Range[8000, 8100, 1];\)\)], "Input"],

Cell[BoxData[
    \(\(Histogram[ir`f1];\)\)], "Input"],

Cell[BoxData[{
    \(\(contactarea = 
        Import["\<contactarea.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(ListPlot[contactarea];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(While[
      True, \[IndentingNewLine]clear; \[IndentingNewLine]contactarea = 
        Import["\<contactarea.dat\>"]; \[IndentingNewLine]ListPlot[
        contactarea]; \[IndentingNewLine]Pause[
        0.1];\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(contactarea1 = contactarea;\)\)], "Input"],

Cell[BoxData[{
    \(\(contactarea = 
        Import["\<contactarea.dat\>"];\)\), "\[IndentingNewLine]", 
    \(\(DisplayTogether[\[IndentingNewLine]ListPlot[contactarea1, 
          PlotJoined \[Rule] True, 
          PlotStyle \[Rule] Blue], \[IndentingNewLine]ListPlot[contactarea2, 
          PlotJoined \[Rule] True, 
          PlotStyle \[Rule] Red], \[IndentingNewLine]ListPlot[contactarea, 
          PlotJoined \[Rule] True, 
          PlotStyle \[Rule] Green]\[IndentingNewLine]];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(contactarea[\([\(-1\)]\)]\)], "Input"],

Cell[BoxData[
    \({596.8`, 12.73315`}\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Div-Free Check", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(fluid = 
        Function[
            t, \[IndentingNewLine]ImportFluid[MX, MY, "\<uvp\>", 
              t + 10000]\[IndentingNewLine]] /@ 
          Range[0, lastIdx, 100];\)\), "\n", 
    \(\({pres, uvel, vvel} = Transpose[fluid];\)\), "\[IndentingNewLine]", 
    \(Dimensions[fluid]\)}], "Input"],

Cell[BoxData[
    \({500, 3, 45, 175}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Max[Abs@uvel]\), "\[IndentingNewLine]", 
    \(Max[Abs@vvel]\)}], "Input"],

Cell[BoxData[
    \(0.3069034133777489`\)], "Output"],

Cell[BoxData[
    \(0.2738310057607232`\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(\(ListDensityPlot[#, ImageSize \[Rule] 2000, 
            PlotRange \[Rule] {\(-maxVel\), maxVel}] &\) /@ 
        uvel;\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Mean[Flatten[#]] &\) /@ pres // ListPlot\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(div = 
        Table[uvel[\([t, y, x + 1]\)] - uvel[\([t, y, x]\)] + 
            vvel[\([t, y + 1, x]\)] - vvel[\([t, y, x]\)], {t, 1, 
            Length[uvel]}, {y, 1, MY - 1}, {x, 1, 
            MX - 1}];\)\), "\[IndentingNewLine]", 
    \(rng = Quantile[Flatten@div, {0, 1}]\)}], "Input"],

Cell[BoxData[
    \({\(-0.02186976659455477`\), 0.0230689963167795`}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\n", 
    \(\(g = \(ListDensityPlot[#, 
              ImageSize \[Rule] 2200, \(PlotRange \[Rule] {\(-#\), #} &\)[
                Max[Abs@rng]]] &\) /@ div;\)\)}], "Input"],

Cell[BoxData[
    \(\(Export["\<g.\>" <> ToString[# + 1000] <> "\<.png\>", g[\([#]\)]] &\) /@ 
      Range[Length[g]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions[div]\)], "Input"],

Cell[BoxData[
    \({500, 44, 99}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Histogram[Abs@Flatten[div], ImageSize \[Rule] 1000, 
        AspectRatio \[Rule] 1, 
        BarEdges \[Rule] False];\)\), "\[IndentingNewLine]", 
    \(Histogram[Abs@Flatten[uvel], ImageSize \[Rule] 1000, 
      AspectRatio \[Rule] 1, BarEdges \[Rule] False]\)}], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(divuvel = 
        Table[{Max[Abs[div[\([t]\)]]], Max[Abs[uvel[\([t]\)]]]}, {t, 
            Length[div]}];\)\), "\[IndentingNewLine]", 
    \(ListPlot[divuvel]\)}], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(rng = Quantile[Flatten@div, {0, 1}];\)\), "\[IndentingNewLine]", 
    \(\(rng = \({\(-#\)/15, 0} &\)[
          Max[Abs@rng]];\)\), "\[IndentingNewLine]", 
    \(\(vscale = 5.0;\)\), "\[IndentingNewLine]", 
    \(\(pr = {{\(-7\), \(-4\)} + LX/2, {0.5, 3}, 
          rng};\)\), "\[IndentingNewLine]", 
    \(prx = pr[\([1]\)]; 
    pry = Clip[pr[\([2]\)], {dx, LY}];\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{pvel, 
                uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]\[IndentingNewLine]g = 
              DisplayTogether[\[IndentingNewLine]DensityPlot[
                  vvel[y + dx/2, x] - vvel[y - dx/2, x] + uvel[y, x + dx/2] - 
                    uvel[y, x - dx/2], {x, prx[\([1]\)], prx[\([2]\)]}, {y, 
                    pry[\([1]\)], pry[\([2]\)]}, 
                  PlotPoints \[Rule] 
                    Round[80 {Subtract @@ Reverse@prx, 
                          Subtract @@ Reverse@pry}], 
                  PlotRange \[Rule] 
                    pr], \[IndentingNewLine]Graphics[{PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.004], 
                    Point /@ 
                      groovesir}], \[IndentingNewLine]CellForces[], \
\[IndentingNewLine]PlotVectorField[{uvel[y, x], vvel[y, x]}, {x, 
                    prx[\([1]\)], prx[\([2]\)]}, {y, pry[\([1]\)], 
                    pry[\([2]\)]}, ScaleFactor \[Rule] None, 
                  ScaleFunction \[Rule] \((#*vscale &)\), 
                  PlotPoints \[Rule] 
                    Round[10*{Subtract @@ prx, Subtract @@ pry}*\(-1\)], 
                  Frame \[Rule] False, 
                  HeadLength \[Rule] 
                    0.2*10^\(-2. \)], \[IndentingNewLine]PlotLabel \[Rule] t, 
                ImageSize \[Rule] 2000, 
                AspectRatio \[Rule] 
                  Automatic\[IndentingNewLine]]; \[IndentingNewLine] \
(*\(Export["\<g.\>" <> ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[14000]\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[8000, 14000, 50];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Max curvature", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(allcurve = 
        Function[t, 
              Module[{time = 
                    t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                    ToString[
                      time] <> "\<.array\>"]; \[IndentingNewLine]ir`k\
\[IndentingNewLine]]] /@ Range[0, 100, 1] // 
          Flatten;\)\), "\[IndentingNewLine]", 
    \(Dimensions[allcurve]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10000.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10015.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(BinaryReadList::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found \
during \\!\\(BinaryReadList[\\(\\(\\\"mycell.irregNode.10016.array\\\", \
\\\"Real64\\\", \\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(BinaryReadList :: \\\"nffil\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({118322}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(Histogram[allcurve];\)\)], "Input"],

Cell[BoxData[
    \(\(Histogram[Select[allcurve, Abs[#] > 2 &]];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Stepping", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(ImportTemporal[]\), "\[IndentingNewLine]", 
    \(\(DisplayTogether[ListPlot[dt, PlotStyle \[Rule] PointSize[0.01]], 
        ListPlot[dtcfl, PlotStyle \[Rule] Green], 
        PlotRange \[Rule] {0.0, 0.5}];\)\)}], "Input"],

Cell[BoxData[
    \({"iter", "t", "dt", "dtcfl", "tiframe", "CFL"}\)], "Print"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot[TIME];\)\)], "Input"],

Cell[BoxData[{
    \(clear\), "\n", 
    \(\(Function[{dat, title}, ListPlot[dat, PlotLabel \[Rule] title]]~
        MapThread~{{TIME, dt, dtcfl, 
            CFL}, {"\<TIME\>", "\<dt\>", "\<dtcfl\>", "\<CFL\>"}};\)\)}], \
"Input"],

Cell[BoxData[
    \(Select[dtcfl, # < 1 &] // Histogram\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Mean[CFL]\)], "Input"],

Cell[BoxData[
    \(0.049710465039417236`\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Contact Area", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = FileNames["\</nas-0-0/sims/4466.*.Fk0\>"]\)], "Input"],

Cell[BoxData[
    \({"/nas-0-0/sims/4466.1.Fk0", "/nas-0-0/sims/4466.2.Fk0", 
      "/nas-0-0/sims/4466.3.Fk0", "/nas-0-0/sims/4466.4.Fk0", 
      "/nas-0-0/sims/4466.5.Fk0", "/nas-0-0/sims/4466.6.Fk0", 
      "/nas-0-0/sims/4466.7.Fk0", "/nas-0-0/sims/4466.8.Fk0", 
      "/nas-0-0/sims/4466.9.Fk0"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = FileNames["\</data/sims/Fk/*\>"]\)], "Input"],

Cell[BoxData[
    \({"/data/sims/Fk/00", "/data/sims/Fk/01", "/data/sims/Fk/02", 
      "/data/sims/Fk/03", "/data/sims/Fk/04", "/data/sims/Fk/05", 
      "/data/sims/Fk/06", "/data/sims/Fk/07"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(contactarea = \(\((\[IndentingNewLine]SetDirectory[#]; \
\[IndentingNewLine]Import["\<contactarea.dat\>"]\[IndentingNewLine])\) &\) /@ 
          sims;\)\), "\[IndentingNewLine]", 
    \(Dimensions /@ contactarea\)}], "Input"],

Cell[BoxData[
    \({{50000, 2}, {50000, 2}, {50000, 2}, {50000, 2}, {50000, 2}, {50000, 
        2}, {50000, 2}, {50000, 2}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(DisplayTogether[\(ListPlot[contactarea[\([#]\)], 
              PlotStyle \[Rule] Hue[#\/Length[contactarea]]] &\)~Array~
          Length@contactarea];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(N@\(#\/Length[contactarea]\) &\)~Array~Length@contactarea\)], "Input"],

Cell[BoxData[
    \({0.125`, 0.25`, 0.375`, 0.5`, 0.625`, 0.75`, 0.875`, 1.`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(Map[
        Function[{sims}, \[IndentingNewLine]DisplayTogether[\
\[IndentingNewLine]\(\((\[IndentingNewLine]SetDirectory["\</nas-0-0/abergman/\
sims/\>" <> 
                      ToString@
                        sims[\([#]\)] <> "\<.fa2\>"]; \
\[IndentingNewLine]ListPlot[Import["\<contactarea.dat\>"], 
                    PlotStyle \[Rule] Hue[#\/2], PlotJoined \[Rule] True, 
                    PlotRange \[Rule] {{0, 3000}, {0, 
                          60}}]\[IndentingNewLine])\) &\)~Array~
              2]\[IndentingNewLine]], {Range[4139, 4144], 
            Range[4145, 4150]}\[Transpose] ] // DisplayTogether\)}], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aggregate Viz", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = FileNames["\</data/sims/CFL/*\>"]\)], "Input"],

Cell[BoxData[
    \({"/data/sims/CFL/0", "/data/sims/CFL/1", "/data/sims/CFL/2", 
      "/data/sims/CFL/3", "/data/sims/CFL/4", "/data/sims/CFL/5", 
      "/data/sims/CFL/6", "/data/sims/CFL/7"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Map[
      Function[s, \[IndentingNewLine]SetDirectory[s]; \[IndentingNewLine]Last@
          FileNames["\<uvp*\>"]\[IndentingNewLine]], sims]\)], "Input"],

Cell[BoxData[
    \({"uvp.11623.Real64", "uvp.11049.Real64", "uvp.10748.Real64", 
      "uvp.10543.Real64", "uvp.10443.Real64", "uvp.10451.Real64", 
      "uvp.10439.Real64", "uvp.10428.Real64"}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[
          t, \[IndentingNewLine]DisplayTogether[\[IndentingNewLine]\(Module[{\
time = t + 10000}, \[IndentingNewLine]SetDirectory[
                    sims[\([#]\)]]; \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                      ToString[time] <> "\<.array\>"]; \[IndentingNewLine]g = 
                    Graphics[{PointSize[0.005], Hue[#\/Length[sims]], 
                        Point /@ \((ir`X*dx)\), 
                        AbsoluteThickness[0.0025]}]; \[IndentingNewLine]g = 
                    Show[g, ImageSize \[Rule] 1100, 
                      PlotRange \[Rule] {25 {\(-1\), 1} + LX/2, {\(-2\), 
                            LY}}, AspectRatio \[Rule] 
                        Automatic]; \[IndentingNewLine]g\[IndentingNewLine]] \
&\)~Array~Length@sims\[IndentingNewLine]]] /@ Range[0, 428, 1];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Curvature", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({phi, pos} = ImportGrid["\<mycell\>"];\)\), "\[IndentingNewLine]", 
    \(Dimensions[phi]\)}], "Input"],

Cell[BoxData[
    \({50, 54, 54}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(plot = 
        Function[
          t, \[IndentingNewLine]time = 
            t + 10000 - 
              1; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
              ToString[
                time] <> "\<.array\>"]; \[IndentingNewLine]ListDensityPlot[
            phi[\([t]\)], ImageSize \[Rule] 1100, 
            Epilog \[Rule] {PointSize[0.005], 
                Function[{p, n, k}, {Blue, Point[p - pos[\([t]\)]], Magenta, 
                      Line[{p - pos[\([t]\)], p - pos[\([t]\)] + n*k}]}]~
                  MapThread~{ir`X + 0.5, ir`nv, 
                    fscale*ir`f1}}]\[IndentingNewLine]];\)\), "\
\[IndentingNewLine]", 
    \(\(plot[49];\)\)}], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(\(plot /@ Range[50];\)\)}], "Input"],

Cell[BoxData[
    \(Curvature[i_, j_] := 
      If[i == 1 || j == 1 || i \[Equal] Length[p] || 
          j \[Equal] Length[p[\([1]\)]], 
        0, \[IndentingNewLine]py = \((p[\([i + 1, j]\)] - 
                p[\([i - 1, j]\)])\)/
            2; \[IndentingNewLine]px = \((p[\([i, j + 1]\)] - 
                p[\([i, j - 1]\)])\)/
            2; \[IndentingNewLine]pxy = \((p[\([i + 1, j + 1]\)] + 
                p[\([i - 1, j - 1]\)] - p[\([i + 1, j - 1]\)] - 
                p[\([i - 1, j + 1]\)])\)/4. ; \[IndentingNewLine]pyy = 
          p[\([i - 1, j]\)] - 2  p[\([i, j]\)] + 
            p[\([i + 1, j]\)]; \[IndentingNewLine]pxx = 
          p[\([i, j - 1]\)] - 2  p[\([i, j]\)] + 
            p[\([i, j + 1]\)]; \[IndentingNewLine]If[
          px\^2 + py\^2 \[Equal] 0. , 
          0, \[IndentingNewLine]k = \(\(px\^2\) pyy - px\ py\ pxy + \(py\^2\) \
pxx\)\/\((px\^2 + py\^2)\)\^\(3/2\); \[IndentingNewLine]pyy]\
\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[{
    \(\(idx = 11;\)\), "\[IndentingNewLine]", 
    \(\(p = phi[\([idx]\)];\)\), "\[IndentingNewLine]", 
    \(\(k = 
        Table[Curvature[i, j], {i, Length[p]}, {j, 
            Length[p[\([1]\)]]}];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(W = 1;\)\), "\[IndentingNewLine]", 
    \(rng = \(Round[{# - 3, # + 3}] &\) /@ {214, 112.417}\)}], "Input"],

Cell[BoxData[
    \({{211, 217}, {109, 115}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(rng = \ {{9, 15}, {109, 115}}\)], "Input"],

Cell[BoxData[
    \({{9, 15}, {109, 115}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(\(PlotRange \[Rule] {rng[\([1]\)], 
        rng[\([2]\)], {0.001, 0.02}}\)\(,\)\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[
        t, \[IndentingNewLine]time = 
          t + 10000 - 1; \[IndentingNewLine]ImportIrreg["\<irregNode.\>" <> 
            ToString[
              time] <> "\<.array\>"]; \[IndentingNewLine]ListDensityPlot[k, 
          ImageSize \[Rule] 800, Mesh \[Rule] False, 
          PlotRange \[Rule] {rng[\([1]\)], rng[\([2]\)], {0.00, 0.02}}, 
          Epilog \[Rule] {PointSize[0.0025], 
              Function[{p, n, k}, {Blue, Point[p - pos[\([t]\)]], Magenta, 
                    Line[{p - pos[\([t]\)], p - pos[\([t]\)] + n*k}]}]~
                MapThread~{ir`X + 0.5, ir`nv, 
                  fscale*ir`f1}}]\[IndentingNewLine]]\)[idx]\)}], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(kr = Take[p, Sequence @@ Reverse@rng];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[kr]\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[Sign@kr, ImageSize \[Rule] 300];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"4.013140985253192`", "3.013185458675719`", "2.013764313331268`",
               "1.0147761883319601`", 
              "0.015537638479167365`", \(-0.9841168006624706`\), \
\(-1.9836941574462121`\)},
            {"3.986780586868789`", "2.9859785118311453`", 
              "1.9858692111455518`", 
              "0.9867630274811598`", \(-0.012488196540822446`\), \
\(-1.0123816158363572`\), \(-2.0119804975489597`\)},
            {"3.970332278165636`", "2.9682811438380585`", 
              "1.966543900404142`", 
              "0.9664600700285155`", \(-0.03268433452109388`\), \
\(-1.0318935969227534`\), \(-2.030587189261631`\)},
            {"3.964796125364132`", "2.961584319896583`", 
              "1.9567501243739507`", 
              "0.949862307946911`", \(-0.04934684212747479`\), \
\(-1.0422697839147304`\), \(-2.038482557143894`\)},
            {"3.9715680034669996`", "2.96981661843168`", 
              "1.9684624951612273`", 
              "0.9685137137171534`", \(-0.03263763122911582`\), \
\(-1.0338625352755604`\), \(-2.0323307870579885`\)},
            {"3.988873408122857`", "2.988329045057961`", "1.988337440113577`",
               "0.9887770884330044`", \(-0.012273759237117352`\), \
\(-1.0139995676673066`\), \(-2.014040395343542`\)},
            {"4.015712977145785`", "3.015844731808027`", 
              "2.0162556462123318`", "1.0165711207424668`", 
              "0.015920492121637847`", \(-0.9851785407786691`\), \
\(-1.9854843277817331`\)}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(pyyRight = kr[\([All, 4]\)];\)\)], "Input"],

Cell[BoxData[
    \(\(pyyLeft = kr[\([All, 4]\)];\)\)], "Input"],

Cell[BoxData[
    \(\(ListPlot[kr[\([All, 4]\)]];\)\)], "Input"],

Cell[BoxData[
    \(DisplayTogether[ListPlot[pyyRight, PlotJoined \[Rule] True], 
      ListPlot[pyyLeft]]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(kr = Take[k, Sequence @@ Reverse@rng];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[kr]\), "\[IndentingNewLine]", 
    \(\(ListDensityPlot[kr, PlotRange \[Rule] All, 
        ImageSize \[Rule] 300];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0.009509578851487177`", "0.008569791444306585`", 
              "0.007710203398155979`", "0.007829697039718378`", 
              "0.00875283408749028`"},
            {"0.011000544051611438`", "0.00953153471121837`", 
              "0.003705195371039749`", "0.0035336303738905187`", 
              "0.009135794094419225`"},
            {"0.014929122476571965`", "0.021506146817467986`", 
              "0.03524916785184706`", "0.033371718504739876`", 
              "0.018783435631146927`"},
            {"0.010280128091184615`", "0.008162574165073044`", 
              "0.001611968945608444`", "0.003654661093639492`", 
              "0.011455718969083817`"},
            {"0.009003260123784607`", "0.00804326114640519`", 
              "0.007530657593611378`", "0.007830379366756735`", 
              "0.008958059280383734`"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Curvature[112, 214]\), "\n", 
    \(px\), "\n", 
    \(py\), "\n", 
    \(pxx\), "\n", 
    \(pyy\), "\n", 
    \(pxy\)}], "Input"],

Cell[BoxData[
    \(0.008026112464019075`\)], "Output"],

Cell[BoxData[
    \(1.000521715262327`\)], "Output"],

Cell[BoxData[
    \(0.001129692486903977`\)], "Output"],

Cell[BoxData[
    \(\(-0.0012904642237721031`\)\)], "Output"],

Cell[BoxData[
    \(0.008026112464019075`\)], "Output"],

Cell[BoxData[
    \(0.0004572974205551694`\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(px = 1;\)\), "\[IndentingNewLine]", 
    \(\(py = 0;\)\), "\[IndentingNewLine]", 
    \(\(pxx = 0.0013;\)\), "\[IndentingNewLine]", 
    \(\(pyy = \(-0.00803\);\)\), "\[IndentingNewLine]", 
    \(\(pxy = 0.000457;\)\), "\[IndentingNewLine]", 
    \(\(px\^2\) pyy - 2  px\ py\ pxy + \(py\^2\) pxx\)}], "Input"],

Cell[BoxData[
    \(\(-0.00803`\)\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \({0.001, 0.02}\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Histogram[Flatten[k], HistogramRange \[Rule] {0.001, 0.02}]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FMM err", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({fmm, pos} = ImportGrid["\<FMM-err\>"];\)\), "\[IndentingNewLine]", 
    \(Dimensions[fmm]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Import::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found during \
\\!\\(Import[\\(\\(\\\"FMM-err.size\\\", \\\"Table\\\"\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Import::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Import::"nffil"\), \(\(:\)\(\ \)\), "\<\"File not found during \
\\!\\(Import[\\(\\(\\\"FMM-err.pos\\\", \\\"Table\\\"\\)\\)]\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Import::nffil\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(MapThread::"mptd"\), \(\(:\)\(\ \)\), "\<\"Object \\!\\($Failed\
\\) at position {2, \\!\\(2\\)} in \
\\!\\(MapThread[\\(\\(\\(\\(Function[\\(\\(\\(\\({file$, size$}\\)\\), \\(\\(\
\\(\\(tmp$227781634 = \\(\\(Rest[\\(\\(Import[\\(\\(file$, \\\"Real64\\\", \
\\(\\(ByteOrdering \[Rule] 1\\)\\)\\)\\)]\\)\\)]\\)\\)\\)\\) ; \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)\\)\\)\\)\\)]\\)\\), \\(\\({\\(\\({\\\
\"FMM-\\\"\[Ellipsis]\\\"al64\\\"}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\)}\\)\\)\\)\\)]\\) has only \\!\\(0\\) of required \
\\!\\(1\\) dimensions. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({2}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[fmm[\([1]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(ImportIrreg["\<irregNode.10000.array\>"]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[ir`X]\)], "Input"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({2.5`, Indeterminate}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 2.5`}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Indeterminate\\) in \\!\\({Indeterminate, 2.5`}\\) is not a \
floating-point number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Graphics :: \\\"gptn\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Paricle Advection", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    RowBox[{
      RowBox[{"RealtimeGraph", "=", 
        RowBox[{"Function", "[", 
          RowBox[{"t", ",", 
            RowBox[{"Module", "[", 
              RowBox[{\({time = t + 10000}\), ",", "\[IndentingNewLine]", 
                
                RowBox[{\(vscale = 10^2\), ";", 
                  "\[IndentingNewLine]", \(fscale = 0\ 10^4\), ";", 
                  "\[IndentingNewLine]", \(uvp = 
                    ImportVec2[MX, 
                      3, "\<uvp.\>" <> ToString[time] <> "\<.Real64\>"]\), 
                  ";", "\[IndentingNewLine]", \
\(ImportIrreg["\<mycell.irregNode.\>" <> ToString[time] <> "\<.array\>"]\), 
                  ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"uvel", "=", 
                    RowBox[{"ListInterpolation", "[", 
                      RowBox[{
                        FormBox[
                          FormBox[\(uvp[\([1]\)]\),
                            "TraditionalForm"],
                          "TraditionalForm"], 
                        ",", \({{1, MY} - 1, {1, MX} - 1.5}\), 
                        ",", \(InterpolationOrder \[Rule] 1\)}], "]"}]}], ";",
                   "\[IndentingNewLine]", \(vvel = 
                    ListInterpolation[
                      uvp[\([2]\)], {{1, MY} - 1.5, {1, MX} - 1}, 
                      InterpolationOrder \[Rule] 1]\), ";", 
                  "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \(g = 
                    DisplayTogether[\[IndentingNewLine]\[IndentingNewLine]\
ListDensityPlot[\(-grooves\), ImageSize \[Rule] 1800, 
                        Epilog \[Rule] {PointSize[0.0015], 
                            Function[{p, n, k}, {Blue, Point[p], Cyan, 
                                  Line[{p, p + n*k}]}]~
                              MapThread~{ir`X + 0.5, ir`nv, 
                                fscale*ir`df1[\([All, 1]\)]}, Orange, 
                            Text[StyleForm[t, 
                                FontFamily \[Rule] "\<Courier\>", 
                                FontSize \[Rule] 44, 
                                FontWeight \[Rule] "\<Bold\>"], {8, 
                                2}]}], \
\[IndentingNewLine]\[IndentingNewLine]PlotVectorField[{uvel[y, x], 
                          vvel[y, x]}, {x, 0, MX - 2}, {y, 0, MY - 2}, 
                        PlotRange \[Rule] {{0, MX - 2}, {\(-1\), MY - 2}}, 
                        ScaleFactor \[Rule] None, 
                        ScaleFunction \[Rule] \((#*vscale &)\), 
                        PlotPoints \[Rule] {64, 32}, Frame \[Rule] False, 
                        HeadLength \[Rule] 0.2*10^\(-2. \)]]\), ";"}]}], 
              "\[IndentingNewLine]", 
              "\[IndentingNewLine]", \( (*\(Export["\<g.\>" <> 
                      ToString[time] <> "\<.png\>", g];\)*) \), 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      ";"}], "\[IndentingNewLine]", \(RealtimeGraph[0]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Symbol::"argx"\), \(\(:\)\(\ \)\), "\<\"\\!\\(Symbol\\) called \
with \\!\\(0\\) arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::argx\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(MapThread::"mptd"\), \(\(:\)\(\ \)\), "\<\"Object \\!\\(0\\) at \
position {2, \\!\\(3\\)} in \
\\!\\(MapThread[\\(\\(\\(\\(Function[\\(\\(\\(\\({p, n, k}\\)\\), \
\\(\\({Blue, \\(\\(Point[p]\\)\\), Cyan, \\(\\(Line[\\(\\({p, \\(\\(p + \
\\(\\(n\\\\ k\\)\\)\\)\\)}\\)\\)]\\)\\)}\\)\\)\\)\\)]\\)\\), \
\\(\\({\\(\\({\\(\\({47.649497937558166`, 5.27336802180264`}\\)\\), \
\\(\\({48.58029847873293`, 5.123364786989758`}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({46.51104895848619`, 5.540126702314382`}\\)\\), \
\\(\\(\[LeftSkeleton] 158 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({\\(\\({\\(\\(-\\(\\(\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)\\)\\), \
\\(\\(-\\(\\(\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 10 \[RightSkeleton]\\)\\)}\\)\\), 0}\\)\\)\\)\\)]\\) has only \
\\!\\(0\\) of required \\!\\(1\\) dimensions. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(DensityGraphics::"gmat"\), \(\(:\)\(\ \)\), \
"\<\"\\!\\(-\\*TagBox[\\(InterpolatingFunction[\\(\\(\\(\\({\\(\\({\\(\\(-1.6`\
\\)\\), 10.8`}\\)\\), \\(\\({\\(\\(-2.`\\)\\), 21.8`}\\)\\)}\\)\\), \\(\\({2, \
0, True, Real, \\(\\({1, 1}\\)\\), \\(\\({0, 0}\\)\\)}\\)\\), \
\\(\\({\\(\\({\\(\\(-1.6`\\)\\), \\(\\(\[LeftSkeleton] 9 \
\[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 53 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\)}\\)\\), \\(\\({\\(\\({0, 1, 2, 3, 4, 5, 6, 7, 8, \
9, \\(\\(\[LeftSkeleton] 7551 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({7.5`, \
7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] \
7550 \[RightSkeleton]\\)\\)}\\)\\)}\\)\\), \\(\\({Automatic, Automatic}\\)\\)\
\\)\\)]\\), False, Rule[Editable, False]]\\) is not a rectangular array \
larger than 2 x 2. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"DensityGraphics::gmat\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gprim"\), \(\(:\)\(\ \)\), "\<\"\\!\\(\\*TagBox[\\(\
\[SkeletonIndicator] DensityGraphics \[SkeletonIndicator]\\), False, \
Rule[Editable, False]]\\) was encountered where a \\!\\(Graphics\\) primitive \
or directive was expected. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::gprim\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\({phi, pos} = ImportGrid["\<grid\>"];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions[phi[\([1]\)]]\)], "Input"],

Cell[BoxData[
    \({223, 223}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(pos[\([1]\)]\)], "Input"],

Cell[BoxData[
    \({137, \(-7\)}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(Module[{i = 113}, 
        DisplayTogether[\(ListPlot[Take[phi[\([1, i + #1]\)], 30], 
                PlotStyle \[Rule] {#2}] &\)~
            MapThread~{{\(-1\), 0, 1}, {Thickness[ .003], Blue, 
                Red}}]];\)\)], "Input"],

Cell[BoxData[
    \(Pick[{ir`X, ir`op}\[Transpose] , Total /@ ir`shift, 0]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListDensityPlot[phi[\([1]\)], 
      PlotRange \[Rule] {{1, 25}, {100, 126}, All}, 
      Epilog \[Rule] {Green, PointSize[0.0001], 
          Function[{x, idx}, {Point[x - pos[\([1]\)]], 
                Line[{x - pos[\([\)\(1\)\(]\)], 
                    idx - pos[\([\)\(1\)\(]\)]}]}]~MapThread~
            Transpose@
              Pick[{ir`X, ir`idx}\[Transpose] , Total /@ ir`shift, 
                0]}]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  DensityGraphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Pick[ir`shift, Total /@ ir`shift, 0]\)], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Position[phi[\([1]\)], Abs[#] < 3 &, {3}]\)], "Input"],

Cell[BoxData[
    \({}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(vel[{x_, y_}] := {uvel[y, x], vvel[y, x]}\)], "Input"],

Cell[BoxData[
    \(vel /@ pts\)], "Input"],

Cell[BoxData[
    \(\(dt = 5;\)\)], "Input"],

Cell[BoxData[
    \(\(RK2 = 
        Function[
          p, \[IndentingNewLine]v1 = vel[p]; \[IndentingNewLine]p1 = 
            p + 0.5*dt*v1; \[IndentingNewLine]v2 = 
            vel[p1]; \[IndentingNewLine]p + 
            dt*v2\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[
    \(\(iters = NestList[RK2 /@ # &, pts, 200];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(ListPlot[#, PlotRange \[Rule] {{0, MX}, {0, MY}}] &\) /@ 
      iters\)}], "Input"],

Cell[BoxData[
    \("uvp.12073.Real64"\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(clear;\)\), "\n", 
    \(\(pr = {{\(-3\), 3} + LX/2, {\(-0.2\), 
            2}};\)\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = 
                t + 10000}, \
\[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[
                  time] <> "\<.array\>"]; \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]g = CellForces[]; \[IndentingNewLine]g = 
              Show[g, \[IndentingNewLine]Graphics[{PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.002], 
                    Point /@ 
                      groovesir}], \[IndentingNewLine]ImageSize \[Rule] 3100, 
                PlotRange \[Rule] pr, AspectRatio \[Rule] Automatic, 
                Background \[Rule] Black, 
                PlotLabel \[Rule] 
                  ToString[t]]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[5000]\)}], "Input"],

Cell[BoxData[{
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(\(\(RealtimeGraph[#] &\) /@ Range[0, lastIdx, 100];\)\)}], "Input"],

Cell[BoxData[
    \(\(Take[\[IndentingNewLine]FileNames["\<mycell.irregNode.*.array\>"], \
\[IndentingNewLine]{1, \(-1\), 1000}];\)\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Max Velocity", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(maxvels = 
        Import["\<!grep -e 'FluidFieldMaxVelocityMag'  info.log.0\>", \
"\<Table\>"];\)\), "\[IndentingNewLine]", 
    \(\(maxvels = maxvels[\([All, \(-1\)]\)];\)\), "\[IndentingNewLine]", 
    \(maxVel = Max[maxvels]\)}], "Input"],

Cell[BoxData[
    \(0.4082089`\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot[maxvels];\)\)], "Input"],

Cell[BoxData[
    \(\(ListPlot[maxvels\/Max[maxvels]];\)\)], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Particle Counts", "Section"],

Cell[BoxData[{
    \(\({phi, pos} = ImportGrid["\<mycell\>"];\)\), "\[IndentingNewLine]", 
    \(Dimensions[phi]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(\(ImportCounts = 
        Function[
          name, \[IndentingNewLine]Module[{pcounts}, 
            Function[
                t, \[IndentingNewLine]pcounts = 
                  Import[name <> "\<.\>" <> 
                      ToString[
                        10000 + t - 
                          1] <> "\<.array\>", "\<Integer32\>"]; \
\[IndentingNewLine]pcounts = 
                  Partition[
                    pcounts, \(Dimensions[
                        phi[\([t]\)]]\)[\([1]\)]]; \
\[IndentingNewLine]pcounts] /@ 
              Range[Length[
                  phi]]]\[IndentingNewLine]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(pcounts = 
        ImportCounts["\<particleCounts\>"];\)\), "\[IndentingNewLine]", 
    \(\(postcounts = 
        ImportCounts["\<postCounts\>"];\)\), "\[IndentingNewLine]", 
    \(Dimensions[postcounts]\)}], "Input"],

Cell[BoxData[
    \({500, 54, 54}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[
          t, \[IndentingNewLine]DisplayTogetherArray[\[IndentingNewLine]\
ListDensityPlot[pcounts[\([t]\)], 
              PlotRange \[Rule] {0, 
                  10\^3}], \[IndentingNewLine]ListDensityPlot[
              postcounts[\([t]\)], 
              PlotRange \[Rule] {0, 10\^3}], \[IndentingNewLine]ListPlot3D[
              postcounts[\([t]\)] - pcounts[\([t]\)], 
              PlotRange \[Rule] {0, 130}, PlotLabel \[Rule] ToString[t - 1]], 
            ImageSize \[Rule] 1500\[IndentingNewLine]]] /@ 
        Range[Length[phi] - 20, Length[phi] - 1, 1];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Function[
          t, \[IndentingNewLine]Max[postcounts[\([t]\)]]\[IndentingNewLine]] /@ 
        Range[Length[phi]] // ListPlot\)], "Input"],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\($Failed, 54.`\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\($Failed, 54.`\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Graphics::"gptn"\), \(\(:\)\(\ \)\), "\<\"Coordinate \
\\!\\(Partition[\\(\\($Failed, 54\\)\\)]\\) in \\!\\({155, \
\\(\\(Partition[\\(\\($Failed, 54\\)\\)]\\)\\)}\\) is not a floating-point \
number. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Graphics::gptn\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Function[
        t, \[IndentingNewLine]\(Position[postcounts[\([t]\)], 
              Max[postcounts[\([t]\)]]]\)[\([1]\)] - 1 + 
          Reverse@pos[\([\)\(-1\)\(]\)]\[IndentingNewLine]] /@ 
      Range[Length[phi]]\)], "Input"],

Cell[BoxData[
    RowBox[{\(Thread::"tdlen"\), \(\(:\)\(\ \)\), "\<\"Objects of unequal \
length in \\!\\(\\(\\({}\\)\\) - 1 + \\(\\({\\(\\(-8\\)\\), 23}\\)\\)\\) \
cannot be combined. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({{19, 63}, {19, 63}, {19, 63}, {19, 63}, {19, 63}, {19, 63}, {19, 
        63}, {19, 63}, {19, 63}, {19, 63}, {19, 63}, {6, 45}, {6, 45}, {6, 
        45}, {6, 45}, {6, 45}, {6, 45}, {6, 45}, {6, 45}, {6, 45}, {6, 
        45}, {6, 45}, {6, 45}, {6, 45}, {6, 45}, {7, 56}, {7, 43}, {7, 
        43}, {6, 54}, {7, 43}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 
        54}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 
        54}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 54}, {6, 46}, {6, 
        46}, {6, 46}, {6, 46}, {3, 57}, {3, 57}, {6, 46}, {7, 56}, {3, 
        57}, {3, 57}, {3, 57}, {3, 57}, {3, 57}, {3, 57}, {3, 57}, {3, 
        57}, {3, 57}, {3, 57}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 
        55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 
        55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 55}, {6, 
        55}, {6, 55}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {3, 43}, {6, 
        45}, {6, 45}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 47}, {5, 
        47}, {5, 47}, {5, 53}, {5, 47}, {5, 47}, {5, 53}, {5, 47}, {5, 
        47}, {0, 47}, {5, 47}, {0, 47}, {0, 47}, {0, 47}, {0, 47}, {0, 
        47}, {0, 47}, {0, 47}, {0, 47}, {0, 47}, {0, 47}, {0, 47}, {0, 
        47}, \(-1\) + {} + {\(-8\), 23}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \({\(-8\), 23}\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Particle-vel Viz", "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(lastIdx = \(\(\(Last@FileNames["\<uvp*\>"] // 
              StringSplit[#, "\<.\>"] &\) // Part[#, 2] &\) // 
          ToExpression\) // # - 10000 &\), "\n", 
    \(ImportTemporal[]\)}], "Input"],

Cell[BoxData[
    \(49999\)], "Output"],

Cell[BoxData[
    \({"iter", "t", "dt", "dtcfl", "tiframe", "CFL"}\)], "Print"]
}, Open  ]],

Cell[BoxData[{
    \(\(vscale = 3  dx/maxVel;\)\), "\[IndentingNewLine]", 
    \(\(pr = {{\(-7\), 0} + LX/2, {0, 3.2}};\)\), "\[IndentingNewLine]", 
    \(prx = pr[\([1]\)]; 
    pry = Clip[pr[\([2]\)], {0, LY}];\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{pvel, 
                uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]\[IndentingNewLine]g = 
              DisplayTogether[\[IndentingNewLine]Graphics[{PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.004], 
                    Point /@ groovesir, PointSize[0.004], Blue, 
                    Point /@ \((dx*
                          ir`X)\), \({Line[dx {{#, 100}, {#, \(-1\)}}], 
                          Line[dx {{\ 100, #}, {\(-1\), #}}]} &\) /@ 
                      Range[0.5, 100, 
                        1]}], \[IndentingNewLine]PlotVectorField[{uvel[y, x], 
                    vvel[y, x]}, {x, prx[\([1]\)], prx[\([2]\)]}, {y, 
                    pry[\([1]\)], pry[\([2]\)]}, ScaleFactor \[Rule] None, 
                  ScaleFunction \[Rule] \((#*vscale &)\), 
                  PlotPoints \[Rule] 
                    Round[10*{Subtract @@ prx, Subtract @@ pry}*\(-1\)], 
                  Frame \[Rule] False, 
                  HeadLength \[Rule] 
                    0.2*10^\(-2. \)], \[IndentingNewLine]PlotLabel \[Rule] t, 
                ImageSize \[Rule] 3100, AspectRatio \[Rule] Automatic, 
                PlotRange \[Rule] pr, 
                Background \[Rule] 
                  Black\[IndentingNewLine]]; \[IndentingNewLine] (*\(Export["\
\<g.\>" <> ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[Round[lastIdx]]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[1, lastIdx, 100];\)\)}], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[lastIdx - 1000, lastIdx, 1];\)\)}], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length@Range[lastIdx - 10000, lastIdx, 100]\)], "Input"],

Cell[BoxData[
    \(101\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Module[{s = 800}, \[IndentingNewLine]\(Function[
            p, \[IndentingNewLine]RealtimeGraph /@ 
              Range[p - s, p + s, 1]\[IndentingNewLine]]\)[
          pos[\([5]\)]]\[IndentingNewLine]];\)\)}], "Input"],

Cell[BoxData[{
    \(\(rng = 
        Flatten@Table[{prhs, urhs, vrhs} = 
              ImportFluid[MX, MY, "\<uvp\>", t + 10000]; 
            vrhs, {t, 8000, 11000, 100}];\)\), "\n", 
    \(\(rng = Quantile[rng, {0, 1}];\)\), "\[IndentingNewLine]", 
    \(\(rng = \({\(-#\)/50. , 0} &\)[
          Max[Abs[rng]]];\)\), "\[IndentingNewLine]", 
    \(\(vscale = 5.0;\)\), "\[IndentingNewLine]", 
    \(\(pr = {{\(-3\), 3} + LX/2, {\(-0.2\), 2}, 
          rng};\)\), "\[IndentingNewLine]", 
    \(prx = pr[\([1]\)]; 
    pry = Clip[pr[\([2]\)], {dx, LY}];\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{prhs, 
                urhs, vrhs} = 
              ImportFluid0[MX, MY, dx, "\<rhs\>", 
                time]; \[IndentingNewLine]{pvel, uvel, vvel} = 
              ImportFluid1[MX, MY, dx, "\<uvp\>", 
                time]; \[IndentingNewLine]\[IndentingNewLine]g = 
              DisplayTogether[\[IndentingNewLine]DensityPlot[
                  vvel[y + dx/2, x] - vvel[y - dx/2, x] + uvel[y, x + dx/2] - 
                    uvel[y, x - dx/2], {x, prx[\([1]\)], prx[\([2]\)]}, {y, 
                    pry[\([1]\)], pry[\([2]\)]}, 
                  PlotPoints \[Rule] 
                    Round[80 {Subtract @@ Reverse@prx, 
                          Subtract @@ Reverse@pry}], 
                  PlotRange \[Rule] 
                    pr], \[IndentingNewLine]Graphics[{PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.004], 
                    Point /@ 
                      groovesir}], \[IndentingNewLine]CellForces[], \
\[IndentingNewLine]PlotVectorField[{uvel[y, x], vvel[y, x]}, {x, 
                    prx[\([1]\)], prx[\([2]\)]}, {y, pry[\([1]\)], 
                    pry[\([2]\)]}, ScaleFactor \[Rule] None, 
                  ScaleFunction \[Rule] \((#*vscale &)\), 
                  PlotPoints \[Rule] Round[{MX, MY}/2], Frame \[Rule] False, 
                  HeadLength \[Rule] 
                    0.2*10^\(-2. \)], \[IndentingNewLine]PlotLabel \[Rule] t, 
                ImageSize \[Rule] 3000, 
                AspectRatio \[Rule] 
                  Automatic\[IndentingNewLine]]; \[IndentingNewLine] \
(*\(Export["\<g.\>" <> ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(\(clear;\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[2200]\)}], "Input"],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Histogram[radius];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[1500, lastIdx, 500];\)\)}], "Input"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[8000, 11000, 50];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Phi-contours and particles", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\({phi, pos} = ImportGrid["\<mycell\>"];\)\), "\n", 
    \(Dimensions[phi]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(34993\\) of \
\\!\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\) does not exist. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\(\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, \\(\\(\[LeftSkeleton] 5006 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(\\(\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\)\\) \
\[LeftDoubleBracket] \\(\\(34993, 1\\)\\) \
\[RightDoubleBracket]\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\
\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(34994\\) of \
\\!\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\) does not exist. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\(\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, \\(\\(\[LeftSkeleton] 5006 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(\\(\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\)\\) \
\[LeftDoubleBracket] \\(\\(34994, 1\\)\\) \
\[RightDoubleBracket]\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\
\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(34995\\) of \
\\!\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\) does not exist. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Part :: \\\"partw\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Partition::"ilsmp"\), \(\(:\)\(\ \)\), "\<\"Single or list of \
positive machine-size integers expected at position \\!\\(2\\) of \
\\!\\(Partition[\\(\\(\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, \\(\\(\[LeftSkeleton] 5006 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(\\(\\({\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \
\\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, 54}\\)\\), \\(\\({54, \
54}\\)\\), \\(\\(\[LeftSkeleton] 34982 \[RightSkeleton]\\)\\)}\\)\\) \
\[LeftDoubleBracket] \\(\\(34995, 1\\)\\) \
\[RightDoubleBracket]\\)\\)\\)\\)]\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\
\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::ilsmp\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Partition :: \\\"ilsmp\\\"\\) will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \({34997}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ListPlot[pos[\([All, 1]\)]]\)], "Input"],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[
                  time] <> "\<.array\>"]; \[IndentingNewLine]ListContourPlot[
              phi[\([t + 1]\)], Contours \[Rule] {0.5, 0, \(-0.5\)}, 
              ContourStyle \[Rule] Gray, ImageSize \[Rule] 3111, 
              AspectRatio \[Rule] Automatic, 
              PlotRange \[Rule] {{10, 25}, {10, 20}, All}, 
              Background \[Rule] Black, PlotLabel \[Rule] ToString[t], 
              Epilog \[Rule] {PointSize[0.004], 
                  Blue, \(Point[# - pos[\([t + 1]\)] + 1] &\) /@ \((ir`X)\), 
                  PointSize[0.0005], 
                  MapThread[{If[#2 < 0, Red, Green], 
                        Point[#1 - pos[\([t + 1]\)] + 1]} &, {Xp, 
                      radius}]}]]\[IndentingNewLine]] /@ 
        Range[Length[phi] - 10000, Length[phi], 100];\)\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(194\\) of \\!\
\\({\\(\\({\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
\\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] \
7 \[RightSkeleton]\\)\\), \\(\\({\\(\\({7.5`, \\(\\(\[LeftSkeleton] 9 \
\[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 44 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 9 \
\[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 44 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 183 \
\[RightSkeleton]\\)\\)}\\) does not exist. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(194\\) of \\!\
\\({\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 183 \[RightSkeleton]\\)\\)}\\) does not exist. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(Part::"partw"\), \(\(:\)\(\ \)\), "\<\"Part \\!\\(194\\) of \\!\
\\({\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \
\\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\({60, \\(\\(-7\\)\\)}\\)\\), \\(\\(\
\[LeftSkeleton] 183 \[RightSkeleton]\\)\\)}\\) does not exist. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::partw\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(Part :: \\\"partw\\\"\\) will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(ContourGraphics::"gmat"\), \(\(:\)\(\ \)\), \
"\<\"\\!\\(\\(\\({\\(\\({\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \\(\\(\
\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] \
8 \[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 183 \
\[RightSkeleton]\\)\\)}\\)\\) \[LeftDoubleBracket] 194 \
\[RightDoubleBracket]\\) is not a rectangular array larger than 2 x 2. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"ContourGraphics::gmat\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    RowBox[{\(ContourGraphics::"gmat"\), \(\(:\)\(\ \)\), \
"\<\"\\!\\(\\(\\({\\(\\({\\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \\(\\(\
\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 7 \
\[RightSkeleton]\\)\\), \\(\\({7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, 7.5`, \
7.5`, 7.5`, 7.5`, \\(\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\(\[LeftSkeleton] 44 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\), \\(\\(\[LeftSkeleton] \
8 \[RightSkeleton]\\)\\), \\(\\(\[LeftSkeleton] 183 \
\[RightSkeleton]\\)\\)}\\)\\) \[LeftDoubleBracket] 194 \
\[RightDoubleBracket]\\) is not a rectangular array larger than 2 x 2. \\!\\(\
\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, ButtonData:>\\\"ContourGraphics::gmat\\\"]\\)\"\>"}]], \
"Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Div", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(rng = 
        Flatten@Table[{prhs, urhs, vrhs} = 
              ImportFluid[MX, MY, "\<rhs\>", t + 10000]; 
            prhs, {t, 0, lastIdx, 1000}];\)\), "\n", 
    \(\(rng = Quantile[rng, {0, 1}];\)\), "\[IndentingNewLine]", 
    \(\(rng = \({0, #/5. } &\)[Max[Abs[rng]]];\)\), "\[IndentingNewLine]", 
    \(\(vscale = dx/Max[maxvels];\)\), "\[IndentingNewLine]", 
    \(\(pr = {{\(-11.5\), \(-5\)} + LX/2, {\(-0.2\), 3}, 
          rng};\)\), "\[IndentingNewLine]", 
    \(prx = pr[\([1]\)]; 
    pry = Clip[pr[\([2]\)], {0, LY}];\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph = 
        Function[t, 
          Module[{time = t + 10000}, \[IndentingNewLine]ImportParticles[
              t]; \[IndentingNewLine]ImportIrreg["\<mycell.irregNode.\>" <> 
                ToString[time] <> "\<.array\>"]; \[IndentingNewLine]{prhs, 
                urhs, vrhs} = 
              ImportFluid0[MX, MY, dx, "\<rhs\>", 
                time]; \[IndentingNewLine]g = 
              DensityPlot[
                prhs[y, x], {x, prx[\([1]\)], prx[\([2]\)]}, {y, 
                  pry[\([1]\)], pry[\([2]\)]}, 
                Epilog \[Rule] {PointSize[0.0005], 
                    MapThread[{If[#2 < 0, Red, Green], Point[#1*dx]} &, {Xp, 
                        radius}], Yellow, PointSize[0.004], 
                    Point /@ groovesir, PointSize[0.004], Blue, 
                    Point /@ \((dx*ir`X)\)}, PlotPoints \[Rule] 100, 
                PlotLabel \[Rule] t, ImageSize \[Rule] 2100, 
                AspectRatio \[Rule] Automatic, 
                PlotRange \[Rule] 
                  pr]; \[IndentingNewLine] (*\(Export["\<g.\>" <> 
                    ToString[time] <> "\<.png\>", 
                  g];\)*) \[IndentingNewLine]]];\)\), "\[IndentingNewLine]", 
    \(RealtimeGraph[30000]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.`}\\) lies outside the range of data in the interpolating \
function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\
\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.065656565656566`}\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, \
ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.1313131313131315`}\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, \
ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(InterpolatingFunction :: \\\"dmval\\\"\\) will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\
\"RefGuideLinkText\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\
\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(clear\), "\[IndentingNewLine]", 
    \(\(RealtimeGraph /@ Range[15000, lastIdx, 50];\)\)}], "Input"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.`}\\) lies outside the range of data in the interpolating \
function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\
\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.065656565656566`}\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, \
ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(InterpolatingFunction::"dmval"\), \(\(:\)\(\ \)\), "\<\"Input \
value \\!\\({0.`, 6.1313131313131315`}\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", \
ButtonFrame->None, \
ButtonData:>\\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(General::"stop"\), \(\(:\)\(\ \)\), "\<\"Further output of \
\\!\\(InterpolatingFunction :: \\\"dmval\\\"\\) will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\
\"RefGuideLinkText\\\", ButtonFrame->None, ButtonData:>\\\"General::stop\\\"]\
\\)\"\>"}]], "Message"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FkAc", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sims = \("\</data/sims/FkAc/\>" <> ToString[#] &\) /@ 
        Range[2, 15]\)], "Input"],

Cell[BoxData[
    \({"/data/sims/FkAc/2", "/data/sims/FkAc/3", "/data/sims/FkAc/4", 
      "/data/sims/FkAc/5", "/data/sims/FkAc/6", "/data/sims/FkAc/7", 
      "/data/sims/FkAc/8", "/data/sims/FkAc/9", "/data/sims/FkAc/10", 
      "/data/sims/FkAc/11", "/data/sims/FkAc/12", "/data/sims/FkAc/13", 
      "/data/sims/FkAc/14", "/data/sims/FkAc/15"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(contactArea = \(\((\[IndentingNewLine]SetDirectory[#]; \
\[IndentingNewLine]Import["\<contactarea.dat\>"]\[IndentingNewLine])\) &\) /@ 
          sims;\)\), "\[IndentingNewLine]", 
    \(Dimensions /@ contactArea\)}], "Input"],

Cell[BoxData[
    \({{40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 
        2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 2}, {40000, 
        2}, {40000, 2}, {40000, 2}, {40000, 2}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(DisplayTogether[\[IndentingNewLine]\(ListPlot[contactArea[\([#]\)], 
              PlotStyle \[Rule] {Thickness[0.001], 
                  Hue[#/Length[contactArea]]}, PlotJoined \[Rule] True] &\)~
          Array~Length@contactArea\[IndentingNewLine]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Fk = Range[0.2, 1.5, 0.1]\), "\[IndentingNewLine]", 
    \(Length[Fk]\)}], "Input"],

Cell[BoxData[
    \({0.2`, 0.30000000000000004`, 0.4`, 0.5`, 0.6000000000000001`, 0.7`, 
      0.8`, 0.9000000000000001`, 1.`, 1.1`, 1.2`, 1.3`, 1.4000000000000001`, 
      1.5`}\)], "Output"],

Cell[BoxData[
    \(14\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(dat = Thread[{Fk, contactArea[\([All, \(-1\), 2]\)]}]\)], "Input"],

Cell[BoxData[
    \({{0.2`, 60.34316`}, {0.30000000000000004`, 47.73759`}, {0.4`, 
        46.93293`}, {0.5`, 39.03497`}, {0.6000000000000001`, 
        36.05277`}, {0.7`, 33.52712`}, {0.8`, 
        31.29547`}, {0.9000000000000001`, 30.369169999999997`}, {1.`, 
        29.08756`}, {1.1`, 28.406850000000002`}, {1.2`, 27.635`}, {1.3`, 
        27.1686`}, {1.4000000000000001`, 26.33454`}, {1.5`, 
        25.561950000000003`}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(ListPlot[dat];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(0.2*60*0.1\), "\[IndentingNewLine]", 
    \(1.5*25*0.1\)}], "Input"],

Cell[BoxData[
    \(1.2000000000000002`\)], "Output"],

Cell[BoxData[
    \(3.7500000000000004`\)], "Output"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 2400}, {0, 1600}},
AutoGeneratedPackage->Automatic,
WindowSize->{1200, 1525},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 23, 0, 74, "Section"],
Cell[1802, 55, 183, 3, 43, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[2010, 62, 1008, 19, 251, "Input"],
Cell[3021, 83, 46, 1, 26, "Output"],
Cell[3070, 86, 39, 1, 26, "Output"],
Cell[3112, 89, 35, 1, 26, "Output"],
Cell[3150, 92, 36, 1, 26, "Output"],
Cell[3189, 95, 39, 1, 26, "Output"]
}, Open  ]],
Cell[3243, 99, 74, 1, 27, "Input"],
Cell[3320, 102, 71, 1, 27, "Input"],
Cell[3394, 105, 129, 2, 43, "Input"],
Cell[3526, 109, 1221, 23, 203, "Input"],
Cell[4750, 134, 387, 7, 43, "Input"],
Cell[5140, 143, 49, 1, 27, "Input"],
Cell[5192, 146, 156, 3, 27, "Input"],
Cell[5351, 151, 209, 3, 43, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5597, 159, 34, 0, 74, "Section"],
Cell[5634, 161, 1272, 22, 219, "Input",
  InitializationCell->True],
Cell[6909, 185, 733, 13, 123, "Input"],
Cell[7645, 200, 975, 19, 171, "Input"],
Cell[8623, 221, 312, 5, 75, "Input"],
Cell[8938, 228, 119, 2, 43, "Input"],
Cell[9060, 232, 130, 2, 43, "Input"],
Cell[9193, 236, 225, 5, 27, "Input"],

Cell[CellGroupData[{
Cell[9443, 245, 114, 2, 27, "Input"],
Cell[9560, 249, 53, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9650, 255, 118, 2, 42, "Input"],
Cell[9771, 259, 54, 1, 26, "Output"]
}, Open  ]],
Cell[9840, 263, 215, 4, 27, "Input"],
Cell[10058, 269, 245, 4, 43, "Input"],
Cell[10306, 275, 93, 1, 27, "Input"],
Cell[10402, 278, 1326, 25, 267, "Input"],
Cell[11731, 305, 63, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[11819, 310, 577, 11, 107, "Input"],
Cell[12399, 323, 1722, 32, 101, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[14158, 360, 60, 1, 27, "Input"],
Cell[14221, 363, 130, 3, 26, "Output"]
}, Open  ]],
Cell[14366, 369, 146, 3, 27, "Input"],

Cell[CellGroupData[{
Cell[14537, 376, 56, 1, 27, "Input"],
Cell[14596, 379, 137, 3, 26, "Output"]
}, Open  ]],
Cell[14748, 385, 118, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[14891, 391, 156, 3, 43, "Input"],
Cell[15050, 396, 70, 1, 26, "Output"]
}, Open  ]],
Cell[15135, 400, 100, 2, 43, "Input"],
Cell[15238, 404, 116, 2, 27, "Input"],
Cell[15357, 408, 104, 2, 43, "Input"],
Cell[15464, 412, 63, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[15552, 417, 69, 1, 27, "Input"],
Cell[15624, 420, 42, 1, 26, "Output"]
}, Open  ]],
Cell[15681, 424, 75, 1, 27, "Input"],
Cell[15759, 427, 54, 1, 27, "Input"],
Cell[15816, 430, 152, 3, 43, "Input"],

Cell[CellGroupData[{
Cell[15993, 437, 261, 5, 107, "Input"],
Cell[16257, 444, 42, 1, 26, "Output"]
}, Open  ]],
Cell[16314, 448, 64, 1, 27, "Input"],
Cell[16381, 451, 506, 9, 107, "Input"],

Cell[CellGroupData[{
Cell[16912, 464, 58, 1, 27, "Input"],
Cell[16973, 467, 53, 1, 26, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[17075, 474, 33, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[17133, 478, 324, 7, 91, "Input"],
Cell[17460, 487, 51, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17548, 493, 95, 2, 43, "Input"],
Cell[17646, 497, 53, 1, 26, "Output"],
Cell[17702, 500, 53, 1, 26, "Output"]
}, Open  ]],
Cell[17770, 504, 198, 4, 43, "Input"],

Cell[CellGroupData[{
Cell[17993, 512, 75, 1, 27, "Input"],
Cell[18071, 515, 130, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[18238, 523, 317, 6, 43, "Input"],
Cell[18558, 531, 82, 1, 26, "Output"]
}, Open  ]],
Cell[18655, 535, 204, 4, 43, "Input"],
Cell[18862, 541, 130, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[19017, 547, 48, 1, 27, "Input"],
Cell[19068, 550, 47, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19152, 556, 335, 6, 59, "Input"],
Cell[19490, 564, 130, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19657, 572, 197, 4, 43, "Input"],
Cell[19857, 578, 130, 3, 26, "Output"]
}, Open  ]],
Cell[20002, 584, 2492, 45, 379, "Input"],
Cell[22497, 631, 118, 2, 43, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[22652, 638, 32, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[22709, 642, 414, 10, 91, "Input"],
Cell[23126, 654, 396, 6, 20, "Message"],
Cell[23525, 662, 396, 6, 20, "Message"],
Cell[23924, 670, 396, 6, 20, "Message"],
Cell[24323, 678, 339, 5, 20, "Message"],
Cell[24665, 685, 42, 1, 26, "Output"]
}, Open  ]],
Cell[24722, 689, 57, 1, 27, "Input"],
Cell[24782, 692, 79, 1, 27, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[24898, 698, 32, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[24955, 702, 283, 5, 59, "Input"],
Cell[25241, 709, 79, 1, 22, "Print"]
}, Open  ]],
Cell[25335, 713, 52, 1, 27, "Input"],
Cell[25390, 716, 231, 5, 43, "Input"],
Cell[25624, 723, 68, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[25717, 728, 42, 1, 27, "Input"],
Cell[25762, 731, 55, 1, 26, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[25866, 738, 31, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[25922, 742, 81, 1, 27, "Input"],
Cell[26006, 745, 314, 5, 41, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26357, 755, 72, 1, 27, "Input"],
Cell[26432, 758, 208, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26677, 766, 249, 4, 91, "Input"],
Cell[26929, 772, 139, 2, 26, "Output"]
}, Open  ]],
Cell[27083, 777, 189, 3, 44, "Input"],

Cell[CellGroupData[{
Cell[27297, 784, 92, 1, 44, "Input"],
Cell[27392, 787, 91, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27520, 793, 698, 13, 191, "Input"],
Cell[28221, 808, 42, 1, 26, "Output"]
}, Open  ]],
Cell[28278, 812, 26, 0, 27, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[28341, 817, 32, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[28398, 821, 73, 1, 27, "Input"],
Cell[28474, 824, 208, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[28719, 832, 175, 3, 75, "Input"],
Cell[28897, 837, 208, 3, 26, "Output"]
}, Open  ]],
Cell[29120, 843, 916, 15, 229, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[30073, 863, 28, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[30126, 867, 126, 2, 43, "Input"],
Cell[30255, 871, 46, 1, 26, "Output"]
}, Open  ]],
Cell[30316, 875, 749, 16, 155, "Input"],
Cell[31068, 893, 101, 2, 43, "Input"],
Cell[31172, 897, 966, 18, 213, "Input"],
Cell[32141, 917, 233, 5, 59, "Input"],

Cell[CellGroupData[{
Cell[32399, 926, 130, 2, 43, "Input"],
Cell[32532, 930, 58, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[32627, 936, 62, 1, 27, "Input"],
Cell[32692, 939, 55, 1, 26, "Output"]
}, Open  ]],
Cell[32762, 943, 116, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[32903, 949, 728, 13, 139, "Input"],
Cell[33634, 964, 137, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[33808, 972, 211, 3, 59, "Input"],
Cell[34022, 977, 1753, 35, 115, "Output"]
}, Open  ]],
Cell[35790, 1015, 65, 1, 27, "Input"],
Cell[35858, 1018, 64, 1, 27, "Input"],
Cell[35925, 1021, 64, 1, 27, "Input"],
Cell[35992, 1024, 119, 2, 27, "Input"],

Cell[CellGroupData[{
Cell[36136, 1030, 238, 4, 59, "Input"],
Cell[36377, 1036, 1112, 23, 85, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[37526, 1064, 152, 6, 107, "Input"],
Cell[37681, 1072, 55, 1, 26, "Output"],
Cell[37739, 1075, 52, 1, 26, "Output"],
Cell[37794, 1078, 55, 1, 26, "Output"],
Cell[37852, 1081, 61, 1, 26, "Output"],
Cell[37916, 1084, 55, 1, 26, "Output"],
Cell[37974, 1087, 56, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[38067, 1093, 332, 6, 108, "Input"],
Cell[38402, 1101, 47, 1, 26, "Output"]
}, Open  ]],
Cell[38464, 1105, 46, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[38535, 1110, 92, 1, 27, "Input"],
Cell[38630, 1113, 130, 3, 26, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[38809, 1122, 26, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[38860, 1126, 127, 2, 43, "Input"],
Cell[38990, 1130, 324, 5, 20, "Message"],
Cell[39317, 1137, 323, 5, 20, "Message"],
Cell[39643, 1144, 766, 11, 33, "Message"],
Cell[40412, 1157, 37, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[40486, 1163, 62, 1, 27, "Input"],
Cell[40551, 1166, 137, 3, 26, "Output"]
}, Open  ]],
Cell[40703, 1172, 73, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[40801, 1177, 47, 1, 27, "Input"],
Cell[40851, 1180, 338, 5, 20, "Message"],
Cell[41192, 1187, 338, 5, 20, "Message"],
Cell[41533, 1194, 338, 5, 20, "Message"],
Cell[41874, 1201, 332, 5, 20, "Message"],
Cell[42209, 1208, 130, 3, 26, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[42388, 1217, 36, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[42449, 1221, 3013, 54, 363, "Input"],
Cell[45465, 1277, 309, 5, 20, "Message"],
Cell[45777, 1284, 1064, 15, 33, "Message"],
Cell[46844, 1301, 1044, 15, 33, "Message"],
Cell[47891, 1318, 434, 6, 20, "Message"]
}, Open  ]],
Cell[48340, 1327, 73, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[48438, 1332, 57, 1, 27, "Input"],
Cell[48498, 1335, 44, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[48579, 1341, 45, 1, 27, "Input"],
Cell[48627, 1344, 47, 1, 26, "Output"]
}, Open  ]],
Cell[48689, 1348, 258, 5, 27, "Input"],
Cell[48950, 1355, 87, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[49062, 1360, 444, 9, 59, "Input"],
Cell[49509, 1371, 137, 3, 26, "Output"]
}, Open  ]],
Cell[49661, 1377, 69, 1, 27, "Input"],
Cell[49733, 1380, 26, 0, 27, "Input"],

Cell[CellGroupData[{
Cell[49784, 1384, 74, 1, 27, "Input"],
Cell[49861, 1387, 36, 1, 26, "Output"]
}, Open  ]],
Cell[49912, 1391, 74, 1, 27, "Input"],
Cell[49989, 1394, 43, 1, 27, "Input"],
Cell[50035, 1397, 44, 1, 27, "Input"],
Cell[50082, 1400, 267, 6, 107, "Input"],
Cell[50352, 1408, 76, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[50453, 1413, 145, 3, 43, "Input"],
Cell[50601, 1418, 52, 1, 26, "Output"]
}, Open  ]],
Cell[50668, 1422, 1189, 23, 203, "Input"],
Cell[51860, 1447, 132, 2, 43, "Input"],
Cell[51995, 1451, 144, 2, 59, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[52176, 1458, 31, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[52232, 1462, 265, 5, 59, "Input"],
Cell[52500, 1469, 44, 1, 26, "Output"]
}, Open  ]],
Cell[52559, 1473, 55, 1, 27, "Input"],
Cell[52617, 1476, 69, 1, 44, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[52723, 1482, 34, 0, 74, "Section"],
Cell[52760, 1484, 126, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[52911, 1490, 909, 22, 171, "Input"],
Cell[53823, 1514, 47, 1, 26, "Output"]
}, Open  ]],
Cell[53885, 1518, 655, 12, 144, "Input"],

Cell[CellGroupData[{
Cell[54565, 1534, 162, 3, 59, "Input"],
Cell[54730, 1539, 371, 5, 20, "Message"],
Cell[55104, 1546, 371, 5, 20, "Message"],
Cell[55478, 1553, 393, 6, 20, "Message"],
Cell[55874, 1561, 130, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[56041, 1569, 252, 5, 59, "Input"],
Cell[56296, 1576, 348, 5, 20, "Message"],
Cell[56647, 1583, 1657, 23, 161, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[58341, 1611, 26, 0, 27, "Input"],
Cell[58370, 1613, 46, 1, 26, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[58465, 1620, 35, 0, 44, "Section"],

Cell[CellGroupData[{
Cell[58525, 1624, 218, 4, 43, "Input"],
Cell[58746, 1630, 39, 1, 26, "Output"],
Cell[58788, 1633, 79, 1, 22, "Print"]
}, Open  ]],
Cell[58882, 1637, 2110, 36, 299, "Input"],

Cell[CellGroupData[{
Cell[61017, 1677, 118, 2, 43, "Input"],
Cell[61138, 1681, 42, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[61217, 1687, 129, 2, 43, "Input"],
Cell[61349, 1691, 42, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[61428, 1697, 76, 1, 27, "Input"],
Cell[61507, 1700, 37, 1, 26, "Output"]
}, Open  ]],
Cell[61559, 1704, 283, 5, 107, "Input"],
Cell[61845, 1711, 2698, 49, 411, "Input"],
Cell[64546, 1762, 96, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[64667, 1768, 121, 2, 43, "Input"],
Cell[64791, 1772, 42, 1, 26, "Output"]
}, Open  ]],
Cell[64848, 1776, 118, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[64991, 1782, 48, 0, 40, "Subsection"],

Cell[CellGroupData[{
Cell[65064, 1786, 109, 2, 43, "Input"],
Cell[65176, 1790, 560, 7, 20, "Message"],
Cell[65739, 1799, 857, 12, 33, "Message"],
Cell[66599, 1813, 560, 7, 20, "Message"],
Cell[67162, 1822, 857, 12, 33, "Message"],
Cell[68022, 1836, 560, 7, 20, "Message"],
Cell[68585, 1845, 329, 5, 20, "Message"],
Cell[68917, 1852, 857, 12, 33, "Message"],
Cell[69777, 1866, 334, 5, 20, "Message"],
Cell[70114, 1873, 41, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[70192, 1879, 60, 1, 27, "Input"],
Cell[70255, 1882, 130, 3, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[70422, 1890, 1056, 18, 155, "Input"],
Cell[71481, 1910, 1168, 17, 33, "Message"],
Cell[72652, 1929, 682, 10, 20, "Message"],
Cell[73337, 1941, 682, 10, 20, "Message"],
Cell[74022, 1953, 329, 5, 20, "Message"],
Cell[74354, 1960, 1021, 15, 46, "Message"],
Cell[75378, 1977, 1021, 15, 46, "Message"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[76448, 1998, 25, 0, 40, "Subsection"],

Cell[CellGroupData[{
Cell[76498, 2002, 1834, 34, 283, "Input"],
Cell[78335, 2038, 390, 6, 20, "Message"],
Cell[78728, 2046, 405, 6, 20, "Message"],
Cell[79136, 2054, 406, 6, 20, "Message"],
Cell[79545, 2062, 346, 5, 20, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[79928, 2072, 121, 2, 43, "Input"],
Cell[80052, 2076, 390, 6, 20, "Message"],
Cell[80445, 2084, 405, 6, 20, "Message"],
Cell[80853, 2092, 406, 6, 20, "Message"],
Cell[81262, 2100, 346, 5, 20, "Message"],
Cell[81611, 2107, 42, 1, 26, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[81714, 2115, 23, 0, 74, "Section"],

Cell[CellGroupData[{
Cell[81762, 2119, 108, 2, 27, "Input"],
Cell[81873, 2123, 362, 5, 41, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[82272, 2133, 249, 4, 91, "Input"],
Cell[82524, 2139, 220, 3, 41, "Output"]
}, Open  ]],
Cell[82759, 2145, 290, 4, 59, "Input"],

Cell[CellGroupData[{
Cell[83074, 2153, 104, 2, 43, "Input"],
Cell[83181, 2157, 192, 3, 26, "Output"],
Cell[83376, 2162, 36, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[83449, 2168, 86, 1, 27, "Input"],
Cell[83538, 2171, 441, 7, 41, "Output"]
}, Open  ]],
Cell[83994, 2181, 51, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[84070, 2186, 89, 2, 43, "Input"],
Cell[84162, 2190, 53, 1, 26, "Output"],
Cell[84218, 2193, 53, 1, 26, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

