(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     38905,        940]*)
(*NotebookOutlinePosition[     39537,        962]*)
(*  CellTagsIndexPosition[     39493,        958]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(<< "\<Research/Image Analysis/GridSnake.m\>"\)], "Input"],

Cell[BoxData[
    \(<< "\<Research/Image Analysis/AlternativeDisplay.m\>"\)], "Input"],

Cell[BoxData[{
    \(\($IMAGESIZE = 500;\)\), "\[IndentingNewLine]", 
    \(\($IMAGEARRAYSIZE = 500;\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Symbolic constraint creation", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(n = 8;\)\), "\[IndentingNewLine]", 
    \(\(m = 5;\)\), "\[IndentingNewLine]", 
    \(\(gs = Outer[g, Range[0, n], Range[0, m]];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[gs]\), "\[IndentingNewLine]", 
    \(\(gs = Flatten[gs];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(g[0, 0]\), \(g[0, 1]\), \(g[0, 2]\), \(g[0, 3]\), \(g[0, 
                4]\), \(g[0, 5]\)},
            {\(g[1, 0]\), \(g[1, 1]\), \(g[1, 2]\), \(g[1, 3]\), \(g[1, 
                4]\), \(g[1, 5]\)},
            {\(g[2, 0]\), \(g[2, 1]\), \(g[2, 2]\), \(g[2, 3]\), \(g[2, 
                4]\), \(g[2, 5]\)},
            {\(g[3, 0]\), \(g[3, 1]\), \(g[3, 2]\), \(g[3, 3]\), \(g[3, 
                4]\), \(g[3, 5]\)},
            {\(g[4, 0]\), \(g[4, 1]\), \(g[4, 2]\), \(g[4, 3]\), \(g[4, 
                4]\), \(g[4, 5]\)},
            {\(g[5, 0]\), \(g[5, 1]\), \(g[5, 2]\), \(g[5, 3]\), \(g[5, 
                4]\), \(g[5, 5]\)},
            {\(g[6, 0]\), \(g[6, 1]\), \(g[6, 2]\), \(g[6, 3]\), \(g[6, 
                4]\), \(g[6, 5]\)},
            {\(g[7, 0]\), \(g[7, 1]\), \(g[7, 2]\), \(g[7, 3]\), \(g[7, 
                4]\), \(g[7, 5]\)},
            {\(g[8, 0]\), \(g[8, 1]\), \(g[8, 2]\), \(g[8, 3]\), \(g[8, 
                4]\), \(g[8, 5]\)}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(cons = 
        Join[\[IndentingNewLine]Table[
            Sum[g[i, j], {i, 0, n}] \[Equal] 1, {j, 
              m}], \[IndentingNewLine]Table[
            Sum[g[i, j], {j, 0, m}] \[Equal] 1, {i, 
              n}]\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(MatrixForm[cons]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {\(g[0, 1] + g[1, 1] + g[2, 1] + g[3, 1] + g[4, 1] + g[5, 1] + 
                    g[6, 1] + g[7, 1] + g[8, 1] \[Equal] 1\)},
              {\(g[0, 2] + g[1, 2] + g[2, 2] + g[3, 2] + g[4, 2] + g[5, 2] + 
                    g[6, 2] + g[7, 2] + g[8, 2] \[Equal] 1\)},
              {\(g[0, 3] + g[1, 3] + g[2, 3] + g[3, 3] + g[4, 3] + g[5, 3] + 
                    g[6, 3] + g[7, 3] + g[8, 3] \[Equal] 1\)},
              {\(g[0, 4] + g[1, 4] + g[2, 4] + g[3, 4] + g[4, 4] + g[5, 4] + 
                    g[6, 4] + g[7, 4] + g[8, 4] \[Equal] 1\)},
              {\(g[0, 5] + g[1, 5] + g[2, 5] + g[3, 5] + g[4, 5] + g[5, 5] + 
                    g[6, 5] + g[7, 5] + g[8, 5] \[Equal] 1\)},
              {\(g[1, 0] + g[1, 1] + g[1, 2] + g[1, 3] + g[1, 4] + 
                    g[1, 5] \[Equal] 1\)},
              {\(g[2, 0] + g[2, 1] + g[2, 2] + g[2, 3] + g[2, 4] + 
                    g[2, 5] \[Equal] 1\)},
              {\(g[3, 0] + g[3, 1] + g[3, 2] + g[3, 3] + g[3, 4] + 
                    g[3, 5] \[Equal] 1\)},
              {\(g[4, 0] + g[4, 1] + g[4, 2] + g[4, 3] + g[4, 4] + 
                    g[4, 5] \[Equal] 1\)},
              {\(g[5, 0] + g[5, 1] + g[5, 2] + g[5, 3] + g[5, 4] + 
                    g[5, 5] \[Equal] 1\)},
              {\(g[6, 0] + g[6, 1] + g[6, 2] + g[6, 3] + g[6, 4] + 
                    g[6, 5] \[Equal] 1\)},
              {\(g[7, 0] + g[7, 1] + g[7, 2] + g[7, 3] + g[7, 4] + 
                    g[7, 5] \[Equal] 1\)},
              {\(g[8, 0] + g[8, 1] + g[8, 2] + g[8, 3] + g[8, 4] + 
                    g[8, 5] \[Equal] 1\)}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ca = CoefficientArrays[cons, gs // Flatten]\), "\[IndentingNewLine]", 
    \(MatrixForm /@ ca\)}], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        TagBox[
          RowBox[{"SparseArray", "[", 
            RowBox[{
              
              InterpretationBox[\("<"\[InvisibleSpace]13\[InvisibleSpace]">"\)\
,
                SequenceForm[ "<", 13, ">"],
                Editable->False], ",", \({13}\)}], "]"}],
          False,
          Editable->False], ",", 
        TagBox[
          RowBox[{"SparseArray", "[", 
            RowBox[{
              
              InterpretationBox[\("<"\[InvisibleSpace]93\[InvisibleSpace]">"\)\
,
                SequenceForm[ "<", 93, ">"],
                Editable->False], ",", \({13, 54}\)}], "]"}],
          False,
          Editable->False]}], "}"}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        TagBox[
          RowBox[{"(", "\[NoBreak]", 
            TagBox[GridBox[{
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)},
                  {\(-1\)}
                  },
                RowSpacings->1,
                ColumnAlignments->{Left}],
              Column], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ 
              SparseArray[ 
              Automatic, {13}, 0, {1, {{0, 13}, {{1}, {2}, {3}, {4}, {5}, {
                6}, {7}, {8}, {9}, {10}, {11}, {12}, {
                13}}}, {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, \
-1}}]]]], ",", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {"0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
                  "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
                  "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
                  "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
                  "0", "1", "0", "0", "0", "0"},
                {"0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
                  "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
                  "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
                  "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
                  "0", "0", "1", "0", "0", "0"},
                {"0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", 
                  "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", 
                  "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", 
                  "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", 
                  "0", "0", "0", "1", "0", "0"},
                {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", 
                  "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", 
                  "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", 
                  "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", "0", 
                  "0", "0", "0", "0", "1", "0"},
                {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", 
                  "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", 
                  "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", 
                  "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "1", 
                  "0", "0", "0", "0", "0", "1"},
                {"0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "1", 
                  "0", "0", "0", "0", "0", "0"},
                {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
                  "1", "1", "1", "1", "1", "1"}
                },
              RowSpacings->1,
              ColumnSpacings->1,
              ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ 
              SparseArray[ 
              Automatic, {13, 54}, 0, {1, {{0, 9, 18, 27, 36, 45, 51, 57, 63, 
                69, 75, 81, 87, 93}, {{2}, {8}, {14}, {20}, {26}, {32}, {
                38}, {44}, {50}, {3}, {9}, {15}, {21}, {27}, {33}, {39}, {
                45}, {51}, {4}, {10}, {16}, {22}, {28}, {34}, {40}, {46}, {
                52}, {5}, {11}, {17}, {23}, {29}, {35}, {41}, {47}, {53}, {
                6}, {12}, {18}, {24}, {30}, {36}, {42}, {48}, {54}, {7}, {
                8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {
                18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26}, {27}, {
                28}, {29}, {30}, {31}, {32}, {33}, {34}, {35}, {36}, {37}, {
                38}, {39}, {40}, {41}, {42}, {43}, {44}, {45}, {46}, {47}, {
                48}, {49}, {50}, {51}, {52}, {53}, {54}}}, {1, 1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1}}]]]]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(pts1 = Table[Random[], {n}];\)\), "\n", 
    \(\(\(pts2 = Table[Random[], {m}];\)\(\[IndentingNewLine]\)
    \)\), "\n", 
    \(\(PrependTo[ptn, 0. ];\)\), "\[IndentingNewLine]", 
    \(\(PrependTo[ptm, 0. ];\)\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Table::"iterb"\), \(\(:\)\(\ \)\), "\<\"Iterator \
\\!\\({\\*TagBox[\\(SparseArray[\\(\\(Automatic, \\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\), \\(\\({1, \\(\\({\\(\\({0, 9, 18, 27, 36, 45, 51, 57, \
63, 69, 75, 81, 87, 93}\\)\\), \\(\\({\\(\\({10}\\)\\), \\(\\({11}\\)\\), \\(\
\\({12}\\)\\), \\(\\({13}\\)\\), \\(\\(\[LeftSkeleton] 85 \[RightSkeleton]\\)\
\\), \\(\\({27}\\)\\), \\(\\({36}\\)\\), \\(\\({45}\\)\\), \
\\(\\({54}\\)\\)}\\)\\)}\\)\\), \\(\\({1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1}\\)\\)}\\)\\)\\)\\)]\\), False, Rule[Editable, False]]}\\) does not have \
appropriate bounds. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, ButtonData:>\\\"General::iterb\\\
\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Table::"iterb"\), \(\(:\)\(\ \)\), "\<\"Iterator \
\\!\\({\\*TagBox[\\(SparseArray[\\(\\(Automatic, \\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\), \\(\\({1, \\(\\({\\(\\({0, 9, 18, 27, 36, 45, 51, 57, \
63, 69, 75, 81, 87, 93}\\)\\), \\(\\({\\(\\({10}\\)\\), \\(\\({11}\\)\\), \\(\
\\({12}\\)\\), \\(\\({13}\\)\\), \\(\\(\[LeftSkeleton] 85 \[RightSkeleton]\\)\
\\), \\(\\({27}\\)\\), \\(\\({36}\\)\\), \\(\\({45}\\)\\), \
\\(\\({54}\\)\\)}\\)\\)}\\)\\), \\(\\({1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1}\\)\\)}\\)\\)\\)\\)]\\), False, Rule[Editable, False]]}\\) does not have \
appropriate bounds. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\
\\\"RefGuideLinkText\\\", ButtonFrame->None, ButtonData:>\\\"General::iterb\\\
\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\[Phi] = 
      Flatten@Outer[Norm[#1 - #2] &, ptn, ptm]\), "\[IndentingNewLine]", 
    \(Length[\[Phi]]\)}], "Input"],

Cell[BoxData[
    \({0.`, 0.8785665104146667`, 0.826306747635206`, 0.16234111802438755`, 
      0.08923918918791961`, 0.7893273212267471`, 0.7370675584472863`, 
      0.07310192883646795`, 0.9972158263771075`, 0.11864931596244077`, 
      0.17090907874190153`, 0.8348747083527199`, 0.5766722418299388`, 
      0.3018942685847279`, 0.24963450580526714`, 0.41433112380555126`, 
      0.03747215221102062`, 0.8410943582036461`, 0.7888345954241853`, 
      0.12486896581336693`, 0.4090649511916672`, 0.4695015592229995`, 
      0.41724179644353876`, 0.24672383316727964`}\)], "Output"],

Cell[BoxData[
    \(24\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Phi][\([Range[m + 1]]\)]\)], "Input"],

Cell[BoxData[
    \({0.`, 0.15368304831563823`, 0.44064253823511373`, 0.732624266064162`, 
      0.12675754272007614`, 0.7414130930017322`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Phi][\([Range[1, \((n + 1)\) \((\ m + 1)\), m + 1]]\)]\)], "Input"],

Cell[BoxData[
    \({0.`, 0.42550822846613484`, 0.7729162978725919`, 0.10487913236354607`, 
      0.5237987243104414`, 0.09751563904437324`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SPEEDLIMIT = 10. ;\)\), "\[IndentingNewLine]", 
    \(\(\[Phi][\([Range[m + 1]]\)] = SPEEDLIMIT;\)\), "\[IndentingNewLine]", 
    \(\(\[Phi][\([Range[1, \((n + 1)\) \((\ m + 1)\), m + 1]]\)] = 
        SPEEDLIMIT;\)\), "\[IndentingNewLine]", 
    \(Partition[\[Phi], m + 1] // MatrixForm\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"10.`", "10.`", "10.`", "10.`", "10.`", "10.`"},
            {"10.`", "0.2718251801504966`", "0.015134309768978893`", 
              "0.30711603759802714`", "0.2987506857460587`", 
              "0.31590486453559735`"},
            {"10.`", "0.6192332495569537`", "0.3322737596374781`", 
              "0.040292031808429885`", "0.6461587551525158`", 
              "0.03150320487085967`"},
            {"10.`", "0.04880391595209216`", "0.33576340587156767`", 
              "0.6277451337006159`", "0.02187841035653007`", 
              "0.6365339606381861`"},
            {"10.`", "0.37011567599480316`", "0.08315618607532765`", 
              "0.2088255417537206`", "0.3970411815903653`", 
              "0.2176143686912908`"},
            {"10.`", "0.056167409271264984`", "0.34312689919074046`", 
              "0.6351086270197888`", "0.029241903675702896`", 
              "0.643897453957359`"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AbsoluteTiming[\[IndentingNewLine]sol = 
        Minimize[Join[{\[Phi] . gs}, cons, \ Thread[gs \[GreaterEqual] 0]], 
          gs]\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \({0.00758`4.331214199128031\ Second, {0.3335088760213542`, {g[0, 
              0] \[Rule] 0.`, g[0, 1] \[Rule] 0.`, g[0, 2] \[Rule] 0.`, 
          g[0, 3] \[Rule] 0.`, g[0, 4] \[Rule] 0.`, g[0, 5] \[Rule] 0.`, 
          g[1, 0] \[Rule] 0.`, g[1, 1] \[Rule] 0.`, g[1, 2] \[Rule] 0.`, 
          g[1, 3] \[Rule] 0.`, g[1, 4] \[Rule] 0.`, g[1, 5] \[Rule] 1.`, 
          g[2, 0] \[Rule] 0.`, g[2, 1] \[Rule] 1.`, g[2, 2] \[Rule] 0.`, 
          g[2, 3] \[Rule] 0.`, g[2, 4] \[Rule] 0.`, g[2, 5] \[Rule] 0.`, 
          g[3, 0] \[Rule] 0.`, g[3, 1] \[Rule] 0.`, g[3, 2] \[Rule] 0.`, 
          g[3, 3] \[Rule] 0.`, g[3, 4] \[Rule] 1.`, g[3, 5] \[Rule] 0.`, 
          g[4, 0] \[Rule] 0.`, g[4, 1] \[Rule] 0.`, g[4, 2] \[Rule] 0.`, 
          g[4, 3] \[Rule] 1.`, g[4, 4] \[Rule] 0.`, g[4, 5] \[Rule] 0.`, 
          g[5, 0] \[Rule] 0.`, g[5, 1] \[Rule] 0.`, g[5, 2] \[Rule] 1.`, 
          g[5, 3] \[Rule] 0.`, g[5, 4] \[Rule] 0.`, 
          g[5, 5] \[Rule] 0.`}}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Table[g[i, j], {j, 0, m}, {i, 0, n}] /. sol[\([2]\)] // 
      MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
            {"0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
            {"0.`", "0.`", "0.`", "0.`", "0.`", "1.`"},
            {"0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
            {"0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
            {"0.`", "1.`", "0.`", "0.`", "0.`", "0.`"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Directly producing constraints", "Subsection"],

Cell[BoxData[{
    \(\(n1 = 3;\)\), "\n", 
    \(\(pts1 = 
        Table[{Random[], Random[]}, {n1}];\)\n\), "\[IndentingNewLine]", 
    \(\(n2 = 3;\)\), "\n", 
    \(\(pts2 = 
        pts1 +  .3  Table[{Random[], Random[]} - 0.5, {n1}];\)\), "\n", 
    \(\(pts2 = 
        Join[pts2, Table[{Random[], Random[]}, {n2 - n1}]];\)\)}], "Input"],

Cell[BoxData[{
    \(\(PrependTo[pts1, {0. , 0. }];\)\), "\n", 
    \(\(PrependTo[pts2, {0. , 0. }];\)\)}], "Input"],

Cell[BoxData[
    \(ListPlot[pts1, PlotRange \[Rule] All, AspectRatio \[Rule] 1, 
      PlotStyle \[Rule] PointSize[0.005], 
      Epilog \[Rule] {Hue[0], Point /@ pts2}]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(AbsoluteTiming[\[IndentingNewLine]\(\[Phi]S = 
          Outer[Subtract, pts1, pts2, 1]~Flatten~
            1;\)\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \({2.511656`6.8515051510403735\ Second, Null}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AbsoluteTiming[\[IndentingNewLine]\(\[Phi]N = 
          Norm /@ \[Phi]S;\)\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \({0.000525`3.1717042969019325\ Second, Null}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(AbsoluteTiming[\[IndentingNewLine]\(\[Phi] = 
          Outer[Norm[#1 - #2] &, pts1, pts2, 1]~Flatten~
            1;\)\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \({0.01524`4.634529960499547\ Second, Null}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(\[Phi]S = Outer[Subtract, pts1, pts2, 1]~Flatten~1;\)\), "\n", 
    \(\(\[Phi]N = Norm /@ \[Phi]S;\)\), "\n", 
    \(\(SPEEDLIMIT = 0.1;\)\), "\n", 
    \(\(s = \(Sign[\[Phi]N - SPEEDLIMIT] + 1. \)\/2;\)\), "\n", 
    \(\(\[Phi]L = s\ 200  SPEEDLIMIT\  + \((1.  - s)\)\ \[Phi]N;\)\), "\n", 
    \(\(\[Phi]L[\([Range[n2 + 1]]\)] = SPEEDLIMIT;\)\), "\n", 
    \(\(\[Phi]L[\([Range[1, \((n1 + 1)\) \((n2 + 1)\), n2 + 1]]\)] = 
        SPEEDLIMIT;\)\)}], "Input"],

Cell[BoxData[
    \(ListPlot[Sort[\[Phi]L]]\)], "Input"],

Cell[BoxData[{
    \(\(rn1 = Range[n2];\)\), "\n", 
    \(\(\(rn2 = Range[n2 + 1];\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\(coor = 
        Join[\[IndentingNewLine]Table[
              Thread[{i + n2, rn2 + i\ \((n2 + 1)\)}], {i, 1, n1}]~Flatten~
            1, \[IndentingNewLine]Table[{rn1, 
                  rn1 + i\ \((n2 + 1)\) + 1}\[Transpose] , {i, 0, n1}]~
            Flatten~1\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(m = 
        SparseArray[
          coor \[Rule] 
            Table[1, {Length[coor]}]];\)\), "\[IndentingNewLine]", 
    \(coor =. \), "\[IndentingNewLine]", 
    \(\(b = Thread[{1. , Table[0, {n1 + n2}]}];\)\)}], "Input"],

Cell[BoxData[
    \(AbsoluteTiming[\[IndentingNewLine]\(gg = 
          LinearProgramming[\[Phi]L, m, 
            b, "\<Method\>" \[Rule] {"\<RevisedSimplex\>", \
"\<ScalingMethod\>" \[Rule] "\<None\>"}];\)\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \(\(MapThread[Norm[#1 - #2] &, {pts1, pts2}] // Sort\) // 
      ListPlot\)], "Input"],

Cell[BoxData[
    \(ListPlot[Sort[gg\ \[Phi]L]]\)], "Input"],

Cell[BoxData[
    \(Chop[Partition[gg, n2 + 1],  .1] Partition[\[Phi]L, n2 + 1] // 
      MatrixForm\)], "Input"],

Cell[BoxData[
    \(\(matches = 
        Position[
          Partition[Chop[gg,  .01], n2 + 1], _?Positive, {2}];\)\)], "Input"],

Cell[BoxData[
    \(\(MapThread[
          Norm[{pts1[\([#1]\)] - pts2[\([#2]\)]}] &, \((Select[
                matches, #[\([1]\)] \[NotEqual] 1 && #[\([2]\)] \[NotEqual] 
                      1 &])\)\[Transpose] ] // Sort\) // ListPlot\)], "Input"],

Cell[BoxData[{
    \(\(lines = 
        MapThread[
          Line[{pts1[\([#1]\)], pts2[\([#2]\)]}] &, \((Select[
                matches, #[\([1]\)] \[NotEqual] 1 && #[\([2]\)] \[NotEqual] 
                      1 &])\)\[Transpose] ];\)\), "\n", 
    \(ListPlot[pts1, PlotRange \[Rule] {{0, 1}, {0, 1}}, 
      AspectRatio \[Rule] 1, PlotStyle \[Rule] PointSize[0.01], 
      Epilog \[Rule] {Hue[0], lines, RGBColor[0,  .4, 0], 
          Point /@ pts2}]\)}], "Input"],

Cell[BoxData[{
    \(\(SPEEDLIMIT = 5. ;\)\), "\[IndentingNewLine]", 
    \(\(LinkParticles = 
        Function[{pts1, 
            pts2}, \[IndentingNewLine]Module[{\[Phi], s, n1, rn1, rn2, coor, 
              m, b, g, matches}, \[IndentingNewLine]\[Phi] = 
              Outer[Norm[#1 - #2] &, pts1, pts2, 1]~Flatten~
                1; \[IndentingNewLine]s = \(10\^2. \) \(Sign[\[Phi] - \
SPEEDLIMIT] + 1\)\/2; \[IndentingNewLine]\[IndentingNewLine]n1 = 
              Max[Length /@ {pts1, pts2}]; \[IndentingNewLine]rn1 = 
              Range[n1]; \[IndentingNewLine]rn2 = 
              rn1 + n1; \[IndentingNewLine]coor = 
              Join[\[IndentingNewLine]Table[
                    Thread[{i + 1, rn1 + i\ n1}], {i, 0, n1 - 1}]~Flatten~
                  1, \[IndentingNewLine]Table[{rn2, 
                        rn1 + i\ n1}\[Transpose] , {i, 0, n1 - 1}]~Flatten~
                  1\[IndentingNewLine]]; \[IndentingNewLine]m = 
              SparseArray[
                coor \[Rule] 
                  Table[1. , {Length[
                        coor]}]]; \[IndentingNewLine]coor =. ; \
\[IndentingNewLine]b = Thread[{1, Table[0, {2\ n1}]}]; \[IndentingNewLine]g = 
              Chop[LinearProgramming[s + \[Phi], m, b], 
                10\^\(-1\)]; \[IndentingNewLine]matches = 
              Position[
                Partition[g, n1], _?
                  Positive, {2}]; \[IndentingNewLine]matches\
\[IndentingNewLine]]];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manually Solving the Transportation Problem", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(n1 = 10;\)\), "\n", 
    \(\(\(pts1 = Table[{Random[], Random[]}, {n1}];\)\(\n\)
    \)\), "\n", 
    \(\(n2 = 10;\)\), "\[IndentingNewLine]", 
    \(\(pts2 = 
        pts1 +  .3  Table[{Random[], Random[]} - 0.5, {n1}];\)\), "\n", 
    \(\(\(pts2 = 
        Join[pts2, 
          Table[{Random[], Random[]}, {n2 - n1}]];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(n1 = 2; n2 = 1;\), "\[IndentingNewLine]", 
    \(\(pts1 = {{1. , 1. }, {1.1, 1.1}};\)\), "\[IndentingNewLine]", 
    \(\(\(pts2 = {{1.05, 1.05}}\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(AppendTo[pts1, {0. , 0. }];\)\), "\n", 
    \(\(\(AppendTo[pts2, {0. , 0. }];\)\(\n\)
    \)\), "\n", 
    \(ListPlot[Join[pts1, pts2], PlotRange \[Rule] All, 
      AspectRatio \[Rule] 1, PlotStyle \[Rule] PointSize[0.05], 
      Epilog \[Rule] {Hue[0], PointSize[0.05], Point /@ pts2}]\)}], "Input"],

Cell[BoxData[
    \({{1.05`, 1.05`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SPEEDLIMIT = 0.4;\)\), "\[IndentingNewLine]", 
    \(AbsoluteTiming[\[IndentingNewLine]\(\[Phi]Norm = 
          Map[\((\[IndentingNewLine]p1 = # - 
                    pts2\[Transpose] ; \[IndentingNewLine]\@\(p1[\([1]\)]\^2 \
+ p1[\([2]\)]\^2\)\[IndentingNewLine])\) &, 
            pts1];\)\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(\(\[Phi]Norm[\([All, \(-1\)]\)] = SPEEDLIMIT;\)\), "\n", 
    \(\(\[Phi]Norm[\([\(-1\)]\)] = 
        Table[SPEEDLIMIT, {n2 + 1}];\)\), "\[IndentingNewLine]", 
    \(\(\[Phi]Norm[\([\(-1\), \(-1\)]\)] = 0. ;\)\)}], "Input"],

Cell[BoxData[
    \({0.00019`2.730298594448803\ Second, Null}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixForm[\[Phi]Norm]\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"0.07071067811865482`", "0.4`"},
            {"0.07071067811865482`", "0.4`"},
            {"0.4`", "0.`"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Phi]1 = 
      Function[p2, \[IndentingNewLine]Flatten@
            Position[
              p2, _?\((# \[LessEqual] 
                      SPEEDLIMIT &)\)]\[IndentingNewLine]] /@ \[Phi]Norm\)], \
"Input"],

Cell[BoxData[
    \({{1, 2}, {1, 2}, {1, 2}}\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(a1 = Table[{n2 + 1}, {n1 + 1}];\)\), "\[IndentingNewLine]", 
    \(\(a1[\([\(-1\)]\)] = Range[n2 + 1];\)\), "\[IndentingNewLine]", 
    \(\(a2 = Table[{n1 + 1}, {n2 + 1}];\)\), "\[IndentingNewLine]", 
    \(\(a2[\([\(-1\)]\)] = Range[n1 + 1];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MapIndexed[\((\[IndentingNewLine]i = #2[\([1]\)]; \[IndentingNewLine]J \
= #1[\([\(Ordering[\[Phi]Norm[\([i, #1]\)]]\)[\([1]\)]]\)]; \
\[IndentingNewLine]If[\[IndentingNewLine]a2[\([J, 1]\)] \[Equal] 
              n1 + 1, \[IndentingNewLine]a1[\([i]\)] = {J}; \
\[IndentingNewLine]a2[\([J]\)] = {i}; \[IndentingNewLine]a1[\([\(-1\)]\)] = 
              swap[a1[\([\(-1\)]\)], 11, 
                J]; \[IndentingNewLine]a2[\([\(-1\)]\)] = 
              swap[a2[\([\(-1\)]\)], 11, 
                i];\[IndentingNewLine]]\[IndentingNewLine])\) &, 
      Most@\[Phi]1]\)], "Input"],

Cell[BoxData[
    \({Null, Null, Null, Null, Null, Null, Null, Null, Null, 
      Null}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(a1\), "\[IndentingNewLine]", 
    \(a2\)}], "Input"],

Cell[BoxData[
    \({{2}, {2}, {1, 2}}\)], "Output"],

Cell[BoxData[
    \({{3}, {1, 2, 3}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(swap = 
      Function[{l, add, del}, Complement[Union[l, {add}], {del}]]\)], "Input"],

Cell[BoxData[
    \(Function[{l, add, del}, 
      Complement[l \[Union] {add}, {del}]]\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\(cont = True;\)\), "\[IndentingNewLine]", 
    \(While[
      cont, \[IndentingNewLine]cont = 
        False; \[IndentingNewLine]Do[\[IndentingNewLine]J = \[Phi]1[\([i, 
              j]\)]; \[IndentingNewLine]K = 
          a2[\([J, 1]\)]; \[IndentingNewLine]L = 
          a1[\([i, 
              1]\)]; \[IndentingNewLine]\[IndentingNewLine]If[\
\[IndentingNewLine]a1[\([i, 1]\)] \[NotEqual] 
            J, \[IndentingNewLine]rc = \[Phi]Norm[\([i, 
                  J]\)] - \[Phi]Norm[\([i, L]\)] - \[Phi]Norm[\([K, 
                  J]\)] + \[Phi]Norm[\([K, 
                  L]\)]; \[IndentingNewLine]If[\[IndentingNewLine]rc < 
              0, \[IndentingNewLine]Print[rc, "\<: \>", i, "\<  \>", 
              J, \ "\< \>", \ K, \ "\< \>", 
              L\ ]; \[IndentingNewLine]a1[\([i]\)] = 
              swap[a1[\([i]\)], J, L]; \[IndentingNewLine]a2[\([J]\)] = 
              swap[a2[\([J]\)], i, 
                K]; \[IndentingNewLine]\[IndentingNewLine]a1[\([K]\)] = 
              swap[a1[\([K]\)], L, J]; \[IndentingNewLine]a2[\([L]\)] = 
              swap[a2[\([L]\)], K, 
                i]; \[IndentingNewLine]\[IndentingNewLine]cont = 
              True; \[IndentingNewLine]Break[];\[IndentingNewLine]]\
\[IndentingNewLine]]\[IndentingNewLine], {i, 
          Length[\[Phi]1]}\[IndentingNewLine], {j, 
          Length[\[Phi]1[\([i]\)]]}\[IndentingNewLine]];\[IndentingNewLine]]\)\
, "\[IndentingNewLine]", 
    \(a1\), "\n", 
    \(a2\)}], "Input"],

Cell[BoxData[
    \(ListPlot[Join[pts1, pts2], PlotRange \[Rule] All, 
      AspectRatio \[Rule] Automatic, ImageSize \[Rule] 8000, 
      PlotStyle \[Rule] PointSize[0.001], 
      Epilog \[Rule] {Hue[0], PointSize[0.001], Point /@ pts2, 
          Hue[ .5], \(If[#1[\([1]\)] \[Equal] n2 + 1, 
                Point@pts1[\([#2[\([1]\)]]\)], 
                Line[{pts1[\([#2[\([1]\)]]\)], pts2[\([#1[\([1]\)]]\)]}]] &\)~
            MapIndexed~a1}]\)], "Input"],

Cell[CellGroupData[{

Cell["Compiled", "Subsubsection"],

Cell[BoxData[
    \(\(SPEEDLIMIT = 10;\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(swap = 
      Function[{l, add, del}, Complement[Union[l, {add}], {del}]]\)], "Input"],

Cell[BoxData[
    \(Function[{l, add, del}, 
      Complement[l \[Union] {add}, {del}]]\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(LinkParticles = 
        Function[{p1, p2}, \[IndentingNewLine]n1 = 
            Length[p1]; \[IndentingNewLine]n2 = 
            Length[p2]; \n\[IndentingNewLine]pts1 = 
            Append[p1, {0. , 0. }]; \[IndentingNewLine]pts2 = 
            Append[p2, {0. , 0. }]; \n\[IndentingNewLine]\[Phi]Norm = 
            Map[\((\[IndentingNewLine]p = # - 
                      pts2\[Transpose] ; \[IndentingNewLine]\@\(p[\([1]\)]\^2 \
+ p[\([2]\)]\^2\)\[IndentingNewLine])\) &, 
              pts1]; \[IndentingNewLine]\[IndentingNewLine]\[Phi]Norm[\([All, \
\(-1\)]\)] = SPEEDLIMIT; \[IndentingNewLine]\[Phi]Norm[\([\(-1\)]\)] = 
            Table[SPEEDLIMIT, {n2 + 
                  1}]; \[IndentingNewLine]\[Phi]Norm[\([\(-1\), \(-1\)]\)] = 
            0. ; \[IndentingNewLine]\[IndentingNewLine]\[Phi]1 = 
            Function[
                p2, \[IndentingNewLine]Flatten@
                  Position[
                    p2, _?\((# \[LessEqual] 
                            SPEEDLIMIT &)\)]\[IndentingNewLine]] /@ \
\[Phi]Norm; \[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]a1 = 
            Table[{n2 + 1}, {n1 + 1}]; \[IndentingNewLine]a1[\([\(-1\)]\)] = 
            Range[n2 + 1]; \[IndentingNewLine]a2 = 
            Table[{n1 + 1}, {n2 + 1}]; \[IndentingNewLine]a2[\([\(-1\)]\)] = 
            Range[n1 + 
                1]; \[IndentingNewLine]\[IndentingNewLine]MapIndexed[\((\
\[IndentingNewLine]i = #2[\([1]\)]; \[IndentingNewLine]J = #1[\([\(Ordering[\
\[Phi]Norm[\([i, #1]\)]]\)[\([1]\)]]\)]; \[IndentingNewLine]If[\
\[IndentingNewLine]a2[\([J, 1]\)] \[Equal] 
                    n1 + 1, \[IndentingNewLine]a1[\([i]\)] = {J}; \
\[IndentingNewLine]a2[\([J]\)] = {i}; \[IndentingNewLine]a1[\([\(-1\)]\)] = 
                    swap[a1[\([\(-1\)]\)], 11, 
                      J]; \[IndentingNewLine]a2[\([\(-1\)]\)] = 
                    swap[a2[\([\(-1\)]\)], 11, 
                      i];\[IndentingNewLine]]\[IndentingNewLine])\) &, 
            Most@\[Phi]1]; \[IndentingNewLine]\[IndentingNewLine]\n
          cont = True; \n
          While[cont, \[IndentingNewLine]cont = 
              False; \[IndentingNewLine]Do[\[IndentingNewLine]J = \
\[Phi]1[\([i, j]\)]; \[IndentingNewLine]K = 
                a2[\([J, 1]\)]; \[IndentingNewLine]L = 
                a1[\([i, 
                    1]\)]; \[IndentingNewLine]\[IndentingNewLine]If[\
\[IndentingNewLine]a1[\([i, 1]\)] \[NotEqual] 
                  J, \[IndentingNewLine]rc = \[Phi]Norm[\([i, 
                        J]\)] - \[Phi]Norm[\([i, L]\)] - \[Phi]Norm[\([K, 
                        J]\)] + \[Phi]Norm[\([K, 
                        L]\)]; \[IndentingNewLine]If[\[IndentingNewLine]rc < 
                    0, \[IndentingNewLine] (*\(Print[rc, "\<: \>", 
                        i, "\<  \>", J, \ "\< \>", \ K, \ "\< \>", 
                        L\ ];\)*) \[IndentingNewLine]a1[\([i]\)] = 
                    swap[a1[\([i]\)], J, L]; \[IndentingNewLine]a2[\([J]\)] = 
                    swap[a2[\([J]\)], i, 
                      K]; \[IndentingNewLine]\[IndentingNewLine]a1[\([K]\)] = 
                    swap[a1[\([K]\)], L, J]; \[IndentingNewLine]a2[\([L]\)] = 
                    swap[a2[\([L]\)], K, 
                      i]; \[IndentingNewLine]\[IndentingNewLine]cont = 
                    True; \[IndentingNewLine]Break[];\[IndentingNewLine]]\
\[IndentingNewLine]]\[IndentingNewLine], {i, 
                Length[\[Phi]1]}\[IndentingNewLine], {j, 
                Length[\[Phi]1[\([i]\)]]}\[IndentingNewLine]];\
\[IndentingNewLine]]; \[IndentingNewLine]a1\[IndentingNewLine]];\)\)], "Input"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(\[Phi]1\\)\\\" is similar to existing symbol \
\\\"\\!\\(\[Lambda]1\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(ExtractTrajectory = 
        Function[{start, index}, \[IndentingNewLine]next = 
            index; \[IndentingNewLine]l = {next}; \[IndentingNewLine]Do[\
\[IndentingNewLine]next = traj[\([t, next, 1]\)]; \[IndentingNewLine]If[
              next \[Equal] Length[pts[\([t + 1]\)]] + 1, 
              Break[]]; \[IndentingNewLine]AppendTo[l, 
              next];\[IndentingNewLine], {t, start, 
              Length@traj}]; \[IndentingNewLine]\[IndentingNewLine]MapIndexed[
            pts[\([#2[\([1]\)] + start - 1, #1]\)] &, 
            l]\[IndentingNewLine]\[IndentingNewLine]];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Clear[opts]\), "\n", 
    \(opts[a_] := 
      Module[{SAS = sas}, \[IndentingNewLine]sas + f\[IndentingNewLine]] /. 
        Options[opts]\), "\n", 
    \(Options[opts] := {sas \[Rule] 1, lal \[Rule] 3}\)}], "Input"],

Cell[BoxData[
    RowBox[{\(General::"spell1"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(sas\\)\\\" is similar to existing symbol \
\\\"\\!\\(SAS\\)\\\". \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::spell1\\\"]\\)\"\>"}]], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(opts[a]\)], "Input"],

Cell[BoxData[
    \(4 + f\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(SetOptions[opts, sas \[Rule] 4]\)], "Input"],

Cell[BoxData[
    \({sas \[Rule] 4, lal \[Rule] 3}\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "Section"]
},
FrontEndVersion->"5.2 for X",
ScreenRectangle->{{0, 3200}, {0, 1200}},
WindowSize->{537, 1148},
WindowMargins->{{574, Automatic}, {-1, Automatic}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 77, 1, 27, "Input"],
Cell[1834, 54, 86, 1, 27, "Input"],
Cell[1923, 57, 116, 2, 43, "Input"],

Cell[CellGroupData[{
Cell[2064, 63, 50, 0, 38, "Subsection"],

Cell[CellGroupData[{
Cell[2139, 67, 270, 5, 91, "Input"],
Cell[2412, 74, 1251, 26, 171, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3700, 105, 325, 7, 91, "Input"],
Cell[4028, 114, 1875, 35, 243, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5940, 154, 128, 2, 43, "Input"],
Cell[6071, 158, 718, 22, 27, "Output"],
Cell[6792, 182, 7174, 119, 243, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[14003, 306, 247, 5, 91, "Input"],
Cell[14253, 313, 1037, 14, 111, "Message"],
Cell[15293, 329, 1037, 14, 111, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[16367, 348, 139, 3, 43, "Input"],
Cell[16509, 353, 581, 8, 75, "Output"],
Cell[17093, 363, 36, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17166, 369, 59, 1, 27, "Input"],
Cell[17228, 372, 153, 2, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17418, 379, 89, 1, 27, "Input"],
Cell[17510, 382, 154, 2, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[17701, 389, 324, 5, 75, "Input"],
Cell[18028, 396, 1183, 24, 117, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19248, 425, 184, 3, 59, "Input"],
Cell[19435, 430, 997, 14, 171, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[20469, 449, 106, 2, 27, "Input"],
Cell[20578, 453, 606, 14, 117, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[21233, 473, 52, 0, 30, "Subsection"],
Cell[21288, 475, 341, 8, 107, "Input"],
Cell[21632, 485, 116, 2, 43, "Input"],
Cell[21751, 489, 183, 3, 43, "Input"],

Cell[CellGroupData[{
Cell[21959, 496, 166, 3, 59, "Input"],
Cell[22128, 501, 77, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[22242, 507, 128, 2, 59, "Input"],
Cell[22373, 511, 77, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[22487, 517, 172, 3, 59, "Input"],
Cell[22662, 522, 75, 1, 27, "Output"]
}, Open  ]],
Cell[22752, 526, 482, 8, 144, "Input"],
Cell[23237, 536, 56, 1, 27, "Input"],
Cell[23296, 539, 678, 15, 171, "Input"],
Cell[23977, 556, 240, 4, 59, "Input"],
Cell[24220, 562, 104, 2, 27, "Input"],
Cell[24327, 566, 60, 1, 27, "Input"],
Cell[24390, 569, 113, 2, 27, "Input"],
Cell[24506, 573, 128, 3, 27, "Input"],
Cell[24637, 578, 252, 4, 43, "Input"],
Cell[24892, 584, 469, 9, 75, "Input"],
Cell[25364, 595, 1460, 27, 367, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[26861, 627, 65, 0, 30, "Subsection"],

Cell[CellGroupData[{
Cell[26951, 631, 923, 20, 283, "Input"],
Cell[27877, 653, 50, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27964, 659, 593, 10, 223, "Input"],
Cell[28560, 671, 75, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[28672, 677, 55, 1, 27, "Input"],
Cell[28730, 680, 391, 11, 63, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[29158, 696, 226, 6, 59, "Input"],
Cell[29387, 704, 58, 1, 27, "Output"]
}, Open  ]],
Cell[29460, 708, 281, 4, 75, "Input"],

Cell[CellGroupData[{
Cell[29766, 716, 601, 10, 187, "Input"],
Cell[30370, 728, 101, 2, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30508, 735, 73, 2, 43, "Input"],
Cell[30584, 739, 52, 1, 27, "Output"],
Cell[30639, 742, 50, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[30726, 748, 106, 2, 43, "Input"],
Cell[30835, 752, 101, 2, 27, "Output"]
}, Open  ]],
Cell[30951, 757, 1500, 29, 507, "Input"],
Cell[32454, 788, 462, 8, 139, "Input"],

Cell[CellGroupData[{
Cell[32941, 800, 33, 0, 28, "Subsubsection"],
Cell[32977, 802, 53, 1, 27, "Input"],

Cell[CellGroupData[{
Cell[33055, 807, 106, 2, 43, "Input"],
Cell[33164, 811, 101, 2, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[33302, 818, 3630, 61, 1183, "Input"],
Cell[36935, 881, 365, 5, 33, "Message"]
}, Open  ]],
Cell[37315, 889, 621, 10, 203, "Input"],

Cell[CellGroupData[{
Cell[37961, 903, 238, 5, 91, "Input"],
Cell[38202, 910, 354, 5, 33, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[38593, 920, 40, 1, 27, "Input"],
Cell[38636, 923, 39, 1, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[38712, 929, 64, 1, 27, "Input"],
Cell[38779, 932, 64, 1, 27, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[38882, 938, 19, 0, 74, "Section"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

